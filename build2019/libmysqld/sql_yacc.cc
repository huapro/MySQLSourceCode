/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 24 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL  YYTHD->variables.character_set_client

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "sql_priv.h"
#include "unireg.h"                    // REQUIRED: for other includes
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "rpl_slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"
#include "lex_token.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    ulong val= *(F);                          \
    if (my_yyoverflow((B), (D), &val))        \
    {                                         \
      yyerror(YYTHD, (char*) (A));            \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_parse_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

/*
  Work around for broken code generated by bison 1.875.

  The code generated by bison 1.875a and later, bison 2.1 and bison 2.2 is ok.
  With bison 1.875 however, the generated code contains:
<pre>
  yyerrlab1:
  #if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
    MY_ATTRIBUTE ((__unused__))
  #endif
</pre>
  This usage of MY_ATTRIBUTE is illegal, so we remove it.
  See the following references for details:
  http://lists.gnu.org/archive/html/bug-bison/2004-02/msg00014.html
  http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14273
*/

#if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
#undef MY_ATTRIBUTE
#define MY_ATTRIBUTE(X)
#endif


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  @brief Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.
*/

void my_parse_error(const char *s)
{
  THD *thd= current_thd;
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  const char *yytext= lip->get_tok_start();
  if (!yytext)
    yytext= "";

  /* Push an error into the error stack */
  ErrConvString err(yytext, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->yylineno);
}

/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use my_parse_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_parse_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static bool
find_sys_var_null_base(THD *thd, struct sys_var_with_base *tmp)
{
  tmp->var= find_sys_var(thd, tmp->base_name.str, tmp->base_name.length);

  if (tmp->var == NULL)
    my_error(ER_UNKNOWN_SYSTEM_VARIABLE, MYF(0), tmp->base_name.str);
  else
    tmp->base_name= null_lex_str;

  return thd->is_error();
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param thd      the current thread
  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_system_variable(THD *thd, struct sys_var_with_base *tmp,
                    enum enum_var_type var_type, Item *val)
{
  set_var *var;
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (pctx && tmp->var == Sys_autocommit_ptr)
    sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

#ifdef HAVE_REPLICATION
  if (lex->uses_stored_routines() &&
      ((tmp->var == Sys_gtid_next_ptr
#ifdef HAVE_GTID_NEXT_LIST
       || tmp->var == Sys_gtid_next_list_ptr
#endif
       ) ||
       Sys_gtid_purged_ptr == tmp->var))
  {
    my_error(ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION, MYF(0),
             tmp->var->name.str);
    return TRUE;
  }
#endif

  if (val && val->type() == Item::FIELD_ITEM &&
      ((Item_field*)val)->table_name)
  {
    my_error(ER_WRONG_TYPE_FOR_VAR, MYF(0), tmp->var->name.str);
    return TRUE;
  }

  if (! (var= new set_var(var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return lex->var_list.push_back(var);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param thd                thread handler
  @param trigger_field_name the NEW-row field name
  @param expr_item          the value expression being assigned
  @param expr_query         the value expression query

  @return error status (true if error, false otherwise).
*/

static bool set_trigger_new_row(THD *thd,
                                LEX_STRING trigger_field_name,
                                Item *expr_item,
                                LEX_STRING expr_query)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  DBUG_ASSERT(expr_item);
  DBUG_ASSERT(sp->m_trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (sp->m_trg_chistics.event == TRG_EVENT_INSERT ||
               sp->m_trg_chistics.event == TRG_EVENT_UPDATE));

  Item_trigger_field *trg_fld=
    new (thd->mem_root) Item_trigger_field(lex->current_context(),
                                           Item_trigger_field::NEW_ROW,
                                           trigger_field_name.str,
                                           UPDATE_ACL, false);

  if (!trg_fld)
    return true;

  sp_instr_set_trigger_field *i=
    new (thd->mem_root)
      sp_instr_set_trigger_field(sp->instructions(),
                                 lex,
                                 trigger_field_name,
                                 trg_fld, expr_item,
                                 expr_query);

  if (!i)
    return true;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  sp->m_cur_instr_trig_field_items.link_in_list(trg_fld,
                                                &trg_fld->next_trg_field);

  return sp->add_instr(thd, i);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param thd              The current thread.
  @param name             The SP variable name.
  @param spv              The SP variable (optional).
  @param query_start_ptr  Start of the SQL-statement query string (optional).
  @param start_in_q       Start position of the SP variable name in the query.
  @param end_in_q         End position of the SP variable name in the query.

  @remark If spv is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
static Item_splocal* create_item_for_sp_var(THD *thd,
                                            LEX_STRING name,
                                            sp_variable *spv,
                                            const char *query_start_ptr,
                                            const char *start_in_q,
                                            const char *end_in_q)
{
  LEX *lex= thd->lex;
  uint spv_pos_in_query= 0;
  uint spv_len_in_query= 0;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* If necessary, look for the variable. */
  if (pctx && !spv)
    spv= pctx->find_variable(name, false);

  if (!spv)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(pctx && spv);

  if (query_start_ptr)
  {
    /* Position and length of the SP variable name in the query. */
    spv_pos_in_query= start_in_q - query_start_ptr;
    spv_len_in_query= end_in_q - start_in_q;
  }

  Item_splocal *item=
    new (thd->mem_root) Item_splocal(
      name, spv->offset, spv->type, spv_pos_in_query, spv_len_in_query);

#ifndef DBUG_OFF
  if (item)
    item->m_sp= lex->sphead;
#endif

  return item;
}


/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select statement
   uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
   is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool add_select_to_union_list(LEX *lex, bool is_union_distinct, 
                              bool is_top_level)
{
  /* 
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && lex->result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
    return TRUE;
  }
  if (lex->proc_analyse)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "SELECT ... PROCEDURE ANALYSE()");
    return TRUE;
  }
  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  /* This counter shouldn't be incremented for UNION parts */
  lex->nest_level--;
  if (mysql_new_select(lex, 0))
    return TRUE;
  mysql_init_select(lex);
  lex->current_select->linkage=UNION_TYPE;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    lex->current_select->master_unit()->union_distinct=
      lex->current_select;
  return FALSE;
}

/**
   @brief Initializes a SELECT_LEX for a query within parentheses (aka
   braces).

   @return false if successful, true if an error was reported. In the latter
   case parsing should stop.
 */
bool setup_select_in_parentheses(LEX *lex) 
{
  SELECT_LEX * sel= lex->current_select;
  if (sel->set_braces(1))
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      !sel->master_unit()->first_select()->braces &&
      sel->master_unit()->first_select()->linkage ==
      UNION_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      sel->olap != UNSPECIFIED_OLAP_TYPE &&
      sel->master_unit()->fake_select_lex)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "CUBE/ROLLUP", "ORDER BY");
    return TRUE;
  }
  /* select in braces, can't contain global parameters */
  if (sel->master_unit()->fake_select_lex)
    sel->master_unit()->global_parameters=
      sel->master_unit()->fake_select_lex;
  return FALSE;
}

static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, Key::Keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated, 
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}

/**
  Make a new string allocated on THD's mem-root.

  @param thd        thread handler.
  @param start_ptr  start of the new string.
  @param end_ptr    end of the new string.

  @return LEX_STRING object, containing a pointer to a newly
  constructed/allocated string, and its length. The pointer is NULL
  in case of out-of-memory error.
*/
static LEX_STRING make_string(THD *thd,
                              const char *start_ptr,
                              const char *end_ptr)
{
  LEX_STRING s;

  s.length= end_ptr - start_ptr;
  s.str= (char *) thd->alloc(s.length + 1);

  if (s.str)
    strmake(s.str, start_ptr, s.length);

  return s;
}

/*
  The start is either lip->ptr, if there was no lookahead, lip->tok_start
  otherwise.
*/
#define YY_TOKEN_START \
  ((yychar == YYEMPTY) ?  YYLIP->get_ptr() : YYLIP->get_tok_start())

/*
   The end is either lip->ptr, if there was no lookahead,
   or lip->tok_end otherwise.
*/

#define YY_TOKEN_END \
  ((yychar == YYEMPTY) ?  YYLIP->get_ptr() : YYLIP->get_tok_end())

/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  @see sp_create_assignment_instr

  @param thd        Thread context
  @param option_ptr Option-value-expression start pointer
*/

static void sp_create_assignment_lex(THD *thd, const char *option_ptr)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  /*
    We can come here in the following cases:

      1. it's a regular SET statement outside stored programs
        (lex->sphead is NULL);

      2. we're parsing a stored program normally (loading from mysql.proc, ...);

      3. we're re-parsing SET-statement with a user variable after meta-data
        change. It's guaranteed, that:
        - this SET-statement deals with a user/system variable (otherwise, it
          would be a different SP-instruction, and we would parse an expression);
        - this SET-statement has a single user/system variable assignment
          (that's how we generate sp_instr_stmt-instructions for SET-statements).
        So, in this case, even if lex->sphead is set, we should not process
        further.
  */

  if (!sp ||            // case #1
      sp->is_invoked()) // case #3
  {
    return;
  }

  LEX *old_lex= lex;
  sp->reset_lex(thd);
  lex= thd->lex;

  /* Set new LEX as if we at start of set rule. */
  mysql_init_select(lex);
  lex->sql_command= SQLCOM_SET_OPTION;
  lex->var_list.empty();
  lex->one_shot_set= 0;
  lex->autocommit= 0;

  /*
    It's a SET statement within SP. It will be either translated
    into one or more sp_instr_stmt instructions, or it will be
    sp_instr_set / sp_instr_set_trigger_field instructions.
    In any case, position of SP-variable can not be determined
    reliably. So, we set the start pointer of the current statement
    to NULL.
  */
  sp->m_parser_data.set_current_stmt_start_ptr(NULL);
  sp->m_parser_data.set_option_start_ptr(option_ptr);

  /* Inherit from outer lex. */
  lex->option_type= old_lex->option_type;
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param expr_end_ptr  Option-value-expression end pointer

  @return false if success, true otherwise.
*/

static bool sp_create_assignment_instr(THD *thd, const char *expr_end_ptr)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  /*
    We can come here in the following cases:

      1. it's a regular SET statement outside stored programs
        (lex->sphead is NULL);

      2. we're parsing a stored program normally (loading from mysql.proc, ...);

      3. we're re-parsing SET-statement with a user variable after meta-data
        change. It's guaranteed, that:
        - this SET-statement deals with a user/system variable (otherwise, it
          would be a different SP-instruction, and we would parse an expression);
        - this SET-statement has a single user/system variable assignment
          (that's how we generate sp_instr_stmt-instructions for SET-statements).
        So, in this case, even if lex->sphead is set, we should not process
        further.
  */

  if (!sp ||            // case #1
      sp->is_invoked()) // case #3
  {
    return false;
  }

  if (!lex->var_list.is_empty())
  {
    /* Extract expression string. */

    const char *expr_start_ptr= sp->m_parser_data.get_option_start_ptr();

    LEX_STRING expr;
    expr.str= (char *) expr_start_ptr;
    expr.length= expr_end_ptr - expr_start_ptr;

    /* Construct SET-statement query. */

    LEX_STRING set_stmt_query;

    set_stmt_query.length= expr.length + 3;
    set_stmt_query.str= (char *) thd->alloc(set_stmt_query.length + 1);

    if (!set_stmt_query.str)
      return true;

    strmake(strmake(set_stmt_query.str, "SET", 3),
            expr.str, expr.length);

    /*
      We have assignment to user or system variable or option setting, so we
      should construct sp_instr_stmt for it.
    */

    sp_instr_stmt *i=
      new (thd->mem_root)
        sp_instr_stmt(sp->instructions(), lex, set_stmt_query);

    if (!i || sp->add_instr(thd, i))
      return true;
  }

  /* Remember option_type of the currently parsed LEX. */
  enum_var_type inner_option_type= lex->option_type;

  if (sp->restore_lex(thd))
    return true;

  /* Copy option_type to outer lex in case it has changed. */
  thd->lex->option_type= inner_option_type;

  return false;
}

/**
  Compare a LEX_USER against the current user as defined by the exact user and
  host used during authentication.

  @param user A pointer to a user which needs to be matched against the
              current.

  @see SET PASSWORD rules

  @retval true The specified user is the authorized user
  @retval false The user doesn't match
*/

bool match_authorized_user(Security_context *ctx, LEX_USER *user)
{
  if(user->user.str && my_strcasecmp(system_charset_info,
                                     ctx->priv_user,
                                     user->user.str) == 0)
  {
    /*
      users match; let's compare hosts.
      1. first compare with the host we actually authorized,
      2. then see if we match the host mask of the priv_host
    */
    if (user->host.str && my_strcasecmp(system_charset_info,
                                        user->host.str,
                                        ctx->priv_host) == 0)
    {
      /* specified user exactly match the authorized user */
      return true;
    }
  }
  return false;
}



#line 1017 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_5_6_SOURCE_TARBALLS_NEW_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_5_6_SOURCE_TARBALLS_NEW_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACTION = 260,
    ADD = 261,
    ADDDATE_SYM = 262,
    AFTER_SYM = 263,
    AGAINST = 264,
    AGGREGATE_SYM = 265,
    ALGORITHM_SYM = 266,
    ALL = 267,
    ALTER = 268,
    ANALYSE_SYM = 269,
    ANALYZE_SYM = 270,
    AND_AND_SYM = 271,
    AND_SYM = 272,
    ANY_SYM = 273,
    ARCHIVED_SYM = 274,
    AS = 275,
    ASC = 276,
    ASCII_SYM = 277,
    ASENSITIVE_SYM = 278,
    AT_SYM = 279,
    AUTOEXTEND_SIZE_SYM = 280,
    AUTO_INC = 281,
    AVG_ROW_LENGTH = 282,
    AVG_SYM = 283,
    BACKUP_SYM = 284,
    BEFORE_SYM = 285,
    BEGIN_SYM = 286,
    BETWEEN_SYM = 287,
    BIGINT = 288,
    BINARY = 289,
    BINLOG_SYM = 290,
    BIN_NUM = 291,
    BIT_AND = 292,
    BIT_OR = 293,
    BIT_SYM = 294,
    BIT_XOR = 295,
    BLOB_SYM = 296,
    BLOCK_SYM = 297,
    BOOLEAN_SYM = 298,
    BOOL_SYM = 299,
    BOTH = 300,
    BTREE_SYM = 301,
    BY = 302,
    BYTE_SYM = 303,
    CACHE_SYM = 304,
    CALL_SYM = 305,
    CASCADE = 306,
    CASCADED = 307,
    CASE_SYM = 308,
    CAST_SYM = 309,
    CATALOG_NAME_SYM = 310,
    CHAIN_SYM = 311,
    CHANGE = 312,
    CHANGED = 313,
    CHANGED_PAGE_BITMAPS_SYM = 314,
    CHARSET = 315,
    CHAR_SYM = 316,
    CHECKSUM_SYM = 317,
    CHECK_SYM = 318,
    CIPHER_SYM = 319,
    CLASS_ORIGIN_SYM = 320,
    CLIENT_SYM = 321,
    CLIENT_STATS_SYM = 322,
    CLOSE_SYM = 323,
    CLUSTERING_SYM = 324,
    COALESCE = 325,
    CODE_SYM = 326,
    COLLATE_SYM = 327,
    COLLATION_SYM = 328,
    COLUMNS = 329,
    COLUMN_SYM = 330,
    COLUMN_FORMAT_SYM = 331,
    COLUMN_NAME_SYM = 332,
    COMMENT_SYM = 333,
    COMMITTED_SYM = 334,
    COMMIT_SYM = 335,
    COMPACT_SYM = 336,
    COMPLETION_SYM = 337,
    COMPRESSED_SYM = 338,
    COMPRESSION_DICTIONARY_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    DES_KEY_FILE = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FIRST_SYM = 439,
    FIXED_SYM = 440,
    FLOAT_NUM = 441,
    FLOAT_SYM = 442,
    FLUSH_SYM = 443,
    FORCE_SYM = 444,
    FOREIGN = 445,
    FOR_SYM = 446,
    FORMAT_SYM = 447,
    FOUND_SYM = 448,
    FROM = 449,
    FULL = 450,
    FULLTEXT_SYM = 451,
    FUNCTION_SYM = 452,
    GE = 453,
    GENERAL = 454,
    GEOMETRYCOLLECTION = 455,
    GEOMETRY_SYM = 456,
    GET_FORMAT = 457,
    GET_SYM = 458,
    GLOBAL_SYM = 459,
    GRANT = 460,
    GRANTS = 461,
    GROUP_SYM = 462,
    GROUP_CONCAT_SYM = 463,
    GT_SYM = 464,
    HANDLER_SYM = 465,
    HASH_SYM = 466,
    HAVING = 467,
    HELP_SYM = 468,
    HEX_NUM = 469,
    HIGH_PRIORITY = 470,
    HOST_SYM = 471,
    HOSTS_SYM = 472,
    HOUR_MICROSECOND_SYM = 473,
    HOUR_MINUTE_SYM = 474,
    HOUR_SECOND_SYM = 475,
    HOUR_SYM = 476,
    IDENT = 477,
    IDENTIFIED_SYM = 478,
    IDENT_QUOTED = 479,
    IF = 480,
    IGNORE_SYM = 481,
    IGNORE_SERVER_IDS_SYM = 482,
    IMPORT = 483,
    INDEXES = 484,
    INDEX_SYM = 485,
    INDEX_STATS_SYM = 486,
    INFILE = 487,
    INITIAL_SIZE_SYM = 488,
    INNER_SYM = 489,
    INOUT_SYM = 490,
    INSENSITIVE_SYM = 491,
    INSERT = 492,
    INSERT_METHOD = 493,
    INSTALL_SYM = 494,
    INTERVAL_SYM = 495,
    INTO = 496,
    INT_SYM = 497,
    INVOKER_SYM = 498,
    IN_SYM = 499,
    IO_AFTER_GTIDS = 500,
    IO_BEFORE_GTIDS = 501,
    IO_SYM = 502,
    IPC_SYM = 503,
    IS = 504,
    ISOLATION = 505,
    ISSUER_SYM = 506,
    ITERATE_SYM = 507,
    JOIN_SYM = 508,
    KEYS = 509,
    KEY_BLOCK_SIZE = 510,
    KEY_SYM = 511,
    KILL_SYM = 512,
    LANGUAGE_SYM = 513,
    LAST_SYM = 514,
    LE = 515,
    LEADING = 516,
    LEAVES = 517,
    LEAVE_SYM = 518,
    LEFT = 519,
    LESS_SYM = 520,
    LEVEL_SYM = 521,
    LEX_HOSTNAME = 522,
    LIKE = 523,
    LIMIT = 524,
    LINEAR_SYM = 525,
    LINES = 526,
    LINESTRING = 527,
    LIST_SYM = 528,
    LOAD = 529,
    LOCAL_SYM = 530,
    LOCATOR_SYM = 531,
    LOCKS_SYM = 532,
    LOCK_SYM = 533,
    LOGFILE_SYM = 534,
    LOGS_SYM = 535,
    LONGBLOB = 536,
    LONGTEXT = 537,
    LONG_NUM = 538,
    LONG_SYM = 539,
    LOOP_SYM = 540,
    LOW_PRIORITY = 541,
    LT = 542,
    MASTER_AUTO_POSITION_SYM = 543,
    MASTER_BIND_SYM = 544,
    MASTER_CONNECT_RETRY_SYM = 545,
    MASTER_DELAY_SYM = 546,
    MASTER_HOST_SYM = 547,
    MASTER_LOG_FILE_SYM = 548,
    MASTER_LOG_POS_SYM = 549,
    MASTER_PASSWORD_SYM = 550,
    MASTER_PORT_SYM = 551,
    MASTER_RETRY_COUNT_SYM = 552,
    MASTER_SERVER_ID_SYM = 553,
    MASTER_SSL_CAPATH_SYM = 554,
    MASTER_SSL_CA_SYM = 555,
    MASTER_SSL_CERT_SYM = 556,
    MASTER_SSL_CIPHER_SYM = 557,
    MASTER_SSL_CRL_SYM = 558,
    MASTER_SSL_CRLPATH_SYM = 559,
    MASTER_SSL_KEY_SYM = 560,
    MASTER_SSL_SYM = 561,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 562,
    MASTER_SYM = 563,
    MASTER_USER_SYM = 564,
    MASTER_HEARTBEAT_PERIOD_SYM = 565,
    MATCH = 566,
    MAX_CONNECTIONS_PER_HOUR = 567,
    MAX_QUERIES_PER_HOUR = 568,
    MAX_ROWS = 569,
    MAX_SIZE_SYM = 570,
    MAX_SYM = 571,
    MAX_UPDATES_PER_HOUR = 572,
    MAX_USER_CONNECTIONS_SYM = 573,
    MAX_VALUE_SYM = 574,
    MEDIUMBLOB = 575,
    MEDIUMINT = 576,
    MEDIUMTEXT = 577,
    MEDIUM_SYM = 578,
    MEMORY_SYM = 579,
    MERGE_SYM = 580,
    MESSAGE_TEXT_SYM = 581,
    MICROSECOND_SYM = 582,
    MIGRATE_SYM = 583,
    MINUTE_MICROSECOND_SYM = 584,
    MINUTE_SECOND_SYM = 585,
    MINUTE_SYM = 586,
    MIN_ROWS = 587,
    MIN_SYM = 588,
    MODE_SYM = 589,
    MODIFIES_SYM = 590,
    MODIFY_SYM = 591,
    MOD_SYM = 592,
    MONTH_SYM = 593,
    MULTILINESTRING = 594,
    MULTIPOINT = 595,
    MULTIPOLYGON = 596,
    MUTEX_SYM = 597,
    MYSQL_ERRNO_SYM = 598,
    NAMES_SYM = 599,
    NAME_SYM = 600,
    NATIONAL_SYM = 601,
    NATURAL = 602,
    NCHAR_STRING = 603,
    NCHAR_SYM = 604,
    NDBCLUSTER_SYM = 605,
    NE = 606,
    NEG = 607,
    NEW_SYM = 608,
    NEXT_SYM = 609,
    NODEGROUP_SYM = 610,
    NONE_SYM = 611,
    NOT2_SYM = 612,
    NOT_SYM = 613,
    NOW_SYM = 614,
    NO_SYM = 615,
    NO_WAIT_SYM = 616,
    NO_WRITE_TO_BINLOG = 617,
    NULL_SYM = 618,
    NUM = 619,
    NUMBER_SYM = 620,
    NUMERIC_SYM = 621,
    NVARCHAR_SYM = 622,
    OFFSET_SYM = 623,
    OLD_PASSWORD = 624,
    ON = 625,
    ONE_SYM = 626,
    ONLY_SYM = 627,
    OPEN_SYM = 628,
    OPTIMIZE = 629,
    OPTIONS_SYM = 630,
    OPTION = 631,
    OPTIONALLY = 632,
    OR2_SYM = 633,
    ORDER_SYM = 634,
    OR_OR_SYM = 635,
    OR_SYM = 636,
    OUTER = 637,
    OUTFILE = 638,
    OUT_SYM = 639,
    OWNER_SYM = 640,
    PACK_KEYS_SYM = 641,
    PAGE_SYM = 642,
    PARAM_MARKER = 643,
    PARSER_SYM = 644,
    PARTIAL = 645,
    PARTITION_SYM = 646,
    PARTITIONS_SYM = 647,
    PARTITIONING_SYM = 648,
    PASSWORD = 649,
    PHASE_SYM = 650,
    PLUGIN_DIR_SYM = 651,
    PLUGIN_SYM = 652,
    PLUGINS_SYM = 653,
    POINT_SYM = 654,
    POLYGON = 655,
    PORT_SYM = 656,
    POSITION_SYM = 657,
    PRECISION = 658,
    PREPARE_SYM = 659,
    PRESERVE_SYM = 660,
    PREV_SYM = 661,
    PRIMARY_SYM = 662,
    PRIVILEGES = 663,
    PROCEDURE_SYM = 664,
    PROCESS = 665,
    PROCESSLIST_SYM = 666,
    PROFILE_SYM = 667,
    PROFILES_SYM = 668,
    PROXY_SYM = 669,
    PURGE = 670,
    QUARTER_SYM = 671,
    QUERY_SYM = 672,
    QUICK = 673,
    RANGE_SYM = 674,
    READS_SYM = 675,
    READ_ONLY_SYM = 676,
    READ_SYM = 677,
    READ_WRITE_SYM = 678,
    REAL = 679,
    REBUILD_SYM = 680,
    RECOVER_SYM = 681,
    REDOFILE_SYM = 682,
    REDO_BUFFER_SIZE_SYM = 683,
    REDUNDANT_SYM = 684,
    REFERENCES = 685,
    REGEXP = 686,
    RELAY = 687,
    RELAYLOG_SYM = 688,
    RELAY_LOG_FILE_SYM = 689,
    RELAY_LOG_POS_SYM = 690,
    RELAY_THREAD = 691,
    RELEASE_SYM = 692,
    RELOAD = 693,
    REMOVE_SYM = 694,
    RENAME = 695,
    REORGANIZE_SYM = 696,
    REPAIR = 697,
    REPEATABLE_SYM = 698,
    REPEAT_SYM = 699,
    REPLACE = 700,
    REPLICATION = 701,
    REQUIRE_SYM = 702,
    RESET_SYM = 703,
    RESIGNAL_SYM = 704,
    RESOURCES = 705,
    RESTORE_SYM = 706,
    RESTRICT = 707,
    RESUME_SYM = 708,
    RETURNED_SQLSTATE_SYM = 709,
    RETURNS_SYM = 710,
    RETURN_SYM = 711,
    REVERSE_SYM = 712,
    REVOKE = 713,
    RIGHT = 714,
    ROLLBACK_SYM = 715,
    ROLLUP_SYM = 716,
    ROUTINE_SYM = 717,
    ROWS_SYM = 718,
    ROW_FORMAT_SYM = 719,
    ROW_SYM = 720,
    ROW_COUNT_SYM = 721,
    RTREE_SYM = 722,
    SAVEPOINT_SYM = 723,
    SCHEDULE_SYM = 724,
    SCHEMA_NAME_SYM = 725,
    SECOND_MICROSECOND_SYM = 726,
    SECOND_SYM = 727,
    SECURITY_SYM = 728,
    SELECT_SYM = 729,
    SENSITIVE_SYM = 730,
    SEPARATOR_SYM = 731,
    SERIALIZABLE_SYM = 732,
    SERIAL_SYM = 733,
    SESSION_SYM = 734,
    SERVER_SYM = 735,
    SERVER_OPTIONS = 736,
    SET = 737,
    SET_VAR = 738,
    SHARE_SYM = 739,
    SHIFT_LEFT = 740,
    SHIFT_RIGHT = 741,
    SHOW = 742,
    SHUTDOWN = 743,
    SIGNAL_SYM = 744,
    SIGNED_SYM = 745,
    SIMPLE_SYM = 746,
    SLAVE = 747,
    SLOW = 748,
    SMALLINT = 749,
    SNAPSHOT_SYM = 750,
    SOCKET_SYM = 751,
    SONAME_SYM = 752,
    SOUNDS_SYM = 753,
    SOURCE_SYM = 754,
    SPATIAL_SYM = 755,
    SPECIFIC_SYM = 756,
    SQLEXCEPTION_SYM = 757,
    SQLSTATE_SYM = 758,
    SQLWARNING_SYM = 759,
    SQL_AFTER_GTIDS = 760,
    SQL_AFTER_MTS_GAPS = 761,
    SQL_BEFORE_GTIDS = 762,
    SQL_BIG_RESULT = 763,
    SQL_BUFFER_RESULT = 764,
    SQL_CACHE_SYM = 765,
    SQL_CALC_FOUND_ROWS = 766,
    SQL_NO_CACHE_SYM = 767,
    SQL_SMALL_RESULT = 768,
    SQL_SYM = 769,
    SQL_THREAD = 770,
    SSL_SYM = 771,
    STARTING = 772,
    STARTS_SYM = 773,
    START_SYM = 774,
    STATEMENT_SYM = 775,
    STATS_AUTO_RECALC_SYM = 776,
    STATS_PERSISTENT_SYM = 777,
    STATS_SAMPLE_PAGES_SYM = 778,
    STATUS_SYM = 779,
    NOLOCK_SYM = 780,
    NONBLOCKING_SYM = 781,
    STDDEV_SAMP_SYM = 782,
    STD_SYM = 783,
    STOP_SYM = 784,
    STORAGE_SYM = 785,
    STRAIGHT_JOIN = 786,
    STRING_SYM = 787,
    SUBCLASS_ORIGIN_SYM = 788,
    SUBDATE_SYM = 789,
    SUBJECT_SYM = 790,
    SUBPARTITIONS_SYM = 791,
    SUBPARTITION_SYM = 792,
    SUBSTRING = 793,
    SUM_SYM = 794,
    SUPER_SYM = 795,
    SUSPEND_SYM = 796,
    SWAPS_SYM = 797,
    SWITCHES_SYM = 798,
    SYSDATE = 799,
    TABLES = 800,
    TABLESPACE = 801,
    TABLE_REF_PRIORITY = 802,
    TABLE_SYM = 803,
    TABLE_STATS_SYM = 804,
    TABLE_CHECKSUM_SYM = 805,
    TABLE_NAME_SYM = 806,
    TEMPORARY = 807,
    TEMPTABLE_SYM = 808,
    TERMINATED = 809,
    TEXT_STRING = 810,
    TEXT_SYM = 811,
    THAN_SYM = 812,
    THEN_SYM = 813,
    THREAD_STATS_SYM = 814,
    TIMESTAMP = 815,
    TIMESTAMP_ADD = 816,
    TIMESTAMP_DIFF = 817,
    TIME_SYM = 818,
    TINYBLOB = 819,
    TINYINT = 820,
    TINYTEXT = 821,
    TO_SYM = 822,
    TOKU_UNCOMPRESSED_SYM = 823,
    TOKU_ZLIB_SYM = 824,
    TOKU_SNAPPY_SYM = 825,
    TOKU_QUICKLZ_SYM = 826,
    TOKU_LZMA_SYM = 827,
    TOKU_FAST_SYM = 828,
    TOKU_SMALL_SYM = 829,
    TOKU_DEFAULT_SYM = 830,
    TRAILING = 831,
    TRANSACTION_SYM = 832,
    TRIGGERS_SYM = 833,
    TRIGGER_SYM = 834,
    TRIM = 835,
    TRUE_SYM = 836,
    TRUNCATE_SYM = 837,
    TYPES_SYM = 838,
    TYPE_SYM = 839,
    UDF_RETURNS_SYM = 840,
    ULONGLONG_NUM = 841,
    UNCOMMITTED_SYM = 842,
    UNDEFINED_SYM = 843,
    UNDERSCORE_CHARSET = 844,
    UNDOFILE_SYM = 845,
    UNDO_BUFFER_SIZE_SYM = 846,
    UNDO_SYM = 847,
    UNICODE_SYM = 848,
    UNINSTALL_SYM = 849,
    UNION_SYM = 850,
    UNIQUE_SYM = 851,
    UNKNOWN_SYM = 852,
    UNLOCK_SYM = 853,
    UNSIGNED = 854,
    UNTIL_SYM = 855,
    UPDATE_SYM = 856,
    UPGRADE_SYM = 857,
    USAGE = 858,
    USER = 859,
    USER_STATS_SYM = 860,
    USE_FRM = 861,
    USE_SYM = 862,
    USING = 863,
    UTC_DATE_SYM = 864,
    UTC_TIMESTAMP_SYM = 865,
    UTC_TIME_SYM = 866,
    VALUES = 867,
    VALUE_SYM = 868,
    VARBINARY = 869,
    VARCHAR = 870,
    VARIABLES = 871,
    VARIANCE_SYM = 872,
    VARYING = 873,
    VAR_SAMP_SYM = 874,
    VIEW_SYM = 875,
    WAIT_SYM = 876,
    WARNINGS = 877,
    WEEK_SYM = 878,
    WEIGHT_STRING_SYM = 879,
    WHEN_SYM = 880,
    WHERE = 881,
    WHILE_SYM = 882,
    WITH = 883,
    WITH_CUBE_SYM = 884,
    WITH_ROLLUP_SYM = 885,
    WORK_SYM = 886,
    WRAPPER_SYM = 887,
    WRITE_SYM = 888,
    X509_SYM = 889,
    XA_SYM = 890,
    XML_SYM = 891,
    XOR = 892,
    YEAR_MONTH_SYM = 893,
    YEAR_SYM = 894,
    ZEROFILL = 895
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYSE_SYM 269
#define ANALYZE_SYM 270
#define AND_AND_SYM 271
#define AND_SYM 272
#define ANY_SYM 273
#define ARCHIVED_SYM 274
#define AS 275
#define ASC 276
#define ASCII_SYM 277
#define ASENSITIVE_SYM 278
#define AT_SYM 279
#define AUTOEXTEND_SIZE_SYM 280
#define AUTO_INC 281
#define AVG_ROW_LENGTH 282
#define AVG_SYM 283
#define BACKUP_SYM 284
#define BEFORE_SYM 285
#define BEGIN_SYM 286
#define BETWEEN_SYM 287
#define BIGINT 288
#define BINARY 289
#define BINLOG_SYM 290
#define BIN_NUM 291
#define BIT_AND 292
#define BIT_OR 293
#define BIT_SYM 294
#define BIT_XOR 295
#define BLOB_SYM 296
#define BLOCK_SYM 297
#define BOOLEAN_SYM 298
#define BOOL_SYM 299
#define BOTH 300
#define BTREE_SYM 301
#define BY 302
#define BYTE_SYM 303
#define CACHE_SYM 304
#define CALL_SYM 305
#define CASCADE 306
#define CASCADED 307
#define CASE_SYM 308
#define CAST_SYM 309
#define CATALOG_NAME_SYM 310
#define CHAIN_SYM 311
#define CHANGE 312
#define CHANGED 313
#define CHANGED_PAGE_BITMAPS_SYM 314
#define CHARSET 315
#define CHAR_SYM 316
#define CHECKSUM_SYM 317
#define CHECK_SYM 318
#define CIPHER_SYM 319
#define CLASS_ORIGIN_SYM 320
#define CLIENT_SYM 321
#define CLIENT_STATS_SYM 322
#define CLOSE_SYM 323
#define CLUSTERING_SYM 324
#define COALESCE 325
#define CODE_SYM 326
#define COLLATE_SYM 327
#define COLLATION_SYM 328
#define COLUMNS 329
#define COLUMN_SYM 330
#define COLUMN_FORMAT_SYM 331
#define COLUMN_NAME_SYM 332
#define COMMENT_SYM 333
#define COMMITTED_SYM 334
#define COMMIT_SYM 335
#define COMPACT_SYM 336
#define COMPLETION_SYM 337
#define COMPRESSED_SYM 338
#define COMPRESSION_DICTIONARY_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define DES_KEY_FILE 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FIRST_SYM 439
#define FIXED_SYM 440
#define FLOAT_NUM 441
#define FLOAT_SYM 442
#define FLUSH_SYM 443
#define FORCE_SYM 444
#define FOREIGN 445
#define FOR_SYM 446
#define FORMAT_SYM 447
#define FOUND_SYM 448
#define FROM 449
#define FULL 450
#define FULLTEXT_SYM 451
#define FUNCTION_SYM 452
#define GE 453
#define GENERAL 454
#define GEOMETRYCOLLECTION 455
#define GEOMETRY_SYM 456
#define GET_FORMAT 457
#define GET_SYM 458
#define GLOBAL_SYM 459
#define GRANT 460
#define GRANTS 461
#define GROUP_SYM 462
#define GROUP_CONCAT_SYM 463
#define GT_SYM 464
#define HANDLER_SYM 465
#define HASH_SYM 466
#define HAVING 467
#define HELP_SYM 468
#define HEX_NUM 469
#define HIGH_PRIORITY 470
#define HOST_SYM 471
#define HOSTS_SYM 472
#define HOUR_MICROSECOND_SYM 473
#define HOUR_MINUTE_SYM 474
#define HOUR_SECOND_SYM 475
#define HOUR_SYM 476
#define IDENT 477
#define IDENTIFIED_SYM 478
#define IDENT_QUOTED 479
#define IF 480
#define IGNORE_SYM 481
#define IGNORE_SERVER_IDS_SYM 482
#define IMPORT 483
#define INDEXES 484
#define INDEX_SYM 485
#define INDEX_STATS_SYM 486
#define INFILE 487
#define INITIAL_SIZE_SYM 488
#define INNER_SYM 489
#define INOUT_SYM 490
#define INSENSITIVE_SYM 491
#define INSERT 492
#define INSERT_METHOD 493
#define INSTALL_SYM 494
#define INTERVAL_SYM 495
#define INTO 496
#define INT_SYM 497
#define INVOKER_SYM 498
#define IN_SYM 499
#define IO_AFTER_GTIDS 500
#define IO_BEFORE_GTIDS 501
#define IO_SYM 502
#define IPC_SYM 503
#define IS 504
#define ISOLATION 505
#define ISSUER_SYM 506
#define ITERATE_SYM 507
#define JOIN_SYM 508
#define KEYS 509
#define KEY_BLOCK_SIZE 510
#define KEY_SYM 511
#define KILL_SYM 512
#define LANGUAGE_SYM 513
#define LAST_SYM 514
#define LE 515
#define LEADING 516
#define LEAVES 517
#define LEAVE_SYM 518
#define LEFT 519
#define LESS_SYM 520
#define LEVEL_SYM 521
#define LEX_HOSTNAME 522
#define LIKE 523
#define LIMIT 524
#define LINEAR_SYM 525
#define LINES 526
#define LINESTRING 527
#define LIST_SYM 528
#define LOAD 529
#define LOCAL_SYM 530
#define LOCATOR_SYM 531
#define LOCKS_SYM 532
#define LOCK_SYM 533
#define LOGFILE_SYM 534
#define LOGS_SYM 535
#define LONGBLOB 536
#define LONGTEXT 537
#define LONG_NUM 538
#define LONG_SYM 539
#define LOOP_SYM 540
#define LOW_PRIORITY 541
#define LT 542
#define MASTER_AUTO_POSITION_SYM 543
#define MASTER_BIND_SYM 544
#define MASTER_CONNECT_RETRY_SYM 545
#define MASTER_DELAY_SYM 546
#define MASTER_HOST_SYM 547
#define MASTER_LOG_FILE_SYM 548
#define MASTER_LOG_POS_SYM 549
#define MASTER_PASSWORD_SYM 550
#define MASTER_PORT_SYM 551
#define MASTER_RETRY_COUNT_SYM 552
#define MASTER_SERVER_ID_SYM 553
#define MASTER_SSL_CAPATH_SYM 554
#define MASTER_SSL_CA_SYM 555
#define MASTER_SSL_CERT_SYM 556
#define MASTER_SSL_CIPHER_SYM 557
#define MASTER_SSL_CRL_SYM 558
#define MASTER_SSL_CRLPATH_SYM 559
#define MASTER_SSL_KEY_SYM 560
#define MASTER_SSL_SYM 561
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 562
#define MASTER_SYM 563
#define MASTER_USER_SYM 564
#define MASTER_HEARTBEAT_PERIOD_SYM 565
#define MATCH 566
#define MAX_CONNECTIONS_PER_HOUR 567
#define MAX_QUERIES_PER_HOUR 568
#define MAX_ROWS 569
#define MAX_SIZE_SYM 570
#define MAX_SYM 571
#define MAX_UPDATES_PER_HOUR 572
#define MAX_USER_CONNECTIONS_SYM 573
#define MAX_VALUE_SYM 574
#define MEDIUMBLOB 575
#define MEDIUMINT 576
#define MEDIUMTEXT 577
#define MEDIUM_SYM 578
#define MEMORY_SYM 579
#define MERGE_SYM 580
#define MESSAGE_TEXT_SYM 581
#define MICROSECOND_SYM 582
#define MIGRATE_SYM 583
#define MINUTE_MICROSECOND_SYM 584
#define MINUTE_SECOND_SYM 585
#define MINUTE_SYM 586
#define MIN_ROWS 587
#define MIN_SYM 588
#define MODE_SYM 589
#define MODIFIES_SYM 590
#define MODIFY_SYM 591
#define MOD_SYM 592
#define MONTH_SYM 593
#define MULTILINESTRING 594
#define MULTIPOINT 595
#define MULTIPOLYGON 596
#define MUTEX_SYM 597
#define MYSQL_ERRNO_SYM 598
#define NAMES_SYM 599
#define NAME_SYM 600
#define NATIONAL_SYM 601
#define NATURAL 602
#define NCHAR_STRING 603
#define NCHAR_SYM 604
#define NDBCLUSTER_SYM 605
#define NE 606
#define NEG 607
#define NEW_SYM 608
#define NEXT_SYM 609
#define NODEGROUP_SYM 610
#define NONE_SYM 611
#define NOT2_SYM 612
#define NOT_SYM 613
#define NOW_SYM 614
#define NO_SYM 615
#define NO_WAIT_SYM 616
#define NO_WRITE_TO_BINLOG 617
#define NULL_SYM 618
#define NUM 619
#define NUMBER_SYM 620
#define NUMERIC_SYM 621
#define NVARCHAR_SYM 622
#define OFFSET_SYM 623
#define OLD_PASSWORD 624
#define ON 625
#define ONE_SYM 626
#define ONLY_SYM 627
#define OPEN_SYM 628
#define OPTIMIZE 629
#define OPTIONS_SYM 630
#define OPTION 631
#define OPTIONALLY 632
#define OR2_SYM 633
#define ORDER_SYM 634
#define OR_OR_SYM 635
#define OR_SYM 636
#define OUTER 637
#define OUTFILE 638
#define OUT_SYM 639
#define OWNER_SYM 640
#define PACK_KEYS_SYM 641
#define PAGE_SYM 642
#define PARAM_MARKER 643
#define PARSER_SYM 644
#define PARTIAL 645
#define PARTITION_SYM 646
#define PARTITIONS_SYM 647
#define PARTITIONING_SYM 648
#define PASSWORD 649
#define PHASE_SYM 650
#define PLUGIN_DIR_SYM 651
#define PLUGIN_SYM 652
#define PLUGINS_SYM 653
#define POINT_SYM 654
#define POLYGON 655
#define PORT_SYM 656
#define POSITION_SYM 657
#define PRECISION 658
#define PREPARE_SYM 659
#define PRESERVE_SYM 660
#define PREV_SYM 661
#define PRIMARY_SYM 662
#define PRIVILEGES 663
#define PROCEDURE_SYM 664
#define PROCESS 665
#define PROCESSLIST_SYM 666
#define PROFILE_SYM 667
#define PROFILES_SYM 668
#define PROXY_SYM 669
#define PURGE 670
#define QUARTER_SYM 671
#define QUERY_SYM 672
#define QUICK 673
#define RANGE_SYM 674
#define READS_SYM 675
#define READ_ONLY_SYM 676
#define READ_SYM 677
#define READ_WRITE_SYM 678
#define REAL 679
#define REBUILD_SYM 680
#define RECOVER_SYM 681
#define REDOFILE_SYM 682
#define REDO_BUFFER_SIZE_SYM 683
#define REDUNDANT_SYM 684
#define REFERENCES 685
#define REGEXP 686
#define RELAY 687
#define RELAYLOG_SYM 688
#define RELAY_LOG_FILE_SYM 689
#define RELAY_LOG_POS_SYM 690
#define RELAY_THREAD 691
#define RELEASE_SYM 692
#define RELOAD 693
#define REMOVE_SYM 694
#define RENAME 695
#define REORGANIZE_SYM 696
#define REPAIR 697
#define REPEATABLE_SYM 698
#define REPEAT_SYM 699
#define REPLACE 700
#define REPLICATION 701
#define REQUIRE_SYM 702
#define RESET_SYM 703
#define RESIGNAL_SYM 704
#define RESOURCES 705
#define RESTORE_SYM 706
#define RESTRICT 707
#define RESUME_SYM 708
#define RETURNED_SQLSTATE_SYM 709
#define RETURNS_SYM 710
#define RETURN_SYM 711
#define REVERSE_SYM 712
#define REVOKE 713
#define RIGHT 714
#define ROLLBACK_SYM 715
#define ROLLUP_SYM 716
#define ROUTINE_SYM 717
#define ROWS_SYM 718
#define ROW_FORMAT_SYM 719
#define ROW_SYM 720
#define ROW_COUNT_SYM 721
#define RTREE_SYM 722
#define SAVEPOINT_SYM 723
#define SCHEDULE_SYM 724
#define SCHEMA_NAME_SYM 725
#define SECOND_MICROSECOND_SYM 726
#define SECOND_SYM 727
#define SECURITY_SYM 728
#define SELECT_SYM 729
#define SENSITIVE_SYM 730
#define SEPARATOR_SYM 731
#define SERIALIZABLE_SYM 732
#define SERIAL_SYM 733
#define SESSION_SYM 734
#define SERVER_SYM 735
#define SERVER_OPTIONS 736
#define SET 737
#define SET_VAR 738
#define SHARE_SYM 739
#define SHIFT_LEFT 740
#define SHIFT_RIGHT 741
#define SHOW 742
#define SHUTDOWN 743
#define SIGNAL_SYM 744
#define SIGNED_SYM 745
#define SIMPLE_SYM 746
#define SLAVE 747
#define SLOW 748
#define SMALLINT 749
#define SNAPSHOT_SYM 750
#define SOCKET_SYM 751
#define SONAME_SYM 752
#define SOUNDS_SYM 753
#define SOURCE_SYM 754
#define SPATIAL_SYM 755
#define SPECIFIC_SYM 756
#define SQLEXCEPTION_SYM 757
#define SQLSTATE_SYM 758
#define SQLWARNING_SYM 759
#define SQL_AFTER_GTIDS 760
#define SQL_AFTER_MTS_GAPS 761
#define SQL_BEFORE_GTIDS 762
#define SQL_BIG_RESULT 763
#define SQL_BUFFER_RESULT 764
#define SQL_CACHE_SYM 765
#define SQL_CALC_FOUND_ROWS 766
#define SQL_NO_CACHE_SYM 767
#define SQL_SMALL_RESULT 768
#define SQL_SYM 769
#define SQL_THREAD 770
#define SSL_SYM 771
#define STARTING 772
#define STARTS_SYM 773
#define START_SYM 774
#define STATEMENT_SYM 775
#define STATS_AUTO_RECALC_SYM 776
#define STATS_PERSISTENT_SYM 777
#define STATS_SAMPLE_PAGES_SYM 778
#define STATUS_SYM 779
#define NOLOCK_SYM 780
#define NONBLOCKING_SYM 781
#define STDDEV_SAMP_SYM 782
#define STD_SYM 783
#define STOP_SYM 784
#define STORAGE_SYM 785
#define STRAIGHT_JOIN 786
#define STRING_SYM 787
#define SUBCLASS_ORIGIN_SYM 788
#define SUBDATE_SYM 789
#define SUBJECT_SYM 790
#define SUBPARTITIONS_SYM 791
#define SUBPARTITION_SYM 792
#define SUBSTRING 793
#define SUM_SYM 794
#define SUPER_SYM 795
#define SUSPEND_SYM 796
#define SWAPS_SYM 797
#define SWITCHES_SYM 798
#define SYSDATE 799
#define TABLES 800
#define TABLESPACE 801
#define TABLE_REF_PRIORITY 802
#define TABLE_SYM 803
#define TABLE_STATS_SYM 804
#define TABLE_CHECKSUM_SYM 805
#define TABLE_NAME_SYM 806
#define TEMPORARY 807
#define TEMPTABLE_SYM 808
#define TERMINATED 809
#define TEXT_STRING 810
#define TEXT_SYM 811
#define THAN_SYM 812
#define THEN_SYM 813
#define THREAD_STATS_SYM 814
#define TIMESTAMP 815
#define TIMESTAMP_ADD 816
#define TIMESTAMP_DIFF 817
#define TIME_SYM 818
#define TINYBLOB 819
#define TINYINT 820
#define TINYTEXT 821
#define TO_SYM 822
#define TOKU_UNCOMPRESSED_SYM 823
#define TOKU_ZLIB_SYM 824
#define TOKU_SNAPPY_SYM 825
#define TOKU_QUICKLZ_SYM 826
#define TOKU_LZMA_SYM 827
#define TOKU_FAST_SYM 828
#define TOKU_SMALL_SYM 829
#define TOKU_DEFAULT_SYM 830
#define TRAILING 831
#define TRANSACTION_SYM 832
#define TRIGGERS_SYM 833
#define TRIGGER_SYM 834
#define TRIM 835
#define TRUE_SYM 836
#define TRUNCATE_SYM 837
#define TYPES_SYM 838
#define TYPE_SYM 839
#define UDF_RETURNS_SYM 840
#define ULONGLONG_NUM 841
#define UNCOMMITTED_SYM 842
#define UNDEFINED_SYM 843
#define UNDERSCORE_CHARSET 844
#define UNDOFILE_SYM 845
#define UNDO_BUFFER_SIZE_SYM 846
#define UNDO_SYM 847
#define UNICODE_SYM 848
#define UNINSTALL_SYM 849
#define UNION_SYM 850
#define UNIQUE_SYM 851
#define UNKNOWN_SYM 852
#define UNLOCK_SYM 853
#define UNSIGNED 854
#define UNTIL_SYM 855
#define UPDATE_SYM 856
#define UPGRADE_SYM 857
#define USAGE 858
#define USER 859
#define USER_STATS_SYM 860
#define USE_FRM 861
#define USE_SYM 862
#define USING 863
#define UTC_DATE_SYM 864
#define UTC_TIMESTAMP_SYM 865
#define UTC_TIME_SYM 866
#define VALUES 867
#define VALUE_SYM 868
#define VARBINARY 869
#define VARCHAR 870
#define VARIABLES 871
#define VARIANCE_SYM 872
#define VARYING 873
#define VAR_SAMP_SYM 874
#define VIEW_SYM 875
#define WAIT_SYM 876
#define WARNINGS 877
#define WEEK_SYM 878
#define WEIGHT_STRING_SYM 879
#define WHEN_SYM 880
#define WHERE 881
#define WHILE_SYM 882
#define WITH 883
#define WITH_CUBE_SYM 884
#define WITH_ROLLUP_SYM 885
#define WORK_SYM 886
#define WRAPPER_SYM 887
#define WRITE_SYM 888
#define X509_SYM 889
#define XA_SYM 890
#define XML_SYM 891
#define XOR 892
#define YEAR_MONTH_SYM 893
#define YEAR_SYM 894
#define ZEROFILL 895

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

union YYSTYPE
{
#line 968 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_CSTRING lex_cstr;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  Key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_ha_read_modes ha_read_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  const CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  class sp_condition_value *spcondvalue;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  LEX *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
  enum index_hint_type index_hint;
  enum enum_filetype filetype;
  enum Foreign_key::fk_option m_fk_option;
  enum enum_yes_no_unknown m_yes_no_unk;
  Diag_condition_item_name diag_condition_item_name;
  Diagnostics_information::Which_area diag_area;
  Diagnostics_information *diag_info;
  Statement_information_item *stmt_info_item;
  Statement_information_item::Name stmt_info_item_name;
  List<Statement_information_item> *stmt_info_list;
  Condition_information_item *cond_info_item;
  Condition_information_item::Name cond_info_item_name;
  List<Condition_information_item> *cond_info_list;
  bool is_not_empty;

#line 2396 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:355  */
};

typedef union YYSTYPE YYSTYPE;
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int MYSQLparse (class THD *YYTHD);

#endif /* !YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_5_6_SOURCE_TARBALLS_NEW_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 1027 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);

#line 2415 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  627
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   57969

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  660
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  963
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2737
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  4628

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   895

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   653,     2,     2,     2,   647,   642,     2,
     650,   651,   645,   644,   652,   643,   658,   646,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   659,   656,
       2,     2,     2,     2,   657,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   648,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   654,   641,   655,   649,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1995,  1995,  2008,  2007,  2032,  2039,  2041,  2045,  2046,
    2051,  2052,  2053,  2054,  2055,  2056,  2057,  2058,  2059,  2060,
    2061,  2062,  2063,  2064,  2065,  2066,  2067,  2068,  2069,  2070,
    2071,  2072,  2073,  2074,  2075,  2076,  2077,  2078,  2079,  2080,
    2081,  2082,  2083,  2084,  2085,  2086,  2087,  2088,  2089,  2090,
    2091,  2092,  2093,  2094,  2095,  2096,  2097,  2098,  2099,  2100,
    2101,  2102,  2106,  2116,  2117,  2121,  2141,  2148,  2159,  2158,
    2169,  2171,  2175,  2176,  2180,  2193,  2192,  2212,  2211,  2229,
    2230,  2234,  2238,  2242,  2246,  2251,  2255,  2259,  2264,  2277,
    2282,  2286,  2290,  2294,  2298,  2302,  2307,  2311,  2316,  2347,
    2352,  2359,  2362,  2364,  2365,  2369,  2383,  2387,  2403,  2407,
    2420,  2419,  2466,  2471,  2465,  2478,  2483,  2476,  2490,  2495,
    2488,  2501,  2500,  2513,  2512,  2520,  2524,  2528,  2532,  2536,
    2550,  2552,  2572,  2590,  2591,  2595,  2599,  2603,  2607,  2611,
    2616,  2620,  2628,  2627,  2659,  2658,  2665,  2672,  2673,  2679,
    2685,  2695,  2701,  2707,  2709,  2716,  2717,  2721,  2727,  2736,
    2737,  2745,  2745,  2800,  2801,  2802,  2803,  2804,  2805,  2806,
    2807,  2808,  2809,  2810,  2811,  2812,  2817,  2831,  2845,  2864,
    2865,  2869,  2870,  2875,  2877,  2879,  2881,  2883,  2885,  2887,
    2893,  2894,  2895,  2899,  2903,  2911,  2910,  2923,  2925,  2928,
    2930,  2934,  2938,  2945,  2947,  2951,  2952,  2957,  2976,  3006,
    3008,  3012,  3013,  3017,  3046,  3047,  3048,  3049,  3053,  3054,
    3058,  3059,  3064,  3067,  3094,  3093,  3177,  3194,  3193,  3268,
    3267,  3340,  3341,  3346,  3348,  3353,  3376,  3387,  3391,  3413,
    3414,  3418,  3422,  3435,  3441,  3447,  3456,  3471,  3497,  3503,
    3504,  3510,  3513,  3517,  3525,  3545,  3547,  3565,  3571,  3573,
    3575,  3577,  3579,  3581,  3583,  3585,  3587,  3589,  3591,  3593,
    3598,  3614,  3630,  3631,  3636,  3642,  3651,  3657,  3666,  3674,
    3703,  3712,  3714,  3723,  3728,  3734,  3743,  3751,  3753,  3755,
    3757,  3759,  3761,  3763,  3765,  3767,  3769,  3771,  3773,  3775,
    3780,  3800,  3824,  3826,  3825,  3832,  3833,  3834,  3835,  3836,
    3837,  3838,  3839,  3840,  3841,  3842,  3843,  3844,  3849,  3848,
    3859,  3859,  3916,  3915,  3972,  3972,  3994,  4053,  4103,  4128,
    4127,  4153,  4176,  4178,  4179,  4183,  4201,  4222,  4231,  4267,
    4222,  4296,  4298,  4299,  4303,  4304,  4309,  4320,  4308,  4371,
    4370,  4384,  4385,  4389,  4390,  4395,  4404,  4394,  4453,  4462,
    4452,  4506,  4519,  4524,  4523,  4561,  4562,  4567,  4566,  4600,
    4600,  4619,  4618,  4668,  4685,  4694,  4684,  4748,  4757,  4747,
    4797,  4799,  4804,  4806,  4808,  4825,  4830,  4836,  4843,  4844,
    4852,  4858,  4867,  4873,  4879,  4880,  4884,  4884,  4889,  4890,
    4891,  4895,  4896,  4897,  4900,  4902,  4906,  4907,  4908,  4912,
    4913,  4914,  4915,  4916,  4917,  4918,  4919,  4922,  4924,  4928,
    4929,  4930,  4934,  4935,  4936,  4937,  4938,  4941,  4943,  4947,
    4948,  4949,  4953,  4954,  4955,  4956,  4957,  4958,  4959,  4962,
    4964,  4968,  4969,  4970,  4974,  4975,  4976,  4981,  4989,  4997,
    5005,  5017,  5029,  5034,  5039,  5047,  5055,  5063,  5071,  5079,
    5087,  5095,  5108,  5121,  5135,  5140,  5153,  5154,  5207,  5208,
    5211,  5226,  5244,  5249,  5247,  5254,  5256,  5255,  5259,  5258,
    5264,  5301,  5302,  5307,  5306,  5325,  5344,  5343,  5360,  5364,
    5372,  5371,  5374,  5376,  5378,  5380,  5385,  5386,  5392,  5393,
    5410,  5411,  5415,  5416,  5420,  5439,  5449,  5460,  5469,  5470,
    5486,  5488,  5487,  5492,  5490,  5501,  5502,  5506,  5524,  5540,
    5541,  5557,  5572,  5594,  5595,  5600,  5599,  5623,  5639,  5658,
    5657,  5672,  5671,  5688,  5710,  5714,  5743,  5755,  5756,  5761,
    5772,  5760,  5797,  5798,  5802,  5815,  5836,  5849,  5875,  5876,
    5881,  5880,  5917,  5930,  5931,  5935,  5936,  5940,  5942,  5948,
    5950,  5952,  5954,  5956,  5958,  5968,  5983,  5967,  5997,  5998,
    6002,  6003,  6007,  6008,  6012,  6013,  6017,  6018,  6022,  6023,
    6027,  6031,  6032,  6035,  6037,  6041,  6042,  6046,  6047,  6048,
    6052,  6057,  6062,  6067,  6072,  6077,  6082,  6087,  6102,  6108,
    6123,  6128,  6143,  6149,  6167,  6172,  6177,  6182,  6187,  6193,
    6192,  6218,  6219,  6220,  6225,  6230,  6235,  6237,  6239,  6241,
    6247,  6255,  6273,  6290,  6316,  6334,  6335,  6336,  6337,  6338,
    6339,  6340,  6341,  6342,  6343,  6344,  6345,  6346,  6347,  6351,
    6352,  6353,  6357,  6358,  6362,  6363,  6364,  6365,  6370,  6377,
    6378,  6382,  6383,  6387,  6388,  6395,  6400,  6406,  6412,  6425,
    6444,  6450,  6452,  6456,  6460,  6461,  6465,  6470,  6469,  6493,
    6494,  6495,  6496,  6501,  6505,  6510,  6515,  6519,  6524,  6529,
    6535,  6540,  6546,  6550,  6555,  6560,  6578,  6580,  6582,  6598,
    6600,  6605,  6610,  6622,  6627,  6632,  6637,  6639,  6641,  6643,
    6645,  6647,  6649,  6651,  6654,  6653,  6658,  6657,  6661,  6663,
    6672,  6673,  6674,  6680,  6681,  6682,  6683,  6684,  6688,  6692,
    6693,  6697,  6698,  6702,  6703,  6704,  6705,  6706,  6710,  6711,
    6712,  6713,  6714,  6718,  6723,  6725,  6731,  6732,  6734,  6739,
    6749,  6750,  6754,  6755,  6756,  6764,  6765,  6769,  6770,  6774,
    6775,  6776,  6780,  6781,  6782,  6783,  6786,  6787,  6791,  6792,
    6796,  6797,  6801,  6802,  6806,  6807,  6808,  6809,  6810,  6811,
    6817,  6823,  6832,  6841,  6842,  6855,  6861,  6867,  6873,  6880,
    6885,  6890,  6898,  6899,  6911,  6932,  6940,  6941,  6946,  6947,
    6951,  6959,  6963,  6964,  6968,  6969,  6973,  6982,  6986,  6987,
    6991,  6999,  7000,  7004,  7005,  7009,  7010,  7015,  7016,  7020,
    7027,  7036,  7041,  7049,  7050,  7051,  7052,  7053,  7054,  7059,
    7067,  7068,  7073,  7072,  7085,  7086,  7090,  7093,  7094,  7095,
    7096,  7100,  7108,  7115,  7116,  7120,  7130,  7131,  7135,  7136,
    7139,  7141,  7145,  7157,  7158,  7162,  7169,  7182,  7183,  7185,
    7187,  7193,  7198,  7204,  7210,  7217,  7227,  7228,  7229,  7230,
    7231,  7235,  7239,  7240,  7245,  7246,  7250,  7251,  7255,  7256,
    7257,  7261,  7262,  7266,  7270,  7277,  7281,  7285,  7292,  7296,
    7300,  7304,  7317,  7329,  7330,  7334,  7335,  7339,  7340,  7344,
    7345,  7349,  7350,  7354,  7355,  7359,  7360,  7364,  7365,  7369,
    7371,  7375,  7376,  7380,  7384,  7385,  7398,  7399,  7400,  7404,
    7405,  7409,  7415,  7429,  7430,  7434,  7435,  7439,  7440,  7448,
    7447,  7494,  7493,  7507,  7519,  7518,  7537,  7536,  7555,  7554,
    7573,  7567,  7587,  7586,  7619,  7624,  7629,  7634,  7639,  7646,
    7653,  7658,  7666,  7667,  7668,  7669,  7673,  7674,  7686,  7687,
    7691,  7692,  7695,  7697,  7705,  7713,  7715,  7717,  7718,  7726,
    7727,  7731,  7740,  7738,  7752,  7766,  7765,  7779,  7777,  7791,
    7798,  7809,  7810,  7838,  7845,  7849,  7854,  7853,  7869,  7871,
    7876,  7884,  7883,  7899,  7903,  7902,  7914,  7915,  7919,  7934,
    7935,  7939,  7948,  7952,  7957,  7963,  7962,  7973,  7983,  7972,
    7998,  8007,  8016,  8025,  8034,  8040,  8046,  8055,  8064,  8092,
    8113,  8123,  8127,  8132,  8133,  8136,  8138,  8139,  8140,  8141,
    8144,  8149,  8160,  8165,  8176,  8177,  8181,  8182,  8186,  8187,
    8188,  8192,  8193,  8198,  8206,  8207,  8208,  8209,  8214,  8213,
    8242,  8252,  8269,  8272,  8279,  8283,  8290,  8294,  8300,  8304,
    8311,  8316,  8319,  8326,  8329,  8336,  8339,  8346,  8349,  8357,
    8360,  8367,  8371,  8378,  8382,  8389,  8390,  8415,  8416,  8417,
    8422,  8427,  8435,  8434,  8446,  8447,  8448,  8453,  8452,  8474,
    8475,  8479,  8480,  8484,  8485,  8486,  8491,  8490,  8512,  8521,
    8520,  8547,  8548,  8552,  8553,  8557,  8558,  8559,  8560,  8561,
    8562,  8567,  8566,  8588,  8589,  8590,  8595,  8594,  8600,  8607,
    8612,  8620,  8621,  8625,  8639,  8638,  8651,  8652,  8656,  8657,
    8661,  8671,  8681,  8682,  8687,  8686,  8697,  8698,  8702,  8703,
    8707,  8717,  8728,  8727,  8735,  8735,  8746,  8747,  8752,  8753,
    8762,  8771,  8772,  8776,  8781,  8786,  8791,  8796,  8795,  8815,
    8823,  8815,  8830,  8831,  8832,  8833,  8834,  8838,  8845,  8852,
    8854,  8865,  8866,  8870,  8871,  8899,  8929,  8931,  8940,  8953,
    8954,  8955,  8970,  8977,  9002,  9008,  9014,  9015,  9016,  9017,
    9018,  9022,  9023,  9028,  9079,  9086,  9129,  9135,  9141,  9147,
    9153,  9159,  9165,  9171,  9175,  9181,  9187,  9193,  9199,  9205,
    9209,  9215,  9225,  9231,  9239,  9245,  9255,  9261,  9270,  9280,
    9286,  9296,  9302,  9311,  9315,  9321,  9327,  9333,  9339,  9345,
    9351,  9357,  9363,  9369,  9375,  9381,  9387,  9393,  9399,  9403,
    9404,  9408,  9409,  9413,  9414,  9418,  9419,  9423,  9424,  9425,
    9426,  9427,  9428,  9432,  9433,  9437,  9438,  9439,  9440,  9441,
    9442,  9454,  9455,  9456,  9457,  9458,  9464,  9468,  9474,  9480,
    9486,  9492,  9494,  9501,  9508,  9514,  9555,  9564,  9571,  9579,
    9585,  9592,  9598,  9612,  9619,  9635,  9641,  9647,  9655,  9661,
    9667,  9673,  9679,  9694,  9706,  9712,  9718,  9724,  9730,  9736,
    9742,  9748,  9754,  9760,  9766,  9772,  9778,  9784,  9790,  9796,
    9802,  9810,  9831,  9838,  9844,  9851,  9858,  9865,  9872,  9878,
    9884,  9889,  9895,  9902,  9908,  9914,  9920,  9926,  9932,  9950,
    9956,  9962,  9969,  9976,  9991,  9997, 10003, 10009, 10015, 10022,
   10028, 10034, 10040, 10046, 10052, 10060, 10073, 10079, 10085, 10091,
   10097, 10105, 10111, 10123, 10129, 10135, 10143, 10153, 10159, 10175,
   10181, 10188, 10195, 10202, 10209, 10216, 10220, 10240, 10239, 10312,
   10352, 10354, 10359, 10360, 10364, 10365, 10369, 10370, 10374, 10381,
   10389, 10415, 10421, 10427, 10433, 10439, 10445, 10454, 10461, 10463,
   10460, 10470, 10481, 10487, 10493, 10499, 10505, 10511, 10517, 10523,
   10529, 10536, 10535, 10555, 10554, 10569, 10580, 10588, 10604, 10605,
   10610, 10615, 10618, 10621, 10620, 10637, 10639, 10645, 10644, 10661,
   10663, 10665, 10667, 10669, 10671, 10673, 10675, 10677, 10679, 10681,
   10686, 10687, 10691, 10698, 10706, 10707, 10711, 10718, 10726, 10727,
   10731, 10732, 10736, 10744, 10755, 10756, 10765, 10776, 10777, 10783,
   10784, 10804, 10806, 10810, 10808, 10825, 10823, 10841, 10839, 10846,
   10855, 10853, 10871, 10870, 10880, 10891, 10889, 10908, 10907, 10918,
   10929, 10930, 10931, 10939, 10940, 10944, 10959, 10959, 10974, 11014,
   11087, 11098, 11103, 11095, 11122, 11142, 11150, 11142, 11159, 11158,
   11181, 11198, 11181, 11205, 11209, 11235, 11236, 11241, 11244, 11245,
   11246, 11250, 11251, 11256, 11255, 11261, 11260, 11268, 11269, 11272,
   11274, 11274, 11278, 11278, 11283, 11284, 11288, 11290, 11295, 11296,
   11300, 11311, 11324, 11325, 11326, 11327, 11328, 11329, 11330, 11331,
   11332, 11333, 11334, 11335, 11339, 11340, 11341, 11342, 11343, 11344,
   11345, 11346, 11347, 11351, 11352, 11353, 11354, 11357, 11359, 11360,
   11364, 11365, 11373, 11375, 11379, 11381, 11380, 11394, 11397, 11396,
   11411, 11417, 11432, 11434, 11438, 11440, 11445, 11446, 11466, 11497,
   11501, 11502, 11506, 11519, 11521, 11526, 11525, 11560, 11562, 11567,
   11568, 11569, 11574, 11580, 11584, 11585, 11589, 11600, 11607, 11614,
   11624, 11651, 11655, 11661, 11667, 11677, 11681, 11695, 11696, 11697,
   11698, 11699, 11700, 11704, 11705, 11706, 11707, 11708, 11712, 11713,
   11714, 11715, 11716, 11720, 11721, 11722, 11723, 11727, 11732, 11733,
   11736, 11739, 11738, 11772, 11773, 11777, 11785, 11798, 11798, 11808,
   11809, 11813, 11832, 11872, 11871, 11884, 11892, 11883, 11894, 11906,
   11918, 11917, 11935, 11934, 11945, 11946, 11945, 11962, 11969, 11990,
   12011, 12023, 12028, 12027, 12037, 12043, 12050, 12055, 12060, 12067,
   12076, 12077, 12081, 12092, 12105, 12106, 12110, 12121, 12122, 12126,
   12127, 12130, 12132, 12135, 12136, 12137, 12141, 12142, 12150, 12158,
   12149, 12168, 12175, 12167, 12185, 12197, 12198, 12211, 12215, 12216,
   12232, 12233, 12237, 12246, 12247, 12248, 12250, 12249, 12260, 12261,
   12265, 12266, 12268, 12267, 12271, 12270, 12276, 12277, 12281, 12282,
   12286, 12296, 12297, 12301, 12302, 12307, 12306, 12320, 12321, 12325,
   12330, 12338, 12339, 12347, 12349, 12349, 12357, 12365, 12356, 12387,
   12388, 12392, 12400, 12401, 12405, 12415, 12416, 12423, 12422, 12438,
   12437, 12451, 12450, 12462, 12461, 12475, 12476, 12480, 12493, 12509,
   12510, 12514, 12515, 12519, 12520, 12521, 12526, 12525, 12547, 12549,
   12552, 12554, 12557, 12558, 12561, 12565, 12569, 12573, 12577, 12581,
   12585, 12589, 12593, 12601, 12604, 12614, 12613, 12629, 12636, 12644,
   12652, 12660, 12668, 12676, 12683, 12685, 12687, 12696, 12700, 12705,
   12704, 12710, 12709, 12714, 12723, 12730, 12735, 12737, 12739, 12741,
   12743, 12751, 12762, 12770, 12772, 12780, 12787, 12794, 12804, 12811,
   12817, 12826, 12834, 12838, 12843, 12847, 12851, 12858, 12865, 12872,
   12879, 12886, 12893, 12900, 12906, 12913, 12920, 12925, 12930, 12938,
   12940, 12942, 12947, 12948, 12951, 12953, 12957, 12958, 12962, 12963,
   12967, 12968, 12972, 12973, 12977, 12978, 12981, 12983, 12990, 13001,
   13000, 13016, 13015, 13022, 13023, 13024, 13025, 13026, 13030, 13031,
   13036, 13040, 13046, 13052, 13074, 13075, 13076, 13091, 13090, 13103,
   13112, 13102, 13114, 13118, 13119, 13131, 13130, 13152, 13153, 13158,
   13160, 13162, 13164, 13166, 13168, 13170, 13172, 13174, 13176, 13178,
   13180, 13182, 13184, 13186, 13188, 13190, 13192, 13194, 13199, 13200,
   13205, 13204, 13214, 13215, 13219, 13219, 13221, 13222, 13223, 13228,
   13229, 13234, 13233, 13244, 13245, 13252, 13256, 13260, 13270, 13275,
   13287, 13297, 13298, 13299, 13305, 13317, 13329, 13339, 13349, 13316,
   13357, 13358, 13362, 13363, 13367, 13368, 13380, 13384, 13385, 13386,
   13389, 13391, 13395, 13396, 13400, 13405, 13412, 13417, 13424, 13426,
   13430, 13431, 13435, 13440, 13448, 13449, 13452, 13454, 13462, 13464,
   13468, 13469, 13470, 13474, 13476, 13481, 13482, 13491, 13492, 13496,
   13497, 13501, 13521, 13545, 13557, 13568, 13587, 13595, 13607, 13622,
   13643, 13644, 13645, 13654, 13655, 13656, 13657, 13672, 13678, 13684,
   13690, 13696, 13727, 13760, 13770, 13780, 13786, 13795, 13807, 13813,
   13819, 13835, 13836, 13840, 13849, 13865, 13869, 13920, 13924, 13942,
   13946, 14026, 14051, 14082, 14083, 14099, 14109, 14113, 14119, 14125,
   14135, 14141, 14150, 14160, 14161, 14191, 14204, 14220, 14236, 14253,
   14254, 14265, 14266, 14277, 14278, 14279, 14283, 14310, 14343, 14358,
   14359, 14360, 14361, 14362, 14363, 14364, 14365, 14366, 14367, 14368,
   14369, 14370, 14371, 14372, 14373, 14374, 14375, 14376, 14377, 14378,
   14379, 14380, 14381, 14382, 14383, 14384, 14385, 14386, 14387, 14388,
   14389, 14390, 14391, 14392, 14393, 14394, 14395, 14396, 14397, 14398,
   14399, 14400, 14401, 14402, 14403, 14404, 14405, 14406, 14407, 14417,
   14418, 14419, 14420, 14421, 14422, 14423, 14424, 14425, 14426, 14427,
   14428, 14429, 14430, 14431, 14432, 14433, 14434, 14435, 14436, 14437,
   14438, 14439, 14440, 14441, 14442, 14443, 14444, 14445, 14446, 14447,
   14448, 14449, 14450, 14451, 14452, 14453, 14454, 14455, 14456, 14457,
   14458, 14459, 14460, 14461, 14462, 14463, 14464, 14465, 14470, 14471,
   14472, 14473, 14474, 14475, 14476, 14477, 14478, 14479, 14480, 14481,
   14482, 14483, 14484, 14485, 14486, 14487, 14488, 14489, 14490, 14491,
   14492, 14493, 14494, 14495, 14496, 14497, 14498, 14499, 14500, 14501,
   14502, 14503, 14504, 14505, 14506, 14507, 14508, 14509, 14510, 14511,
   14512, 14513, 14514, 14515, 14516, 14517, 14518, 14519, 14520, 14521,
   14522, 14523, 14524, 14525, 14526, 14527, 14528, 14529, 14530, 14531,
   14532, 14533, 14534, 14535, 14536, 14537, 14538, 14539, 14540, 14541,
   14542, 14543, 14544, 14545, 14546, 14547, 14548, 14549, 14550, 14551,
   14552, 14553, 14554, 14555, 14556, 14557, 14558, 14559, 14560, 14561,
   14562, 14563, 14564, 14565, 14566, 14567, 14568, 14569, 14570, 14571,
   14572, 14573, 14574, 14575, 14576, 14577, 14578, 14579, 14580, 14581,
   14582, 14583, 14584, 14585, 14586, 14587, 14588, 14589, 14590, 14591,
   14592, 14593, 14594, 14595, 14596, 14597, 14598, 14599, 14600, 14601,
   14602, 14603, 14604, 14605, 14606, 14607, 14608, 14609, 14610, 14611,
   14612, 14613, 14614, 14615, 14616, 14617, 14618, 14619, 14620, 14621,
   14622, 14623, 14624, 14625, 14626, 14627, 14628, 14629, 14630, 14631,
   14632, 14633, 14634, 14635, 14636, 14637, 14638, 14639, 14640, 14641,
   14642, 14643, 14644, 14645, 14646, 14647, 14648, 14649, 14650, 14651,
   14652, 14653, 14654, 14655, 14656, 14657, 14658, 14659, 14660, 14661,
   14662, 14663, 14664, 14665, 14666, 14667, 14668, 14669, 14670, 14671,
   14672, 14673, 14674, 14675, 14676, 14677, 14678, 14679, 14680, 14681,
   14682, 14683, 14684, 14685, 14686, 14687, 14688, 14689, 14690, 14691,
   14692, 14693, 14694, 14695, 14696, 14697, 14698, 14699, 14700, 14701,
   14702, 14703, 14704, 14705, 14706, 14707, 14708, 14709, 14710, 14711,
   14712, 14713, 14714, 14715, 14716, 14717, 14718, 14719, 14720, 14721,
   14722, 14723, 14724, 14725, 14726, 14727, 14728, 14729, 14730, 14731,
   14732, 14733, 14734, 14735, 14736, 14737, 14738, 14750, 14749, 14764,
   14763, 14792, 14793, 14798, 14797, 14804, 14803, 14813, 14812, 14823,
   14822, 14828, 14836, 14838, 14843, 14843, 14852, 14851, 14865, 14864,
   14869, 14873, 14874, 14875, 14879, 14880, 14881, 14882, 14886, 14887,
   14888, 14889, 14894, 14928, 14927, 15027, 15039, 15038, 15059, 15075,
   15088, 15110, 15145, 15187, 15215, 15261, 15275, 15276, 15277, 15278,
   15282, 15300, 15318, 15319, 15323, 15324, 15325, 15326, 15330, 15331,
   15349, 15363, 15364, 15365, 15371, 15377, 15388, 15399, 15403, 15408,
   15407, 15416, 15417, 15421, 15422, 15426, 15439, 15440, 15441, 15446,
   15450, 15461, 15465, 15476, 15492, 15509, 15508, 15547, 15548, 15552,
   15553, 15557, 15558, 15559, 15560, 15562, 15561, 15575, 15576, 15577,
   15578, 15579, 15585, 15585, 15590, 15595, 15605, 15615, 15619, 15628,
   15628, 15633, 15639, 15650, 15661, 15669, 15671, 15675, 15682, 15689,
   15691, 15695, 15696, 15701, 15700, 15704, 15703, 15707, 15706, 15710,
   15709, 15712, 15713, 15714, 15715, 15716, 15717, 15718, 15719, 15720,
   15721, 15722, 15723, 15724, 15725, 15726, 15727, 15728, 15729, 15730,
   15731, 15732, 15733, 15734, 15735, 15736, 15737, 15741, 15742, 15746,
   15747, 15751, 15761, 15771, 15784, 15799, 15812, 15825, 15837, 15842,
   15850, 15855, 15863, 15881, 15901, 15913, 15926, 15935, 15939, 15943,
   15944, 15948, 15975, 15977, 15981, 15985, 15989, 15996, 15997, 16001,
   16002, 16006, 16007, 16011, 16012, 16018, 16024, 16030, 16040, 16039,
   16049, 16050, 16055, 16056, 16057, 16062, 16063, 16064, 16068, 16069,
   16073, 16085, 16094, 16104, 16113, 16127, 16128, 16133, 16132, 16148,
   16149, 16150, 16154, 16155, 16159, 16159, 16183, 16184, 16188, 16189,
   16190, 16194, 16198, 16205, 16208, 16206, 16222, 16229, 16250, 16276,
   16278, 16282, 16283, 16287, 16288, 16296, 16297, 16298, 16299, 16305,
   16311, 16321, 16323, 16325, 16330, 16331, 16332, 16333, 16334, 16338,
   16339, 16340, 16341, 16342, 16343, 16353, 16354, 16359, 16372, 16385,
   16387, 16389, 16394, 16399, 16401, 16403, 16409, 16410, 16412, 16418,
   16417, 16435, 16436, 16440, 16445, 16453, 16453, 16479, 16478, 16495,
   16499, 16504, 16509, 16508, 16520, 16521, 16523, 16525, 16543, 16549,
   16554, 16536, 16617, 16635, 16660, 16692, 16697, 16705, 16728, 16656,
   16794, 16814, 16827, 16837, 16793, 16858, 16862, 16866, 16870, 16874,
   16878, 16885, 16892, 16899, 16909, 16910, 16914, 16915, 16916, 16920,
   16921, 16926, 16928, 16927, 16933, 16934, 16938, 16948
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYSE_SYM", "ANALYZE_SYM",
  "AND_AND_SYM", "AND_SYM", "ANY_SYM", "ARCHIVED_SYM", "AS", "ASC",
  "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM",
  "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM",
  "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM",
  "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED",
  "CHANGED_PAGE_BITMAPS_SYM", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM",
  "CLIENT_STATS_SYM", "CLOSE_SYM", "CLUSTERING_SYM", "COALESCE",
  "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_DICTIONARY_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FETCH_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FLUSH_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GEOMETRYCOLLECTION", "GEOMETRY_SYM",
  "GET_FORMAT", "GET_SYM", "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING",
  "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM",
  "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM",
  "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM",
  "INDEX_STATS_SYM", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM",
  "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM", "KEYS",
  "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM",
  "LE", "LEADING", "LEAVES", "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM",
  "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING",
  "LIST_SYM", "LOAD", "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM",
  "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG",
  "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM",
  "OFFSET_SYM", "OLD_PASSWORD", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM", "PARTITIONING_SYM",
  "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM",
  "POINT_SYM", "POLYGON", "PORT_SYM", "POSITION_SYM", "PRECISION",
  "PREPARE_SYM", "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES",
  "PROCEDURE_SYM", "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM",
  "PROFILES_SYM", "PROXY_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM",
  "QUICK", "RANGE_SYM", "READS_SYM", "READ_ONLY_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY",
  "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM",
  "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "REMOVE_SYM", "RENAME",
  "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE",
  "REPLICATION", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM", "RESOURCES",
  "RESTORE_SYM", "RESTRICT", "RESUME_SYM", "RETURNED_SQLSTATE_SYM",
  "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS",
  "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM",
  "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SSL_SYM", "STARTING",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "NOLOCK_SYM", "NONBLOCKING_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE",
  "TABLE_REF_PRIORITY", "TABLE_SYM", "TABLE_STATS_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "THREAD_STATS_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF",
  "TIME_SYM", "TINYBLOB", "TINYINT", "TINYTEXT", "TO_SYM",
  "TOKU_UNCOMPRESSED_SYM", "TOKU_ZLIB_SYM", "TOKU_SNAPPY_SYM",
  "TOKU_QUICKLZ_SYM", "TOKU_LZMA_SYM", "TOKU_FAST_SYM", "TOKU_SMALL_SYM",
  "TOKU_DEFAULT_SYM", "TRAILING", "TRANSACTION_SYM", "TRIGGERS_SYM",
  "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM", "TYPES_SYM",
  "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM", "UNCOMMITTED_SYM",
  "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER",
  "USER_STATS_SYM", "USE_FRM", "USE_SYM", "USING", "UTC_DATE_SYM",
  "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES", "VALUE_SYM", "VARBINARY",
  "VARCHAR", "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM",
  "VIEW_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM",
  "XA_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "'('",
  "')'", "','", "'!'", "'{'", "'}'", "';'", "'@'", "'.'", "':'", "$accept",
  "query", "$@1", "opt_end_of_input", "verb_clause", "statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change", "$@4", "master_defs", "master_def",
  "ignore_server_id_list", "ignore_server_id", "master_file_def", "create",
  "$@5", "$@6", "$@7", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13",
  "create_compression_dictionary_allowed_expr", "server_def",
  "server_options_list", "server_option", "event_tail", "$@14",
  "ev_schedule_time", "$@15", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@16", "ev_sql_stmt_inner", "clear_privileges",
  "sp_name", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "sp_c_chistic", "sp_suid", "call", "$@17", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "sp_fdparams",
  "sp_init_param", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@18", "$@19", "$@20", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "$@21", "sp_proc_stmt", "sp_proc_stmt_if", "$@22",
  "sp_proc_stmt_statement", "$@23", "sp_proc_stmt_return", "$@24",
  "sp_proc_stmt_unlabeled", "$@25", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@26", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@27", "$@28", "$@29", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@30", "$@31", "searched_case_stmt", "$@32",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@33", "$@34", "searched_when_clause", "$@35",
  "$@36", "else_clause_opt", "sp_labeled_control", "$@37", "sp_opt_label",
  "sp_labeled_block", "$@38", "sp_unlabeled_block", "$@39",
  "sp_block_content", "$@40", "sp_unlabeled_control", "$@41", "$@42",
  "$@43", "$@44", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@45", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "ts_wait", "size_number", "create2", "create2a", "$@46",
  "create3", "$@47", "$@48", "opt_create_partitioning", "opt_partitioning",
  "partitioning", "$@49", "have_partitioning", "partition_entry", "$@50",
  "partition", "part_type_def", "$@51", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@52", "$@53", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@54", "part_name",
  "opt_part_values", "$@55", "$@56", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@57", "$@58",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@59", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "$@60", "$@61", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "$@62", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "opt_select_from", "udf_type",
  "create_field_list", "field_list", "field_list_item", "column_def",
  "key_def", "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "$@63", "type", "$@64", "$@65",
  "spatial_type", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "opt_with_compression_dictionary", "type_with_opt_collate", "now",
  "now_or_signed_literal", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "ascii", "unicode", "opt_binary", "opt_bin_mod",
  "ws_nweights", "$@66", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "normal_key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique_combo_clustering",
  "unique_combo_clustering", "unique_opt_clustering", "unique",
  "clustering", "fulltext", "spatial", "init_key_options", "key_alg",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "key_using_alg", "all_key_opt", "normal_key_opt", "spatial_key_opt",
  "fulltext_key_opt", "btree_or_rtree", "key_list", "key_part",
  "opt_ident", "opt_component", "string_list", "alter", "$@67", "$@68",
  "$@69", "$@70", "$@71", "$@72", "$@73", "alter_user_list",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@74", "$@75", "$@76",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@77", "add_part_extra", "reorg_partition_rule", "$@78",
  "reorg_parts_rule", "$@79", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "$@80", "$@81", "$@82",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "slave", "$@83", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "$@84", "opt_checksum_type", "repair",
  "$@85", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "analyze", "$@86", "binlog_base64_event", "check", "$@87",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "$@88", "opt_no_write_to_binlog", "rename", "$@89", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@90",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@91",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@92", "cache_keys_spec", "$@93",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_init2", "$@94",
  "select_part2", "$@95", "$@96", "select_into", "select_from",
  "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@97", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@98", "$@99", "$@100",
  "variable", "$@101", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "$@102", "gorder_list",
  "in_sum_expr", "$@103", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_ref", "join_table_list", "esc_table_ref", "derived_table_list",
  "join_table", "$@104", "$@105", "$@106", "$@107", "$@108", "$@109",
  "$@110", "normal_join", "opt_use_partition", "use_partition",
  "table_factor", "$@111", "select_derived_union", "$@112", "$@113",
  "select_init2_derived", "select_part2_derived", "$@114", "$@115",
  "select_derived", "$@116", "select_derived2", "$@117", "$@118",
  "get_select_lex", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@119",
  "$@120", "index_hints_list", "opt_index_hints_list", "$@121",
  "opt_key_definition", "$@122", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "where_clause", "$@123", "having_clause", "$@124", "opt_escape",
  "group_clause", "group_list", "olap_opt", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@125", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "real_ulong_num", "ulonglong_num", "real_ulonglong_num", "dec_num_error",
  "dec_num", "procedure_analyse_clause", "$@126",
  "opt_procedure_analyse_params", "procedure_analyse_param",
  "select_var_list_init", "$@127", "select_var_list", "select_var_ident",
  "into", "$@128", "into_destination", "$@129", "$@130", "do", "$@131",
  "drop", "$@132", "$@133", "$@134", "$@135", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "if_exists", "opt_temporary", "drop_ts_options_list",
  "drop_ts_options", "drop_ts_option", "insert", "$@136", "$@137",
  "replace", "$@138", "$@139", "insert_lock_option", "replace_lock_option",
  "insert2", "insert_table", "insert_field_spec", "$@140", "fields",
  "insert_values", "$@141", "$@142", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "no_braces", "$@143",
  "opt_values", "values", "expr_or_default", "opt_insert_update", "$@144",
  "update", "$@145", "$@146", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "$@147", "single_multi", "$@148", "$@149", "$@150", "table_wild_list",
  "table_wild_one", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate", "$@151", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@152", "show_param",
  "$@153", "$@154", "show_engine_param", "master_or_binary", "opt_storage",
  "opt_db", "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "wild_and_where", "describe", "$@155", "$@156", "explanable_command",
  "describe_command", "opt_extended_describe", "opt_describe_column",
  "flush", "$@157", "flush_options", "$@158", "$@159", "opt_flush_lock",
  "$@160", "flush_options_list", "flush_option", "opt_table_list", "reset",
  "$@161", "reset_options", "reset_option", "$@162", "slave_reset_options",
  "purge", "$@163", "purge_options", "purge_option",
  "purge_archive_option", "kill", "kill_option", "use", "load", "$@164",
  "$@165", "$@166", "$@167", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_ident", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "ident", "label_ident", "ident_or_text", "user", "keyword", "keyword_sp",
  "set", "$@168", "$@169",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@170", "$@171", "$@172",
  "start_option_value_list_following_option_type", "$@173",
  "option_value_list_continued", "option_value_list", "$@174", "$@175",
  "option_value", "$@176", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "$@177", "$@178",
  "internal_variable_name", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "text_or_password",
  "set_expr_or_default", "lock", "lock_variant", "$@179",
  "table_or_tables", "table_lock_list", "table_lock", "lock_option",
  "unlock", "unlock_variant", "handler", "$@180", "handler_read_or_scan",
  "handler_scan_function", "handler_rkey_function", "$@181",
  "handler_rkey_mode", "revoke", "$@182", "revoke_command", "grant",
  "$@183", "grant_command", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "object_privilege", "$@184",
  "$@185", "$@186", "$@187", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "grant_user", "opt_column_list", "column_list", "column_list_id",
  "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin", "$@188", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_clause", "union_list", "$@189",
  "union_opt", "opt_union_order_or_limit", "union_order_or_limit", "$@190",
  "order_or_limit", "union_option", "query_specification",
  "query_expression_body", "$@191", "subselect", "subselect_start",
  "subselect_end", "opt_query_expression_options",
  "query_expression_option_list", "query_expression_option",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@192",
  "view_list_opt", "view_list", "view_select", "$@193", "view_select_aux",
  "$@194", "create_view_select_paren", "create_view_select", "$@195",
  "view_check_option", "trigger_tail", "$@196", "$@197", "$@198",
  "udf_tail", "sf_tail", "$@199", "$@200", "$@201", "$@202", "$@203",
  "sp_tail", "$@204", "$@205", "$@206", "$@207", "xa", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "$@208", "opt_migrate", "install", "uninstall", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   124,    38,    45,    43,    42,    47,    37,    94,   126,
      40,    41,    44,    33,   123,   125,    59,    64,    46,    58
};
# endif

#define YYPACT_NINF -3962

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-3962)))

#define YYTABLE_NINF -2677

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    4477,  2032,   136, -3962,  -123,   215, 49734,   710,  -102,  -102,
     463,  3031, -3962, -3962, -3962, -3962, -3962,  3260, -3962, 49734,
     136,  1032, -3962, 25017, -3962, -3962,   768,   156,   140,   345,
     136, -3962, 49734, -3962,   833,  1352,   136, -3962, -3962, 43404,
   -3962,   463, 49734, -3962,   680, -3962, 43404,  1257,   747,   842,
     932,   349, -3962, 49734,  2699,   552,  1446,  1358, -3962, -3962,
    1150, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, 25652, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,  1296, 49734,  1457, 49734, -3962,
    1399, 49734, 41505, 49734, -3962,  1082,  1506, -3962, -3962,  1643,
   -3962, -3962,  -102,   463, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,  1147, -3962,
   -3962,  1270, -3962, -3962, -3962, -3962, -3962,  1845, -3962,  1651,
    1651, -3962,  1679, 41505, -3962, 49734, -3962, -3962, -3962,  1064,
   -3962,  1356, -3962,  1370,  1709, -3962, -3962,  1899,  1346,  1751,
    1763,  1102, 12107,  1754,  1754,  1754,  1754, 49734,  1790,  1754,
    1754, 49734, -3962,  1754, -3962,  1754,  -102, -3962, -3962, -3962,
    1867, -3962, 49734,  1638,   903,  -106, 41505,   226, 49734, -3962,
   -3962, 12107, -3962,  1774, -3962, -3962,  1833,  1835, -3962, -3962,
    -102,  1986,  1866,  1884, 49734, -3962, -3962,  -102,   250,   940,
    1432, -3962, -3962,  1576, -3962, -3962,   153, -3962, -3962, -3962,
    2449, -3962, 27557,  3513,  1576,   -30,   -77,   -30, -3962, -3962,
   49734, -3962, -3962, -3962,  1812, -3962, -3962,   279,   279,   279,
   -3962,   279, -3962,   279, -3962,   552,  1418, -3962, -3962,  1417,
   49734,  1041,  1931,  1089, -3962, -3962,  1424,   -66, -3962,  1498,
   38340, -3962, 49734, -3962, -3962, -3962, -3962,  1727, -3962, -3962,
   -3962,  2028, -3962, 38340, 25017, 49734,  1609, -3962, -3962, -3962,
   25017,  1464, 49734, -3962, 25017, 25017,   923,  1114,  1841, 49734,
   49734, 49734,  1926, -3962,  2120, 38340,  1690, -3962,   459,  1189,
    1643,  2128, -3962,  1651, -3962, 49734, -3962, -3962, 49734, 49734,
   -3962, -3962, -3962, 44037,  1102,  1493,  1507,  1515, 16685, -3962,
    1521,  1523,  1525, 12107,  1528,  1531,  1564,  1590,  1594,  1604,
    1614,  1616,  1620,  1620,  1622,  1649,  1660,  1674,  -179,  1718,
   -3962,  1746,  1752,  1760, -3962, -3962,  1779,  1803,  1806,  1814,
   -3962,  1816,  1824,  1834, 12761,  1837,  1842, -3962, 21834,  1849,
    1853,  1859,  1894,  1910,  1934,  1936,  1941,  1946, -3962, -3962,
   12107,  1622, -3962, -3962,  1954, -3962,  1956,  1962,  1975,  1988,
    1999,  2002,  2007,  2011,  2019,  2023,  2034,  2036,  2051,  2057,
    2065,  2067,  2074,  1622, -3962,  -178,  2078,  2103,  -153,  2109,
   -3962,  2112, -3962,   332,  2119,  1620,  1622,  1622,  2134,  2137,
    2143,  2149,  2152,  2158, 16685, 16685, 16685, 12107, -3962, 49734,
   -3962, 49734, -3962,   685,  3345, -3962,  2365, 16685,   914, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962,  1485,  1593, -3962, -3962,
   -3962, -3962, -3962, -3962,  2162,  1535,  2012, 49734, 49734, 49734,
   49734,  1831, 49734, 49734, 41505,  1337, 49734, 38340, -3962,  1754,
    1623,  4300, 30737,  4349, -3962,   142, -3962, -3962, 49734, -3962,
   -3962, -3962, -3962,  2010,  1791,   685,  2201,  1078,  2264,  2286,
   25017, -3962,  1555, -3962,  -152,  2097, -3962,  2313, -3962,  2124,
   -3962, -3962, 38340, 25017, -3962, -3962, -3962, 22469, -3962, -3962,
   -3962,  2340, -3962,  1761, -3962, -3962,  1593,  3921, -3962,  5250,
    1978,  1114,  1959, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962,  1817,  2449, -3962, -3962, 44670,   331,  2099,
    1856,   363,   512, 35808,  1172,   689,   854, 28193, 36441,  1891,
   -3962, -3962, -3962,   804,  2442, -3962,   -16,   -16,  2171,  1137,
     -16, 38973,  2413,   230, -3962,   320, -3962,  2503, -3962, -3962,
     -16, -3962, -3962,  2189,  2278, -3962, -3962,   346,  2342, -3962,
    2665, -3962,    23, -3962,  2309,   -16,   -16,   -16,  2413,   -16,
     230, -3962,  2560,  2691,   635,  -132, -3962, -3962, -3962, -3962,
    2200, -3962,   760,  2768, -3962,  2206, -3962, -3962, 25017, -3962,
    2010, -3962, -3962, -3962,  2215, -3962,  2500,  2336, -3962, -3962,
      95, -3962,  2237,   871,  2741, -3962, 41505,  1223, 39606, -3962,
   -3962, -3962,  2782,  2798,  1620,  2258, -3962, -3962, -3962,  2914,
   -3962, -3962,  2273,  2815,  2815,  2815,  2924, -3962, -3962, -3962,
    2280,  2552, -3962, -3962,  2475,  2331, -3962,  1609, 25017,  2711,
    2319, -3962, -3962,  2582, 12107, -3962, -3962,  5244,   199, -3962,
   -3962,   180, -3962,  2925,  2554, -3962, -3962, -3962, -3962,  2822,
    2353, -3962, -3962,  2914,  2906,  2815,  2803,  2401, -3962, -3962,
   -3962, -3962, -3962, -3962,   253, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962,   264, -3962, -3962, -3962, -3962, -3962,  1609, -3962,
   25017, -3962, -3962, -3962, 25017, -3962,  2405, -3962,  2400, -3962,
   12107, 12107,  1169,  2989,  3053,  3053,  3053,   685,  2443, 12107,
   12107, 12107, 12107, 12107, 12107, 12107,  1181,  2420, -3962, -3962,
     584, -3962,  2426, 12107, 12107, -3962, 12107, 12107, 26287, -3962,
    3442, 12107, 12107,  1259,  2943, 12107, 12107, 12107, 12107,  3172,
   12107, 12107, 26287,  3075,  2436, -3962,  2431,  1187, 12107, 12107,
    1625, 12107, 12107, 12107, 12107, 12107, -3962, -3962, 12107, 12107,
   12107, 12107, 16685, 12107, 12107, 12107, 12107, 12107, 12107,  2446,
   12107,  3053,  3053, 12107, 12107,  1820, -3962, -3962, 12107,  1331,
    1331, -3962, 12107,  8837, 12107, -3962, -3962, -3962,  2447, -3962,
   -3962, -3962, 26287,  3053,  3053, 12107, 12107, 12107,  2989,  2989,
    2989,   263,  2450,   648, 12107, 28829,  2444, -3962, -3962, -3962,
   -3962, 12107, 12107, 12107, -3962, 16685, -3962, -3962,  2063, -3962,
   -3962, -3962, 13415, 16685, 16685,  2456, 16685, 16685, 16685, 16685,
   16685,  2839, 16685, 16685, 17339, 17993, 16685, 16685, 16685, 16685,
    1191,  2989, 41505, 16685, 12107, -3962, -3962, 49734, -3962, -3962,
   -3962, -3962,  2452, 25017,  1337, -3962, -3962, -3962, -3962, -3962,
   -3962,  2460,  1337, -3962,  2955, -3962, -3962,  2465, 25017, -3962,
    2461, -3962,  2840, -3962, -3962, -3962,  2841,  2844,  2847, -3962,
   -3962, -3962, -3962,  3081,  2852, -3962,  2854, -3962, -3962, -3962,
   -3962, -3962,  2490, -3962, -3962, 18647, 41505, -3962,  2495, -3962,
    2988, -3962,  2747,  2695,  2168, -3962, -3962, -3962, -3962, -3962,
    2784, -3962, -3962,  2613, -3962,  2792, -3962, -3962,   168, -3962,
      80, -3962, -3962, -3962, -3962, -3962, -3962,  2795,  2514, -3962,
   -3962, -3962, 49734, -3962, 50367, -3962, 22469,  -123, -3962, -3962,
   -3962,  2892, -3962, -3962,   141,  2517, -3962, 25017, -3962,   103,
     103,  2778,  1360, 41505, -3962, -3962,   294,  1851,   302,  2520,
    2606,  2524, -3962,  2612, 25017, 25017, -3962, -3962, -3962,  2789,
   -3962,  3169,   940, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962,  2533,  3026,  2747,  2817,
   -3962,  2821, -3962, 49734, -3962,  1919, -3962, -3962, -3962,  2541,
   -3962, 12107, -3962,    28, -3962,   804, -3962, 49734, -3962, -3962,
   -3962, -3962, -3962,  3124, 12107, -3962, 38340,  1170,  1042,  1030,
     804, -3962, -3962, -3962, -3962, -3962, 49734, 45303,  2545, -3962,
    2954,  -123, 12107, -3962, -3962,  2564,  1651, 49734, 49734, 49734,
   25017, 49734, 25017, -3962,  1065,  1065, -3962, 37074, -3962, -3962,
   -3962, -3962,   -16, 49734, 49734,   -16, 38340, -3962, -3962,   230,
   49734,   -16, -3962,  2952,  2662, -3962, -3962, -3962,  3020, -3962,
   -3962,  3022,  2562, -3962,  2954, -3962,   592,   230, -3962, -3962,
   -3962, -3962, -3962, 25017, -3962, -3962,   230, -3962,   230,   230,
     -16,   -16,  2616,   -30, -3962, -3962,  2724,   -77, -3962,   599,
     279,  2825, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962,  1572, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962,   187, -3962, -3962, -3962,
    2287,  3086, -3962, 41505,  2546,  -108,  1795,  2546,  2157,  -123,
     282, -3962,   282, -3962, 38340,  3049,  4231,  2858,   236, 25017,
   -3962,  2578, 45936, 25017, -3962, -3962, -3962,   200,  2580,  2588,
     685,  3082,  3083,  3085,  3090,  3091,  3095,  3098,  3099,  3102,
    3103,  3105,  3109,  3110,  3111,  3112,  3113,  3115,  3119,  3121,
    3123,  3125,  3127,  3134,  3135,  2594, -3962, -3962, -3962, -3962,
   25017, -3962, -3962, -3962, -3962,  2682, -3962, -3962, -3962, -3962,
    2887, -3962, -3962, -3962,   -54,   203,  2222,  2668,  2694,    91,
   38340,  3106, 49734, 49734,  1651, 49734, 49734, -3962, -3962,  -170,
    2932,  2936,  2937,  2657, -3962,  2789, -3962,  1404, 49734,  3118,
   32643, -3962,   330,   259, -3962,  3053,  2666, -3962,  2669,  2674,
    2676, 12107,    60,   143,   318,  1747,  1554,   721,   377,   272,
   -3962,  2677,  2671, -3962,  2678, -3962, -3962,   406,   510,   929,
    1035,  2681,  2684, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962,  3139, -3962,   517,  1627, -3962, -3962, -3962,
   -3962,  2661, -3962, -3962,  1092,   521,   542,   292,  2675,   578,
    1689,  1699,  2686, 26287, 49734,  3053,  2690,  1127,  1135,  3053,
    2692,   659,  1140,  1749,  1783,  1787,  1151,  1167,   846,  1826,
    2388,  1192,   958,   988,  1194,  1008,  1028, -3962,  1201,  2696,
    2697,  1037,   300,  3053,  2698,   310,  2685,  2704,  1227, 10145,
   10799, 11453,   196,  1074, -3962,  2706, -3962,  2431,  2712,  2713,
     314,   204,  1243, -3962, 12107, -3962, -3962,   792,  1656,  2767,
     111,  1030, -3962,  2882, 49734,  2464,   127, -3962, -3962, -3962,
   -3962, -3962, -3962,  1308, -3962,  2716, -3962,  2717,  1875,  2721,
   12107,   990,  2721,  2404,  1850,  1850, 16685,  1922,  2590, 12761,
    1600, 12761,  1600,  2721,  2721,  2721, -3962, 16685,  2720, 16685,
   16685, -3962,  2989,   685,  2723,   976, 49734, -3962,  2460,  1478,
   -3962,   804, 38340,    79, 25017, 41505,  2725, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,  4397, 25017,  2818,  2820,  2823,
   -3962, 31373, -3962, -3962, -3962, -3962, 31373,     0, -3962, -3962,
   -3962, -3962, -3962,  2837, -3962, -3962, -3962,  2731, -3962, 38340,
    2731, -3962, -3962,  2731, -3962, -3962,  2731,    58,  4408, -3962,
     301,   324,  3055,  2757, -3962, -3962, -3962, 25017, -3962,  3154,
     697, 25017,  2578,  2737, -3962, -3962, -3962, -3962, -3962,  1663,
    2860, -3962,  3378, -3962, 12107,  -123, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, 12107,  -123, -3962, 38340, 38340,
   25017, 25017,  1174, -3962,  2355,  2745, -3962, -3962, -3962, -3962,
   -3962,  3921, 18647,  2746, 38340,   891, -3962, -3962, -3962, -3962,
   -3962,  1465,   685, -3962,  2742,  4923, 44670,  9491, -3962, 40239,
   -3962,   685,   804,  2749,  2751, -3962, -3962,  3136,   781, -3962,
    2752,  2758, -3962,  2753,  2754,  2756, 44670, 12107, -3962,  1042,
   -3962, -3962, -3962, -3962,  9491,  -123,  3209, -3962,   685,  2764,
   49734, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962,   625, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962,   -16, -3962, -3962, -3962, -3962, -3962,
    3000,  2413,  2342,  3209, -3962, -3962,   -16,   230, 25017,   -16,
     -16, -3962, -3962,  1860,  2816, -3962,  3225, -3962, -3962, -3962,
   49734,  2485,  2939, -3962,  2770, -3962, -3962, 25017, -3962,  2771,
   -3962,  3234,  3382,  2413, -3962, -3962, -3962,   804,   804,  3092,
   -3962,  -123,  2921,  2926,  2928,  2931,  2933,  2965, -3962, -3962,
    -123,  -123, -3962, -3962,   804, -3962,  1743, -3962, -3962, -3962,
   -3962,  -123,  -123,  -123,  -123,  2658,  -123,  -123,  1873, -3962,
   -3962,   804,   804, -3962,   906, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962,   274, -3962,  3045, -3962,  2283,   804,  3376,  3061,
     804,   804,  3376,   804,  3062,  3063,   804,   804,  2889,  3323,
     804,  3208,  2917,  2155,  3212,   804,  3076, -3962,  2922,  3334,
     804,   804,   804,   804,   804,  3376,  3080,  3428,   804, -3962,
     804,  3087,  3084,   158,  3096,  3100,   804,   804,   804,   804,
    1020, 49734,   804,  3101,   804, -3962, -3962,  5950, -3962, -3962,
   -3962, -3962, -3962, -3962,   707, 23104, -3962, -3962, -3962, -3962,
     176, -3962,  3057, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,  2848, -3962, -3962, 12107,  2862,
    2658,  -123,  2658,  2658,  -123,  -123,  2406,  -123,  2658,  2658,
    -123,  -123,  -123,  -123,  -123,  -123,  -123,  2658,  2658,  -123,
    2523,  -123,  2658,  5244, -3962, -3962, -3962,  2934,  2853, -3962,
    1593, -3962,   249,   804,   804,   804,   804, -3962,  1935, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, 41505,  3229,  1953,
     665, 41505, -3962, 49734, -3962,  1514, 49734,  2863,   580,  4686,
     974,   974, -3962, 25017, 25017, 25017, 49734,  2911, -3962, 32643,
   -3962, -3962,   599, -3962,  2856, 14069, -3962,  2869, -3962, 12107,
   -3962, -3962, -3962,  1265, 12107, 12107,  3367,  1980, -3962, 40872,
   -3962, -3962, -3962, 12107, 40872,  1980, 12107, -3962,  2871, -3962,
    3283,  3288, -3962, -3962, -3962, -3962, 12107, 12107, -3962, 12107,
   12107, -3962, 12107, 12107, 12107, 12107, 12107, -3962, -3962, 16685,
   -3962,  2872,  2881, -3962, -3962, -3962,  2883, -3962, 12107, -3962,
   -3962, -3962, -3962, -3962, -3962, 12107, -3962, 12107, -3962, 12107,
   12107, -3962, 12107, 12107, -3962, -3962, -3962, 14723, 12107, 12107,
    2884, -3962, -3962, 12107, 12107, 12107, -3962, 12107,   610, 12107,
    1666, 12107,  1739, 12107, -3962, 12107, -3962, -3962, -3962, -3962,
   12107,   387,  1663,  2658,  2885, -3962,  1949, -3962, -3962,  1350,
   -3962,   792,  2891, -3962, -3962,  1919, -3962, -3962, 41505, 12107,
   -3962, -3962, -3962, -3962, -3962, -3962, 16685,   365,  2895, 16685,
   -3962,  2404,  3172,  3172,  1889, 12107,   990,  2404, 12107,  2898,
    2886, -3962, 12107, 49734, -3962, -3962, -3962, -3962, 41505, -3962,
   -3962, -3962, -3962,    79, -3962,  2461, -3962,  2578, -3962,  3373,
    2899, -3962, -3962, -3962, -3962, -3962, -3962, 49734, -3962,  2985,
   -3962, -3962, -3962, 23739, 23739, -3962, 23739, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
    2413,  2355, -3962,  2903, -3962, -3962,  2582,  3001,  2938,  3289,
   -3962, -3962, -3962, 49734, 16685, -3962, -3962, -3962, -3962, -3962,
   -3962,  3518,  2919,  2935,  3407,  2941,   685, -3962,   685, -3962,
    3005, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,   732,
   -3962, -3962,  2942,  2942, 20554, -3962, -3962, -3962, 49734,  3416,
   -3962,  3377,  3384, 23739, 23739, 23739,  1111, -3962,    56, -3962,
    1300,  3340,  2413, -3962,  3393, 42138, -3962, 33276, -3962, -3962,
   -3962, 16685,  1746, -3962,   685, -3962, -3962, -3962, -3962, -3962,
    1170,  3038,  3040,    -4, -3962, -3962,  3346,  3175, -3962, -3962,
   -3962, -3962,   685, -3962,  2545,  2946, 29465, -3962, -3962,  2406,
   -3962,    90, -3962, 37074, 37074, -3962,  3235, -3962, -3962, -3962,
   -3962,  2757,   230, -3962, -3962,  3440, -3962,  3443, -3962,  2950,
    3446, -3962,  3213,  3129, -3962,  1133,  3358,  3360, -3962,  3233,
    1071,  3233,  1133,  1133, 26287,   599,  2789, -3962,  2658,  3290,
   -3962, -3962, -3962, 40239, 37707, -3962, -3962, -3962, -3962,  3505,
   -3962,  3509,  1185, -3962, -3962,  1785,  1489, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962,  2157,  1785,  1785,  1408, -3962,   100, -3962, -3962,
   -3962, -3962,  3447, -3962, 26922,   136, -3962,   286, -3962, 26922,
   -3962,   200,   200, -3962, 46569, 26922,   136,  2406,  2658, 26922,
    2658, 47202,   136,  -123,  -123,  2480,   804,  2658, -3962, -3962,
    3370, 49734,  3374, 26922, 26922, -3962, 41505, 49734, -3962,   804,
    1486,  2658, 47835,  2406,  2406, 26922,   136, 26287,  1864, -3962,
    -123,   136, -3962, -3962, -3962, -3962, 25017,   136,   136,  3324,
    2428,  2735,  2786, -3962, -3962, -3962,  2658, 47202, -3962, -3962,
    5940, -3962, -3962, -3962, 19919, 49734,  1603,   172, -3962,  2971,
      78,   361,  3066,   307,  2986,  2987, 48468,   685,  2658, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
    -123,  1663,  1785,  1785,  2255, -3962,  3263,  3432,   804, -3962,
    1757, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
    3093, -3962,  3620,  3186,  2997, -3962, -3962,   376, -3962, -3962,
     944, 25017, 19284, -3962,  3259, -3962,  2994, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962,  2993,   599,  2757,  1684,
    2757,  3007, -3962, 12761,  1258, -3962,   685, 12107,   685,  1543,
   -3962,  3003,  3003,  3006, -3962,  3008,  3003,  3403,  3006,  3413,
    3015,  3016,  1298,  3017,  3021,  1485, -3962, 12107, 12107,  1324,
     382,  1326,   -84,  1076,  1080,   418, -3962,  1359,  2838, -3962,
   -3962,  1381,  1385,  1403,  1433,  1084,  1476,  1971, 12761,  1487,
     188,   435, -3962,  1494,  1090,  1094,  1509, 12107,  1533, 12107,
    1539, 12107,  1545,  1551,  1567,  3009,  3009,   276, -3962,  3013,
   -3962, -3962, -3962,  3023, -3962, -3962,  1817,  1350, -3962, -3962,
    3027, -3962, -3962,  3019,   685,  3029, -3962, -3962, 12107, -3962,
     914, -3962, -3962, 16685,   497,  3030, -3962,   685, -3962, -3962,
    3032,  1485, -3962,   353, -3962, -3962, -3962, -3962,    70,  3851,
   31373, -3962,  1976, -3962, 38340,  3028, -3962,  3036,  3107,  3117,
    3120,  3035, 12107, -3962, -3962,  3318, 25017, -3962,  3463, -3962,
   -3962, -3962, -3962,  3039,  3043, -3962, -3962, -3962,  2404,  3429,
    3309, -3962, -3962,  1663, 49734, 38340, -3962,  2449, 26287, -3962,
    3050, -3962,  3050,  1832,  3052,  1983, -3962, -3962, -3962,  3046,
    1959,  1995, -3962, 18647,  3325, 38340,  3511,  3512,  3515, -3962,
    2757,  2757,  1070,  3114,  3470, -3962, -3962, -3962, -3962, 49101,
   -3962, -3962, -3962, -3962,  1241, -3962,  3056,  3065,   214,  3296,
   -3962, -3962, -3962, -3962,   804, -3962, -3962, -3962, -3962, -3962,
   -3962,  2413, -3962, -3962, -3962, -3962, -3962,  2413, -3962,   -16,
    -123,  -123,  1958,  -123,  3563,  3598, 12107,  -186,  1656, -3962,
    1872, -3962, -3962, -3962,  3472,  1133,  3233,  3233,  3473,  3357,
     916,  3079, -3962,   804, -3962,  1397, -3962,  2449, -3962, -3962,
   12107, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,   274, -3962, -3962, -3962, -3962,
   -3962,  3078,  3476,  3477, -3962, 26922,   200, -3962, -3962, 26922,
   26922, -3962, -3962,   146, 47202, -3962, -3962, -3962, -3962, -3962,
   -3962,  3089, -3962, -3962,  1663, -3962, -3962, 37707,  -123, -3962,
   26922,  3089, -3962, -3962,   489, -3962,  3108,  -123, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, 47202,  3094,
   -3962,  1915, -3962, -3962,  1986, -3962, 47202, -3962, -3962, -3962,
   47202, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962,  3088,  2726,  1213, -3962,  3097,  3116,
   -3962, -3962, -3962, -3962, 49734, -3962, -3962, 25017, -3962, -3962,
   -3962,  5608, 49734,  3329, -3962, 12107, 12107,  3365, 49734,  3369,
   -3962,  3659, 49734,  3727, 47202, -3962,  3104, -3962,  3126, -3962,
    2020, -3962, -3962, -3962, -3962, -3962, -3962, -3962,  3131, 49734,
    1785,  2064, -3962, -3962,  -123,   944, -3962, -3962, -3962, -3962,
    3380,  3387, 49734, -3962, -3962, -3962, -3962,  3255, -3962, 25017,
   -3962,  3280, -3962,  3132,   850,  4936, -3962,  3143,  3144,  3149,
   32643,  2757,  3379, -3962, -3962,  3172, -3962,   685, 12107,   575,
   -3962, -3962,   335,  3395, -3962,  1805, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,  3133,  3172,
    3172, -3962, -3962, 12107, -3962,  3714,  3286, 12107, 12107, -3962,
   12107, -3962,   970,  3150,  3137, -3962, -3962, -3962, -3962, 12107,
   -3962, -3962,  3172, -3962, 12107, -3962, -3962, 12107, -3962, 12107,
   12107, -3962,  1574, -3962,  1586, -3962,  1602, -3962, -3962, -3962,
    1663,  3152,  3497, -3962, -3962, -3962,  1663,  3307, -3962, -3962,
    1663,  2658,  2541, -3962, -3962,   648, 49734, -3962, -3962,  2027,
   -3962, -3962, 12107, -3962, 42138, -3962, -3962, -3962,  3488,  3764,
   -3962,  3354, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, 49734,
    -199,  3141, 33909, 38340, 38340, 38340, 15377,   685,  3630, -3962,
   -3962, -3962,  3463,  3520, -3962,   784, -3962, 49734,  3153,  1637,
   -3962,  2045, -3962, -3962,  3162, -3962,  1817,  3163, -3962,   804,
   15377,  2942,  3280, -3962, -3962,  1832, 26287, 33276, -3962, -3962,
   49734, -3962,  3611,  2401, 38340, 38340, 38340,  2413,  3607,  3001,
    3001, -3962, 30101, -3962, -3962,  3332, -3962, -3962, 34542, -3962,
   -3962, -3962, -3962, -3962,  9491, 29465, 44670, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962,  -123,  3658,  3427,   685,  1919,  2556,
   -3962,   599, -3962,  1133, -3962,  3571,  3579,  1133, -3962, -3962,
   -3962, 26287,  2757, 15377, -3962,  1817,   685,  3181,  1915, -3962,
      16, 12107, 26922, -3962, -3962, -3962,  3185, -3962, -3962,  3712,
    3713, -3962, 26922,  2887, 49734, -3962,  3124, -3962, -3962, -3962,
    3292, -3962,  5608, -3962, 26287, -3962, -3962, -3962, -3962, -3962,
   49734, -3962, 25017, -3962, 19919, -3962,  3191, -3962,  3003,  3003,
    3003, -3962, -3962, -3962,  3006, -3962,  3008,  3439, -3962,  3008,
    3008, -3962, -3962, -3962, -3962, -3962,   335,   262, -3962, -3962,
     335, -3962, -3962, -3962,   134,  1402,  3008, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962,  3003,  3006,  3006, -3962, -3962,   335,
    3003, -3962,  3003,  2722, -3962,  1224,   138,  3003,  3003,  3003,
    3193,  3187, -3962,   685,  3172,  3762, -3962, -3962,  3359,  -123,
    3703, -3962,  2048, -3962,  3198, -3962, 48468, -3962,  2658,  2157,
   -3962, -3962, -3962, -3962,  3356,   255, -3962,  3385,  3204,  3205,
   -3962, -3962,  -123,  3210,  3211,  5950, -3962, -3962, -3962,  3839,
   -3962, 49734, 49734, 49734,  2856, -3962,  3591,   868,   685,  3214,
    3215,  3216,  3217,  3829,   260, -3962,  3836, 40872, -3962, -3962,
   -3962,  3220,  2054, -3962,  3221,  3222,  1661, -3962,   279,  3223,
    1683,  1121,  2088,  3541,  3618, -3962,  3460, -3962,  1693,  1306,
    1698,  1702,  1777,  1796, -3962, -3962, -3962, -3962, -3962,  3232,
   -3962, -3962,   456, -3962,  3236,  1375,  1656, -3962, -3962,  2093,
   -3962, -3962, -3962,  3709,  3609, -3962,  3685, -3962, -3962, -3962,
     -97,   -97,   -97,  1746,   685,  2104, -3962, -3962, -3962, -3962,
    3650, -3962, -3962,  3250,  3378, 49734, -3962,  3309, -3962,  2541,
   26287, 15377,  3251,  3249, -3962,   871, -3962, -3962,  3245, -3962,
   -3962, 38340,  2401,  2401,  2401, -3962,  3857,  3695, -3962, -3962,
   41505,  3257, -3962, -3962,  3576, -3962, -3962, -3962, -3962, -3962,
    -123,  3752, -3962, -3962, -3962,  2770,  3014,  3310,  1133,  1133,
    3254,  3311, 12107, 12107,  3265, -3962,  3379, -3962, -3962,   425,
    2541, 12107, -3962,  1663,  3309, -3962,  1854,  3267,  3270, 49734,
    3273,  3274, -3962,  3068,  1603, -3962, -3962, -3962, 25017,  2722,
     136, -3962, -3962,  3089,   732,  3276, -3962, 49734,  3619, -3962,
   -3962, -3962, -3962,  1363, -3962,  3279,  1363,  1363, -3962,  2099,
   -3962,  3313,   335, -3962, -3962,  3314, -3962, -3962, -3962,  1363,
    3285,   335, -3962, -3962, -3962, -3962,  1363, -3962, 41505,  2004,
    -123,  2790, -3962,  3335, -3962,  3808,  1269, -3962,  2722, -3962,
    3681,  3682,  3577, -3962,   335, -3962, -3962,  3905, -3962,   335,
    3905,  1363,  3580, -3962,  1363, 49734, -3962, -3962, -3962, -3962,
   -3962, -3962, 49734, -3962,  1139, -3962, -3962, -3962,  2106,  -123,
   -3962, -3962, -3962,  3294,  3295, -3962, -3962, -3962,   361, -3962,
   49734,  5608, -3962, -3962, -3962,  3259, -3962,  1180,  2115,  1915,
    3298,  2126,  2130, 37074, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, 40872, -3962,  3905, -3962,  3586, -3962, -3962,
   -3962, 12107, -3962, -3962, -3962, 12107, -3962, -3962,  3617,  3779,
   -3962, -3962, -3962, -3962, -3962, -3962,  3302, -3962,  2658,  1300,
    1300, -3962, -3962, -3962, -3962, -3962,  3582,   122,  3328,  3328,
    3328, -3962, 15377,  3704,  3411, -3962, -3962,  3312,  3349, -3962,
   -3962,  1375, -3962, -3962, -3962, -3962,  2401, 12107, -3962,  3379,
    2480, -3962, 30101, -3962, -3962,  -123,   648, -3962,  3355, -3962,
   -3962, -3962,  3361,   685,   685, 49734,  3591, -3962,   771,  1375,
    1915, -3962,  2159, -3962, 49734, 49734,  2165, 49734, 49734,  2818,
    2820,  2823,  2523,  2523, -3962, -3962, -3962, -3962, -3962, -3962,
    3723, -3962, -3962,  2167, -3962,   832,  3595, -3962, -3962, -3962,
   -3962,  1363, -3962,   279, -3962, -3962, -3962, -3962, -3962,   279,
   -3962, -3962, -3962,  3339, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962,  3612,  3362, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,  3316, -3962, -3962,  3452, -3962,
   56064, -3962, -3962,  1238,  3344, -3962, -3962, -3962, -3962,  1413,
   49734, 25017,  3365,  3519, -3962,  3124, -3962,   871,   850,  3280,
   -3962,   273, 49734, -3962,  3613,    98,   247, -3962, -3962, -3962,
    3322,  3326,  1915,  1924, -3962, -3962, -3962,  3330, -3962, -3962,
   -3962,  3424,  3425, -3962, -3962,  3433, -3962, -3962,   149,  1904,
   -3962, -3962, -3962, -3962,  3381, 25017, 16685,  3448, 49734,  1419,
    2615, -3962,  1753,  1915, 12107,  2413, 37707, -3962, -3962, -3962,
   -3962, 12107,  3333, 12107,  3337,  2176, -3962, -3962, -3962,   200,
     200, -3962,   771, -3962, -3962, -3962,  2184,  2210,   273,  2218,
    2231, -3962, -3962, -3962,  1603,  3341, -3962, 49734, -3962, -3962,
   -3962,   271, -3962, -3962,  2240, -3962,  2242,  3906, -3962, -3962,
   -3962, 12107,  3834,  3368, 49734,   164, -3962, 57330, 57330, 49734,
   -3962, -3962, -3962, -3962,  4923, -3962, -3962,   -28, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,  3963,
   -3962,  3336, -3962, -3962,  1238,  3350, -3962,  1479, -3962,  1959,
   -3962, -3962,  5608,  3805,   307, -3962, -3962, -3962, -3962, -3962,
    3352,  1959,  -123,   804, -3962,   273, -3962, -3962, -3962,  1915,
    3353,  3608, -3962,    98, -3962, -3962, -3962,   247, -3962, -3962,
   -3962, 12107, -3962, -3962, -3962, -3962, -3962, -3962, -3962,   325,
    3624,  2658,  2658,  2658,  2658,  1904, -3962, 26287,  2789, -3962,
    1663, -3962,  2244, -3962, -3962, -3962,  3449,   804,  3871,  3872,
     804,   804,   804,   804,  3364,  2615, -3962,  3858, -3962, -3962,
   12107, -3962, -3962,   685,  3600, -3962,  3941,  1656,   685, 49734,
     685, 49734, -3962,  3826,  3826, -3962,  3588,   273, -3962,    98,
     247, -3962,  3309, -3962,  1268,  1268,   335,   279,   335, 49734,
     685, 12107, -3962, 12107,  3394, -3962, -3962,  3827, 49734, -3962,
   -3962, -3962, -3962, 12107, -3962, 56064, 56064, -3962, -3962, -3962,
   -3962,  3989, -3962,  3371,   871,  3960,  3648,  3962, -3962,  2617,
   -3962, -3962,  3659,  5608, -3962, -3962, -3962,  2658,   353, -3962,
   -3962, -3962,  1511,   353, -3962,   353, -3962,  1915, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,  3383, -3962,   804, -3962,  3375,
   -3962, -3962, 49734,  3386, -3962,  -123,   804,   804,  1851,  1851,
    1663, 41505,  3491, -3962, -3962,   804,  1915,  4016, -3962,  1755,
    3760, -3962,  2249,  2279,  1428, -3962, -3962, -3962, -3962, -3962,
   -3962,  2291, -3962,  4027, -3962,   851,  3663,  3664, -3962, -3962,
   -3962, -3962,   685,   685, -3962,    64, -3962, -3962,  3797,  3885,
   12107,   685, 52899,  3388, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, 56697, 12107, -3962,
     -28,  3963, -3962, -3962,  3666, -3962,  3669, -3962, -3962, -3962,
    3912, 56064, -3962,  3897, -3962,   871, -3962, -3962, -3962, -3962,
   -3962, -3962, 26287, 15377,  2480, -3962,  3448, -3962,  3397, -3962,
   -3962,  -101, -3962,  -123,  -123, -3962, -3962, -3962, -3962, -3962,
    2302, -3962, 41505, -3962, -3962,  4001,  4002,  3898,  4003,  1755,
   -3962,   -92, -3962, -3962, -3962,  4005, -3962,  4006,  3404,  3405,
   -3962, -3962, -3962, -3962,  3455,  3927,  3434, 12107, 56064, -3962,
    3910, -3962,  3835,   685,  3781,  3412, -3962,  3408,   685,  3946,
   57330, 57330, -3962, -3962, -3962, -3962,  3922, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,  2312, -3962, 16031, -3962, -3962,
   -3962, -3962, -3962, 41505, -3962,  3491, -3962,  3423,   279,   279,
    4028,   279, -3962,  4029,  4030,   -92, -3962, -3962, -3962, 48468,
   48468,  1268,  1268, -3962,   194, -3962,   685, 53532,  4021, 49734,
   -3962,  3521, -3962, -3962, 12107,  3935, 42771, 54165,  3426, -3962,
   -3962, -3962,  3622, -3962,  2617,  3621, -3962,  3397, -3962,  3431,
   -3962,  2404,  2615, -3962, -3962,  3724, -3962, -3962,   279, -3962,
     279,   279, -3962,  3438,  2333, -3962, -3962, 12107, -3962,  3936,
    3533, -3962,  3441, -3962, 56064,   685, 56064, -3962, -3962,  3882,
    3450,   342, -3962,  3445, -3962, -3962, 56064,  3880,  3941, -3962,
   16031,  3453, -3962, -3962,  3454,  3458, -3962, -3962, -3962, -3962,
   -3962,   685,  4053, 56064, 49734, 51000,  3953, 54798,  3923, 49734,
    5608,  3924,  3928, -3962, 56064, -3962,  4077,  3760, -3962, -3962,
   -3962,  3724,  3569, -3962, 51633, -3962,  2836,  3684,  3503, -3962,
   -3962,  4007,  2700, -3962, -3962,   279,  3916, -3962, 56064, 56064,
   -3962, -3962, -3962, -3962, 35175, -3962, -3962, -3962, -3962, -3962,
    1111, -3962,  3767,  3504, 52266, 55431, -3962, -3962, -3962, 32008,
   -3962, -3962, -3962,  3964, -3962, 12107, -3962,   770, 21189,  3674,
   35175, -3962, -3962,   685, -3962, -3962, -3962, -3962, 41505,  2337,
   -3962, -3962, 26287, -3962, -3962, -3962, -3962, 24380,  3510, -3962,
     804, -3962, 26287, -3962, -3962, 15377, -3962, -3962
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2667,  1103,  2598,     0,     0,     0,     0,     0,     0,
    2600,   123,    63,  1727,  1848,  1849,  1630,  1659,     2,     0,
    1103,   272,   176,     0,    75,  1668,     0,  1911,     0,     0,
    1103,   486,     0,  1901,     0,     0,  1103,  1671,  1890,   249,
     176,  2600,     0,  1149,  2397,  1765,     0,     0,     0,  1748,
       0,     0,  1716,     0,     0,     0,     0,     3,     8,    19,
       0,    39,    24,    29,    14,    18,    13,    52,    46,    26,
      37,    10,    54,    55,    16,    43,    11,    12,    15,    35,
      42,    36,    38,    50,  1140,    22,    23,    30,    44,    59,
      20,    56,    53,    21,  1850,    25,    45,    40,    32,    60,
      33,    51,    34,    58,    28,    47,    27,     9,    17,    48,
      49,    41,    61,    31,    57,     0,   950,     0,     0,  1027,
       0,     0,     0,     0,   176,     0,   930,  2665,  2666,  2667,
    1105,  1104,     0,  2600,  2016,  1088,  1114,  2079,  2080,  2081,
    2082,  2083,  2084,  2085,  2087,  2086,  2030,  2088,  2090,  2089,
    2091,  2092,  2031,  2032,  2093,  2094,  2095,  2097,  2096,  2098,
    2033,  2034,  2099,  2100,  2101,  2102,  2103,  2035,  2036,  2104,
    2107,  2106,  2105,  2037,  2108,  2109,  2110,  2113,  2112,  2111,
    2038,  2114,  2039,  2115,  2116,  2117,  2118,  2119,  2120,  2121,
    2122,  2124,  2123,  2040,  2125,  2126,  2127,  2128,  2129,  2131,
    2130,  2132,  2133,  2134,  2041,  2135,  2136,  2137,  2138,  2139,
    2140,  2141,  2142,  2143,  2042,  2144,  2145,  2146,  2166,  2043,
    2147,  2150,  2149,  2148,  2151,  2152,  2153,  2155,  2154,  2156,
    2157,  2044,  2158,  2159,  2160,  2161,  2162,  2164,  2163,  2168,
    2169,  2170,  2045,  2046,  2165,  2167,  2376,  2171,  2173,  2172,
    2174,  2176,  2175,  2047,  2177,  2048,  2049,  2178,  2179,  2013,
    2180,  2014,  2182,  2184,  2185,  2181,  2186,  2191,  2050,  2183,
    2187,  2188,  2189,  2190,  2192,  2051,  2193,  2194,  2195,  2196,
    2197,  2198,  2199,  2200,  2201,  2202,  2224,  2213,  2215,  2206,
    2208,  2209,  2211,  2207,  2214,  2212,  2218,  2217,  2219,  2220,
    2221,  2222,  2223,  2216,  2204,  2210,  2205,  2225,  2226,  2203,
    2227,  2228,  2229,  2230,  2231,  2232,  2233,  2234,  2235,  2236,
    2237,  2239,  2238,  2240,  2241,  2242,  2243,  2244,  2245,  2247,
    2246,  2248,  2249,  2250,  2252,  2251,  2254,  2255,  2052,  2253,
    2256,  2257,  2258,  2259,  2260,  2261,  2053,  2054,  2055,  2262,
    2263,  2056,  2264,  2266,  2265,  2267,  2268,  2269,  2270,  2271,
    2272,  2273,  2057,  2058,  2274,  2275,  2276,  2277,  2278,  2279,
    2280,  2281,  2282,  2283,  2284,  2285,  2286,  2287,  2289,  2288,
    2290,  2291,  2292,  2293,  2294,  2295,  2296,  2059,  2297,  2060,
    2298,  2299,  2061,  2300,  2062,  2301,  2302,  2303,  2304,  2063,
    2305,  2306,  2307,  2309,  2310,  2308,  2311,  2064,  2312,  2313,
    2314,  2065,  2316,  2315,  2317,  2066,  2319,  2320,  2067,  2318,
    2069,  2321,  2322,  2068,  2070,  2323,  2324,  2325,  2326,  2327,
    2329,  2328,  2330,  2331,  2332,  2071,  2336,  2333,  2334,  2335,
    2337,  2072,  2338,  2339,  2340,  2341,  2342,  2344,  2343,  2345,
    2346,  2347,  2348,  2351,  2353,  2349,  2352,  2350,  2354,  2355,
    2356,  2357,  2358,  2361,  2362,  2363,  2364,  2365,  2366,  2367,
    2368,  2369,  2371,  2370,  2372,  2359,  2360,  2073,  2373,  2374,
    2375,  2377,  2378,  2380,  2379,  2074,  2075,  2381,  2382,  2078,
    2383,  2384,  2385,  2388,  2386,  2387,  2390,  2389,  2391,  2393,
    2392,  2076,  2394,  2077,  2395,  2396,   195,  2019,   178,  2020,
    2029,     0,  2472,  2471,  1072,  1089,  2601,  2602,   879,   581,
     581,   880,     0,     0,   881,     0,   580,   878,   176,  2667,
     128,     0,   577,   578,     0,   872,   874,   875,   873,     0,
       0,  1741,     0,  1657,  1657,  1657,  1657,     0,     0,  1657,
    1657,     0,  1660,  1657,   176,  1657,     0,    68,  1857,   273,
       0,  2509,     0,     0,     0,  2012,     0,  1674,     0,  1912,
    1913,     0,  1920,     0,  1921,  1915,     0,  2472,  2466,  2469,
       0,     0,     0,     0,     0,   176,  1106,     0,  1725,     0,
     239,   248,   250,   251,   247,  2502,  2602,  2613,  1141,  1147,
    1159,  2399,     0,  1828,   251,  1059,  1042,  1059,  1749,  1746,
       0,  2481,  2482,  2480,  1725,  1914,  2724,     0,     0,     0,
    2720,     0,  2725,     0,  1149,     0,     0,     1,     5,     0,
       0,  2161,  2046,  2266,  1841,  1839,  2007,     0,   921,   951,
       0,   926,     0,   924,  2025,  2024,  2023,     0,   937,   936,
     934,     0,   450,     0,     0,     0,  2676,   928,  1086,  2599,
       0,   197,     0,    77,     0,     0,     0,  2605,     0,     0,
       0,     0,     0,   127,     0,     0,     0,   124,  1174,  1174,
    2667,  2669,  2671,   581,   579,     0,   876,   877,     0,     0,
    1745,  1744,  1743,     0,  1741,  2080,  2030,  2092,     0,  1980,
       0,     0,     0,  1428,     0,  2035,     0,  2108,  2110,  2040,
       0,     0,  1181,  1181,   742,     0,     0,     0,  2133,  2134,
    1986,     0,     0,     0,  1977,  1987,  2046,  2173,  2174,     0,
    1979,  2179,     0,     0,     0,     0,  2197,  1984,     0,     0,
    2234,  2236,     0,     0,  2240,  2241,  2242,  2243,  1963,  1236,
       0,   742,  1976,  1983,  2259,  1969,  2267,  2272,  2273,     0,
    2282,     0,     0,  2304,     0,  2310,  2308,  2314,     0,     0,
    2341,     0,     0,   742,  1962,  2361,  2362,  2363,  2364,     0,
    1978,  2073,  1985,     0,  2383,  1181,   742,   742,     0,     0,
       0,  2391,  2393,  2396,     0,     0,     0,  2637,  1235,     0,
    1393,     0,  1310,  1422,  1193,  1199,  1213,     0,  1228,  1246,
    1247,  1249,  1348,  1248,  1254,  1253,  1631,  1973,  1252,  1251,
    1974,  1975,  1245,  1997,  2019,  1996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1661,     0,     0,  1642,  1657,
      70,     0,     0,     0,  2009,  1537,  2484,  2485,     0,    76,
    1676,  1677,  1675,  1026,     0,  1910,     0,  1924,     0,     0,
       0,  1101,   496,   487,     0,     0,  1823,     0,  1822,     0,
    1902,  2614,     0,     0,  1077,  1679,  1726,     0,  1678,  1898,
    1896,     0,  1894,  1891,  1893,   240,     0,     0,   270,     0,
    2608,  2605,  2615,  2650,  2645,  2644,  2647,  2648,  1165,  2649,
    1164,  2646,  2643,  1174,  1160,  1162,  1163,     0,   789,     0,
       0,  2421,  2422,  2247,  2267,  2423,  2359,     0,     0,  2443,
    2398,  2407,  2403,     0,     0,   789,  1836,  1836,     0,     0,
    1836,     0,  1572,  1826,  1829,     0,  2425,  1797,   870,   869,
    1836,   868,  2426,  1822,     0,  1773,  1785,     0,  1750,  1790,
       0,  2427,     0,  1825,     0,  1836,  1836,  1836,  1572,  1836,
       0,  1766,     0,     0,     0,     0,   246,  1064,  1063,  1038,
    1060,  1061,     0,     0,  1041,  1043,  1044,  1040,     0,  2737,
    1026,  1968,  1967,  2017,  2721,  1966,  2729,  2731,  2717,  2719,
    2726,  1143,     0,  2619,     6,    62,     0,     0,  1854,  2674,
    2675,  2673,   805,     0,  1181,  2026,  2668,   179,   935,     0,
     451,   179,     0,     0,     0,     0,     0,   452,   453,   385,
     939,     0,   919,   932,     0,     0,   931,  2676,     0,     0,
    1116,  1118,  1117,  1134,   199,   196,   177,     0,  1074,  1650,
    1652,  1091,  2604,     0,     0,  2606,  2610,  1234,  1233,     0,
       0,   121,   126,     0,     0,     0,  2576,   125,  2570,  2672,
    1174,  1174,  1174,  2664,     0,  2652,  2659,  2660,  2663,  2662,
    2661,  2658,     0,  2651,  2654,  2655,  2657,  2656,  2676,  2670,
       0,   882,   882,   882,     0,  1728,  1731,  1735,  1739,  1742,
       0,     0,  1542,  1267,  1542,  1542,  1542,  1429,     0,     0,
       0,     0,     0,     0,     0,     0,  1542,     0,  1304,  1277,
       0,  1305,     0,     0,     0,  1988,     0,     0,     0,  2637,
       0,     0,     0,     0,  1398,     0,     0,     0,  2637,     0,
       0,     0,     0,     0,  1424,  1426,  1996,  1542,     0,     0,
    1542,     0,     0,     0,     0,     0,  1186,   785,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1542,  1542,     0,     0,  1542,  1318,  1990,     0,     0,
       0,  1989,     0,     0,     0,  1982,  1981,  1964,     0,  1321,
    1323,  1322,     0,  1542,  1542,     0,     0,     0,  1257,  1256,
    1258,     0,     0,     0,     0,     0,     0,  1232,  1231,  1230,
    1229,     0,     0,     0,  1237,     0,  1238,  1239,     0,  1240,
    1241,  1242,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1259,     0,     0,     0,  1965,  1357,     0,  1658,  1649,
    1637,  1644,  1639,     0,  1661,  1640,  1648,   465,   464,  1666,
    1667,  1646,  1662,  1663,     0,  1645,  2568,  1641,     0,  1632,
       0,    69,     0,  1887,  1880,  1885,     0,     0,     0,  1876,
    1884,  1878,  1877,     0,     0,  1886,     0,  1879,  1883,  1882,
    1881,  1858,  1862,  1868,  1859,     0,     0,   271,   274,   276,
       0,   279,  2519,  2534,  2535,  2531,  2536,  2554,  2537,  2541,
       0,  2533,  2525,     0,  2540,     0,  2529,  2538,     0,  2523,
       0,  2539,  2544,  2555,  2527,  2532,  2510,     0,  2517,  2521,
    1538,  1539,     0,  2483,     0,  2008,     0,     0,  1124,  1925,
    1926,  1922,  2467,  2468,  1537,  2470,  2473,     0,   497,     0,
       0,   508,     0,     0,    65,    66,     0,     0,     0,  1108,
       0,  1107,  1111,     0,     0,     0,  1682,  1672,  1681,  1463,
    1897,  1899,     0,   238,   263,   258,   266,   260,   262,   261,
     267,   268,   269,   264,   259,   265,   252,     0,  2519,     0,
    2503,     0,  2609,     0,  2611,  2628,  1148,  2616,  1171,  1150,
    1170,     0,  1161,     0,  2401,     0,   788,     0,   791,   793,
    1701,  1702,   792,   801,     0,   790,     0,     0,     0,  2428,
       0,   797,   799,   798,  2438,   796,     0,     0,  2412,  2433,
    1832,     0,     0,  1806,  1796,     0,   581,     0,     0,     0,
       0,     0,     0,  1767,     0,     0,   624,     0,  1789,  1573,
    1830,  1831,  1836,     0,     0,  1836,     0,  1810,  1802,  1826,
       0,  1836,  1762,     0,     0,  1754,  1759,  1755,     0,  1761,
    1760,  1763,  1751,  1752,  1832,  1778,  1803,  1826,  1809,  1808,
    1807,  1788,  1795,     0,  1777,  1784,     0,  1793,  1826,  1826,
    1836,  1836,  1065,     0,  1048,  1049,     0,     0,  1747,  1466,
       0,     0,  2718,  2732,  2716,  2727,  2728,  2715,  1144,  2620,
    1142,  2621,     0,     7,     4,  1853,  1843,  1844,  1845,  1846,
    1847,  1842,  1840,  1855,  1856,   806,   805,   572,   575,   574,
       0,     0,  2028,     0,   927,     0,   439,   925,     0,     0,
     417,   396,   417,   454,     0,     0,   805,   942,     0,     0,
     929,  1087,     0,     0,   485,  1134,  1120,  1136,     0,   200,
     202,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    78,    79,   101,  1076,  1075,
       0,  1073,  1099,  1098,  1096,     0,  1097,  1095,  1090,  1092,
    1093,  2603,  2607,   582,     0,   805,   427,     0,   388,     0,
       0,     0,     0,     0,   581,     0,     0,  2653,   110,   883,
       0,     0,     0,  1733,  1654,  1463,  1656,  2007,     0,     0,
       0,  1737,     0,     0,  1543,  1542,     0,  1407,     0,     0,
       0,     0,  1430,     0,     0,     0,     0,     0,     0,     0,
    1378,     0,  1407,  1182,     0,   743,  1328,     0,     0,     0,
       0,     0,     0,  1513,  1514,  1515,  1516,  1524,  1517,  1518,
    1519,  1526,  1531,  1520,  1521,  1527,  1528,  1529,  1522,  1530,
    1525,  1523,  1532,     0,  1512,     0,     0,  1536,  1533,  1535,
    1534,     0,  1399,  1391,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1542,     0,     0,     0,  1542,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1340,     0,     0,
       0,     0,     0,  1542,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1300,     0,  1999,  1998,     0,     0,
       0,   838,     0,  1261,     0,  1260,  1475,     0,  2622,  2638,
       0,  2428,  1394,  1396,     0,  1184,  1183,  1185,  1196,  1189,
    1194,  1187,  1191,     0,  1243,  2087,  1197,     0,     0,  1225,
    2637,  1551,  1226,  1211,  1216,  1217,     0,  1214,  1215,     0,
    1219,     0,  1218,  1222,  1223,  1224,  1227,     0,     0,     0,
       0,  1250,  1255,  1423,  1174,  2000,     0,  1634,  1647,  1824,
    1664,  1703,     0,  1028,     0,     0,    71,    73,  1873,  1870,
    1869,  1871,  1875,  1874,  1872,     0,  1888,  2133,  2361,  2364,
     283,     0,   256,   255,   257,   280,     0,     0,  2520,  2518,
    2552,  2551,  2556,     0,  2553,  2549,  2542,  2577,  2546,     0,
    2577,  2548,  2547,  2577,  2543,  2550,  2577,  2515,     0,  1541,
    2169,  2251,     0,  1544,  2487,  1669,  2736,     0,  1923,     0,
       0,     0,  1102,     0,  1174,   495,   494,   493,   492,     0,
     510,   490,   498,    67,     0,     0,  1905,  1608,  1609,  1605,
    1603,  1604,  1904,  1606,  1607,     0,     0,  1903,     0,     0,
       0,     0,  1079,  1680,     0,     0,  1653,  1464,  1900,  1895,
    1892,     0,     0,  2518,     0,  2515,  2612,  2630,  2629,  2617,
    1174,  1563,  1175,  1175,  1996,     0,     0,     0,  2445,     0,
    2440,  2439,     0,     0,     0,  2458,  2441,     0,     0,  2406,
    2446,  2447,  2450,     0,     0,     0,     0,     0,  2444,  2359,
    2408,  2409,  2414,  2404,     0,     0,  1834,  1837,  1838,     0,
       0,  1818,  1812,  1811,  1800,  1813,  1801,  1821,  1820,  1819,
    1775,  1774,  1583,  1584,  1582,  1576,  1577,  1581,  1580,  1770,
    1827,  1817,  1815,  1798,  1836,  1816,  1814,  1756,  1757,  1758,
       0,  1572,     0,  1834,  1804,  1805,  1836,  1826,     0,  1836,
    1836,  1792,  1794,     0,  1051,  1062,  1046,  1045,  1484,  1483,
       0,  1437,     0,  1439,  1436,  1435,  1434,     0,  1483,  2722,
    2730,  2734,     0,  1572,  2627,  2625,   573,  1703,  1703,     0,
    2027,     0,     0,     0,     0,     0,     0,     0,   180,   189,
       0,     0,   394,   395,  1703,   393,   440,   441,   444,   445,
     446,     0,     0,     0,     0,     0,     0,     0,     0,   133,
     447,  1703,  1703,   390,   418,   419,   422,   423,   424,   425,
     426,   386,     0,   391,     0,   940,  1024,  1703,  1024,     0,
    1703,  1703,  1024,  1703,     0,     0,  1703,  1703,     0,     0,
    1703,     0,     0,  1024,     0,  1703,     0,  1011,     0,     0,
    1703,  1703,  1703,  1703,  1703,  1024,     0,     0,  1703,   485,
    1703,     0,     0,  1034,     0,     0,  1703,  1703,  1703,  1703,
       0,     0,  1703,     0,  1703,   958,  1010,   585,   611,   612,
     920,   957,   959,   971,   481,     0,   989,  1013,  1014,  1012,
       0,   944,   946,  2677,  2678,  2679,  1123,  1115,  1122,  1119,
    1134,  1132,  1121,   865,   864,     0,  1135,   198,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1651,  1100,  1094,     0,     0,   131,
     130,   122,   805,  1703,  1703,  1703,  1703,   392,   428,   429,
     432,   433,   434,   435,   438,   436,   437,     0,     0,   404,
       0,     0,  2571,     0,  2710,     0,     0,     0,   178,   583,
       0,     0,   884,     0,     0,     0,     0,     0,  1729,     0,
    2010,  1736,  1466,  1740,  1739,     0,  1324,     0,  1371,     0,
    1373,  1374,  1375,     0,     0,     0,     0,     0,  1325,     0,
    1275,  1326,  1327,     0,     0,     0,     0,  1377,     0,   744,
       0,     0,  1278,  1279,  1272,  1264,     0,     0,  1350,     0,
       0,  1280,     0,     0,     0,     0,     0,  1351,  1425,     0,
    1427,  2000,     0,  1383,  1332,  1285,     0,  1381,     0,  1286,
    1352,  1353,  1354,  1334,  1335,     0,  1356,     0,  1336,     0,
       0,  1339,     0,     0,  1288,  1387,  1385,     0,     0,     0,
       0,  1389,  1290,     0,     0,     0,  1289,     0,     0,     0,
       0,     0,     0,     0,  1292,     0,  1273,  1386,  1388,  1342,
       0,     0,     0,     0,     0,  1301,     0,  2631,  1474,  2639,
    1475,     0,     0,  2633,  2623,  2628,  2636,  1265,     0,     0,
    2001,  1190,  1195,  1188,  1192,  2637,     0,     0,     0,     0,
    1209,  1208,     0,     0,     0,  2637,  1551,  1212,     0,     0,
    1367,  1368,  1420,     0,  1638,  1635,  1665,  1704,     0,  2569,
    1030,  1029,  1643,  1028,    74,     0,  1867,  1889,  1860,     0,
     275,   284,   277,   281,   282,   278,  2545,     0,  2526,     0,
    2530,  2524,  2528,     0,     0,  2516,     0,  2522,  2497,  2491,
    2498,  2500,  2494,  2499,  2501,  2492,  2493,  2488,  2495,  1545,
    1574,     0,  1125,  1127,  1128,  1126,  1134,     0,     0,  2476,
    2477,  2475,  2474,   500,     0,  1594,  1595,  1593,  1596,   509,
    1597,     0,   521,     0,     0,     0,  1909,  1908,  1907,  1906,
       0,  1109,  1112,  1113,  1084,  1083,  1085,  1078,  1080,  1081,
     565,  1686,     0,     0,     0,  1692,  1673,  1683,     0,     0,
     253,     0,     0,     0,     0,     0,     0,  1169,  1466,  1623,
    1166,  1154,  1574,  1564,  1153,  1176,  1172,     0,  2400,  2402,
    2464,  2465,  2462,  2463,  2461,  2432,   804,   803,   802,   800,
       0,     0,     0,     0,  2452,  2453,     0,     0,  2429,  2430,
    2431,  2436,  2435,  2411,  2412,  2413,     0,  2434,  1833,     0,
    1779,     0,  1799,     0,     0,  1772,     0,  1791,  1753,  1781,
    1771,  1544,  1826,  1768,  1769,     0,  1071,     0,  1067,  1066,
       0,  1039,  1053,     0,  1483,  1466,     0,     0,  1460,  1485,
       0,  1485,  1466,  1466,     0,  1466,  1463,  1480,     0,     0,
    2733,  1565,  2626,     0,     0,   923,   183,   186,   184,     0,
     185,     0,     0,   449,   448,     0,  1824,   442,   137,   136,
     138,   139,  1591,  1592,  1588,  1589,  1587,  1590,   141,   140,
     135,   938,     0,     0,     0,  1824,   420,   397,   398,   401,
     402,   403,     0,  1025,   913,  1103,   993,     0,   665,   913,
     861,   866,   866,   991,     0,     0,  1103,     0,     0,     0,
       0,     0,  1103,     0,     0,     0,  1703,     0,  1004,   953,
       0,     0,     0,     0,     0,  1005,     0,     0,   954,  1703,
       0,     0,     0,     0,     0,     0,  1103,     0,     0,   483,
       0,  1103,   485,  1037,  1036,  1035,     0,  1103,  1103,     0,
       0,     0,     0,   617,   618,   616,     0,     0,   609,   586,
     805,   955,   482,   956,   664,     0,  1031,   661,   667,  2003,
       0,     0,     0,   147,  2681,     0,  1504,   201,   102,   100,
      82,  2015,    86,    88,    81,   106,  1601,  1602,  1600,  1598,
    1599,   107,    84,    85,    87,    91,    90,    92,    93,    96,
      97,    94,    89,    95,    83,    98,   108,   109,    80,   129,
       0,     0,     0,     0,  1824,   430,     0,     0,  1703,   387,
     405,   406,   409,   410,   411,   412,   413,   416,   414,   415,
       0,  2572,  2574,     0,     0,   381,   380,     0,   142,  2704,
       0,     0,   664,   111,   481,   584,   587,   906,   908,   907,
     898,   897,   112,   115,   118,  1655,  1739,  1466,  1544,  2008,
    1544,     0,  1738,     0,     0,  1372,  1408,     0,  1431,     0,
    1269,   756,   756,   740,  1416,   736,   756,  1412,   740,  1414,
       0,     0,     0,     0,     0,  1379,  1376,     0,     0,     0,
       0,     0,  1402,     0,     0,     0,  1274,     0,  1362,  1384,
    1382,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1390,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   827,   833,   836,
     837,   839,   831,     0,  1344,  1262,  1174,  2640,  2642,  1145,
       0,  2632,  2634,   915,  1395,     0,  1206,  1202,     0,  1200,
    1550,  1221,  1220,     0,     0,     0,  1210,  1175,  1358,  1174,
       0,  1421,  2002,  1015,   463,   623,  1633,    72,  1863,     0,
       0,  2581,     0,  2580,     0,  2564,  2567,  2007,     0,     0,
       0,     0,     0,  2486,  1575,  1713,     0,  1134,  1138,  2018,
    1916,  2478,  2479,     0,   501,   502,   504,  1175,   518,   496,
       0,   488,   491,     0,   500,     0,  1082,  1159,     0,  1705,
    1690,  1697,  1691,     0,     0,     0,  1689,  1992,  1991,  1998,
    2615,     0,  1510,     0,     0,     0,     0,     0,     0,  2618,
    1544,  1544,  1617,     0,     0,  1151,  1156,  1152,  1155,     0,
    1173,  1180,  1179,  1993,  2000,  2442,     0,     0,     0,     0,
    2457,  2451,  2448,  2449,     0,  2410,  2416,  2415,  2418,  2420,
    1835,  1572,  1787,  1786,  1579,  1578,  1764,  1572,  1783,  1836,
       0,     0,     0,     0,     0,  1055,     0,     0,  2622,  1478,
       0,  1462,  1461,  1486,     0,  1466,  1485,  1485,     0,  1442,
    1441,  1717,  1720,     0,  1440,  1537,  1468,  1159,  2723,  2735,
       0,   622,   621,   188,   187,   193,   194,   455,   466,   467,
     443,   134,   456,   457,   421,     0,   399,   941,   666,   914,
     976,     0,     0,     0,   660,   913,   866,   882,   867,   913,
     913,  1020,  1021,     0,     0,   596,   593,   995,   605,   974,
     965,   975,   986,   988,     0,   595,   619,     0,     0,   607,
       0,   960,  1002,  1003,  1028,   590,     0,     0,   640,   641,
     639,   613,   620,  1022,  1023,   591,   592,   997,     0,  1559,
    1561,  1569,   598,   597,     0,   594,     0,   973,  1008,   981,
       0,   630,   628,   625,   627,   626,   629,   631,   632,   633,
     634,   635,   636,   637,   638,   608,   600,   599,   602,   601,
     604,   603,   606,   970,     0,  1024,  1024,   990,     0,   648,
     649,   651,   652,  2006,     0,  1033,   992,     0,   653,   662,
     654,     0,     0,     0,   157,     0,     0,   943,     0,   150,
     148,   159,     0,     0,     0,  1507,     0,  1508,  1505,  1506,
       0,   103,   105,   462,   461,   460,   459,   431,     0,     0,
       0,  1824,   407,  2573,     0,     0,  2711,   384,   382,   383,
       0,     0,   203,   646,   647,   645,   644,     0,   470,     0,
     468,     0,   480,     0,  1927,   805,   588,     0,     0,     0,
       0,  1544,  1563,  2011,  1732,     0,  1302,  1432,     0,     0,
     757,  1409,   813,     0,  1418,     0,  1419,   738,   737,  1411,
    1413,  1417,  1415,  1268,  1276,  1349,  1271,  1270,     0,     0,
       0,  1308,  1330,     0,  1309,     0,  1400,     0,     0,  1282,
       0,  1284,     0,     0,  1364,  1333,  1355,  1311,  1337,     0,
    1287,  1263,     0,  1312,     0,  1317,  1315,     0,  1291,     0,
       0,  1298,     0,  1296,     0,  1297,     0,  1299,  1341,  1343,
       0,     0,   838,   824,   825,   826,     0,   828,   830,   832,
       0,     0,  1476,  2641,  1146,     0,     0,  1397,  1198,     0,
    1207,  1204,     0,  1201,  1176,  1369,  1359,  1636,  1017,  1016,
    1865,     0,  1861,   292,   287,   295,   289,   291,   290,   296,
     297,   298,   299,   293,   288,   294,   286,   285,  2578,     0,
    2589,     0,     0,     0,     0,     0,     0,  1546,     0,  1670,
    1129,  1134,  1138,     0,  1130,  1927,   505,     0,     0,     0,
     525,     0,   523,   499,     0,  1110,  1174,  1687,  1699,     0,
    1707,     0,     0,  1684,  1694,     0,     0,     0,  1693,   485,
       0,   254,     0,  2508,     0,     0,     0,  1574,  1552,     0,
       0,  1629,     0,  1624,  1167,     0,  1178,  1177,     0,  2460,
    2459,  2455,  2454,  2456,     0,     0,     0,  1780,  1782,  1776,
    1070,  1069,  1068,  1052,     0,     0,  1057,  1047,  2628,  1537,
    1470,  1466,  1438,  1466,  1449,     0,     0,  1466,  1445,  1443,
    1447,     0,  1544,     0,  1502,  1174,  1995,  1566,  1569,   400,
     978,     0,   913,   862,   882,   863,     0,   882,   882,     0,
       0,   964,     0,  1091,     0,   969,   801,   614,  1001,  1000,
       0,   615,     0,   962,     0,  1570,  1571,  1562,   484,   961,
     983,   967,  1888,   994,   664,  1032,   843,   732,   681,   672,
     756,   675,   674,   718,   740,   686,   736,   734,   704,   736,
     736,   711,   710,   728,   714,   694,   813,   813,   693,   731,
     813,   715,   713,   717,     0,   719,   736,   724,   712,   716,
     733,   709,   706,   730,   756,   740,   740,   690,   729,   813,
       0,   722,   756,   760,   692,   813,   820,     0,     0,   756,
     758,  2005,   158,   146,     0,     0,   945,   947,     0,     0,
     948,  2683,     0,  2685,     0,  1137,     0,    99,     0,     0,
     389,   458,   408,  2575,     0,   214,  1174,     0,     0,   204,
     206,   207,     0,     0,     0,   583,  1929,  1928,   469,   568,
     589,     0,     0,     0,  1739,  1734,  1585,     0,  1433,     0,
       0,     0,     0,   807,   818,   816,   810,     0,   814,   815,
    1410,     0,     0,  1380,     0,     0,     0,  1403,     0,     0,
       0,     0,     0,     0,     0,  1266,     0,  1360,     0,     0,
       0,     0,     0,     0,  1295,  1293,  1294,   822,  1346,     0,
     835,   829,   827,   834,     0,  1574,  2622,   916,  1203,     0,
    1370,  1019,  1018,     0,     0,  2579,     0,  2514,  2566,  2565,
    2582,  2582,  2582,  1712,  1711,     0,  1710,  1714,  1131,  1139,
       0,   503,   506,     0,   498,     0,   522,     0,   489,   566,
       0,     0,     0,  1708,  1696,  2619,  1685,  1688,  2000,  1465,
    1511,     0,  2505,  2506,  2504,  1158,     0,  1547,  1628,  1625,
       0,  1618,  1620,  1622,     0,  1994,  2437,  2417,  2419,  1054,
       0,     0,  1050,  1471,  1469,  1479,     0,  1434,  1466,  1466,
       0,  1434,     0,     0,     0,  1719,  1563,  1721,  1467,  1499,
    1481,     0,  1568,     0,     0,   977,     0,     0,     0,     0,
       0,     0,  1007,     0,  1031,   966,   987,  1009,     0,   760,
    1103,  1560,   982,   984,  1079,     0,   650,     0,   847,   680,
     673,   691,   689,   745,   735,     0,   745,   745,   700,   718,
     695,     0,   813,   708,   699,   720,   723,   725,   727,   745,
       0,   813,   688,   687,   697,   684,   745,   768,     0,     0,
       0,     0,   764,     0,   841,     0,     0,   668,   761,   763,
       0,   771,     0,   721,   813,   677,   821,   820,   679,   813,
     820,   745,     0,   759,   745,     0,   144,   149,   160,   161,
     933,  2682,     0,  2680,     0,  1133,  1509,   104,     0,     0,
     217,   215,   216,     0,   210,   212,   207,  2698,     0,  2705,
       0,     0,  2703,   471,   473,   481,   569,     0,     0,  1569,
     911,     0,     0,     0,  1730,  1303,   754,   752,   755,   753,
     809,   808,   812,     0,   811,   820,   741,     0,  1306,  1307,
    1331,     0,  1401,  1392,  1329,     0,  1283,  1361,     0,     0,
    1338,  1313,  1316,  1314,  1319,  1320,     0,  1345,     0,  1166,
    1166,   642,  2635,  1205,  1866,  1864,     0,     0,  2587,  2587,
    2587,  2496,     0,     0,     0,  1174,   511,     0,   528,   527,
     524,  1574,  1698,  1700,  1706,  1695,  2507,     0,  1548,  1563,
     794,  1621,     0,  1168,  1056,     0,     0,  1450,     0,  1454,
    1459,  1455,     0,  1446,  1444,     0,  1585,  1503,     0,  1574,
    1569,   980,     0,   663,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,  1970,   996,   485,   998,   963,
       0,   968,   610,     0,   846,     0,   851,   749,   750,   751,
     701,   746,   748,     0,   703,   671,   696,   726,   702,     0,
     698,   685,   774,   782,   775,   777,   776,   773,   786,   766,
     787,     0,     0,   779,   780,   781,   762,   770,   772,   765,
     676,   678,   682,   683,   669,     0,   670,  2004,   151,   949,
     320,  2684,  2692,     0,  2694,  2687,   132,  2702,  2712,   214,
       0,     0,   155,     0,   205,   801,   208,  2619,  1927,     0,
     476,   885,     0,   910,     0,   887,   889,  1586,   819,   817,
       0,  1404,  1569,     0,  1363,  1365,   823,     0,  1477,   643,
    2590,     0,     0,  2586,  2584,     0,  2585,  2583,  2557,     0,
    2512,  2513,  2511,  1709,     0,     0,     0,   519,     0,     0,
     553,   567,  1556,  1569,     0,  1574,     0,  1626,  1619,  1058,
    1472,     0,     0,     0,     0,     0,  1718,  1491,  1492,     0,
       0,  1497,  1501,  1482,  1567,   979,     0,     0,   885,     0,
       0,  1972,  1971,   972,  1031,     0,   844,     0,   848,   849,
     850,     0,   842,   747,     0,   917,     0,     0,   778,   767,
     769,     0,   153,   346,     0,   332,   318,     0,     0,     0,
     322,   162,   165,   163,     0,   164,   170,     0,   171,   172,
     173,   174,   175,   166,   344,   345,   169,   167,   168,     0,
    2021,     0,  2022,  1149,     0,     0,  2690,     0,  2686,  2615,
     181,   211,     0,     0,   147,   156,  2706,   784,   474,   472,
       0,  2615,     0,  1703,   113,   886,   902,   901,   891,  1569,
       0,     0,   116,   888,   904,   895,   119,   890,   903,   893,
     739,     0,  1406,  1281,  1347,  2563,  2562,  2561,  2558,     0,
       0,     0,     0,     0,     0,  2588,  2592,     0,  1463,  1175,
       0,   512,     0,   515,   517,   531,     0,  1703,     0,     0,
    1703,  1703,  1703,  1703,   546,   554,   556,     0,  1557,  1558,
       0,  1553,  1555,  1549,  1610,   795,  1930,  2622,  1451,     0,
    1456,     0,  1448,  1487,  1487,  1498,     0,   885,   655,   887,
     889,   999,     0,   845,     0,     0,   813,     0,   813,     0,
     152,     0,   145,     0,     0,   331,   334,     0,     0,   337,
     327,   326,   328,     0,   321,   320,   320,   374,   325,   371,
     370,   363,  2693,     0,  2619,     0,     0,     0,  2688,  2713,
     213,  1174,   159,     0,   478,   477,   900,     0,  1015,   892,
     909,   912,     0,  1015,   896,  1015,   894,  1569,  2559,  2593,
    2596,  2594,  2595,  2597,  2591,  1715,  1723,     0,  1917,     0,
     520,   513,     0,     0,   529,     0,  1703,  1703,     0,     0,
       0,     0,     0,   526,   555,  1703,  1569,     0,  1157,     0,
    1938,  1473,     0,     0,     0,  1495,  1493,   659,   658,   656,
     657,     0,   857,     0,   856,     0,   853,   852,   705,   918,
     707,   783,   154,   347,   358,   361,   353,   333,     0,     0,
       0,   323,   320,     0,   307,   305,   306,   312,   313,   314,
     315,   316,   317,   308,   311,   309,   310,   320,     0,   222,
       0,     0,  2691,  2689,     0,  2695,     0,   191,   190,   182,
       0,   320,  2699,     0,  2707,  2619,   899,   114,   905,   117,
     120,  1405,     0,     0,   794,   507,   519,   516,   539,   532,
     535,     0,   564,     0,     0,   560,   561,   559,   557,   550,
       0,   548,     0,  1554,  1611,     0,     0,     0,     0,  1931,
    1933,     0,  1627,  1453,  1458,     0,  1488,     0,     0,     0,
     985,   859,   860,   858,     0,     0,     0,     0,   320,   354,
       0,   329,     0,   338,     0,     0,   220,   377,   375,   218,
     365,   365,  2696,  2697,   192,  2714,     0,   161,   181,   479,
    1722,  1724,  1918,   514,   539,     0,   537,     0,   533,   530,
     534,   562,   563,     0,   547,     0,   558,     0,     0,     0,
       0,     0,  1932,     0,     0,  1939,  1941,  1490,  1489,  1504,
       0,     0,     0,   355,   361,   351,   359,   320,     0,     0,
     319,     0,   373,   221,     0,     0,     0,   320,     0,   364,
     366,   368,     0,   143,  2708,  1944,   536,     0,   544,   540,
     542,   545,   553,   552,   549,  1613,  1936,  1937,     0,  1934,
       0,     0,  1940,     0,     0,   855,   854,     0,   352,     0,
       0,   350,   330,   335,   320,   378,   320,   232,   231,     0,
     224,   300,   372,     0,   223,  2700,   320,     0,  1930,   538,
       0,     0,   551,  1616,     0,  1614,  1935,  1943,  1942,  1496,
    1494,   356,     0,   320,     0,   320,     0,   320,     0,     0,
       0,     0,     0,   219,   320,  2709,     0,  1938,   543,   541,
    1612,     0,     0,   348,   320,   336,   341,     0,     0,   227,
     301,   302,     0,   229,  2701,     0,  1946,  1615,   320,   320,
     337,   340,   379,   376,     0,   303,   225,   226,   237,   236,
       0,  1945,     0,  1950,   320,   320,   342,   245,   243,   320,
     233,   241,   235,     0,   242,     0,   230,     0,     0,  1957,
       0,   228,   244,   304,  1948,  1949,  1947,  1952,     0,     0,
    1954,  1955,     0,  1919,   234,  1956,  1951,     0,  1958,  1960,
       0,  1953,     0,  1174,  1959,     0,  1175,  1961
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3962, -3962, -3962, -3962, -3962, -1880, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962,  1786, -3962, -3962, -3962, -3962, -3962,
    1991, -3962,   657, -1907, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962,   661,  1584,  3492, -3962,
     394, -3962,    72, -3962, -3962, -3962, -3030,   -58,  -239, -3962,
   -3962,   364,    50,  3168,  -235, -3093, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,   408,   405, -3962, -3962,   227,
   -3962, -3962, -1312, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
    -412,  -375,  1920, -3962, -3962, -3962,  4144, -3962,  3587, -3962,
   -1818,  2294, -3962, -3962, -3962, -3962, -3962,  2366, -1740, -3962,
   -3962, -3962,  1329, -3962, -3962, -3962, -3962,  -737,   251, -3962,
     254, -3962,   256, -3962,   266, -3962,   275,   277,   280,   281,
   -3962,   283, -3962, -3962,  -367, -3962, -3962, -3962, -3962,   284,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962,  -249, -3962, -3962,
     -95, -3962, -3962,  -228,   285, -3962,  -175,   288, -3962,   289,
   -3962,   -91, -3962,   -89, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962,  3190, -3962, -3962,
   -3962, -2077, -3962, -3962, -2489,  2718, -3962, -1863, -3962, -3962,
   -2000, -3962, -3962, -1751,  1052, -3962, -3962,   -88,   597, -3962,
   -1359, -1955, -1926, -3962, -3962, -3962, -2112, -2095, -1421, -1315,
   -2399, -3962, -3962, -3962,   287, -3962, -3962, -2662,  2121,  2715,
   -3962, -2050, -3962, -3962,  1175, -3962, -3962,  1349,   638,  1355,
   -3962,   936,  2920, -1255, -3962, -3962, -3962, -3962, -3962, -3962,
      -8,   257,   -94, -3962, -3382,   649, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3961, -3962, -3962, -3962,  -253, -3962,
   -3962,  -167, -3962, -3962,  -213, -3962,   105, -2392, -3962, -3962,
   -3962, -3962,  2679, -1393, -3962,  3738, -3962,  -417,   748,  2160,
   -2271, -1465, -3962,  -911,  -909, -2572, -3962, -3962, -3962, -3425,
    1117,  1534, -3962,   841,  2153, -1974, -3962,  1612, -3962, -3962,
     869, -3962, -2861, -3962, -3962, -3962,   823, -3962,   825, -3962,
   -3962, -3962,  -758,   793, -2658,  1681,  -841, -3962,   373, -2438,
   -2637, -3962,   596, -3962,   548, -3962, -3872, -3364, -3962,  -594,
   -2174, -2493,   -67, -3962, -3962,   561, -3174,  1737, -3962, -3962,
   -3962, -3263, -3337,  1466, -3962, -3962,  1034, -3962, -1564,  1036,
   -3962, -3962, -3962,  1043, -3962,   112, -3962, -3962, -3962, -3962,
   -2699, -3962, -3962, -1519, -2396, -3962, -3962,    10, -3962,  3759,
    3763,  4288,  4291, -1038, -2462, -2705,   114,   116, -3962, -3962,
   -3962,  2701, -1486,   189,   181,   184,  2100, -1900,   340, -2486,
   -3962,   395, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,  2191,
   -1533, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -2513, -2525,
   -3962, -3962,  1653, -3962, -3962, -3962, -1686, -1478, -1483, -1946,
     232, -2254, -3456, -3962, -3962, -3962, -3962, -3962, -3962,  2829,
   -3962, -3962, -3962, -3962, -3962,  3710, -3962,  2842, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962,   626,  1870, -3962, -3962, -3962,
   -3962, -3962, -3962,   910,  2734, -3962, -3962, -3962,     7, -3962,
   -3962, -3962, -3962,  2438, -3962, -3962, -3962, -3962,  2783, -3962,
   -3962, -3962, -3962, -3962, -3962,  1443, -3962,  1914, -3962, -1495,
   -3962, -3962,  1019,  -996,  1869,  3707,  2005, -3962, -3962,  -617,
   -3962, -3962, -3962, -1729, -1920, -3962,  3435,  -834, -2671,  2423,
    -674, -1894,  1063,  -413,  4472, -3962, -1145, -1072, -3962, -3962,
    -666, -3962, -3962, -3962,  -615, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962,  1481, -3962, -3962, -3962,
   -3962, -1228, -3962, -3962, -3962, -3962, -3962, -3962, -3962,  1581,
   -3962,  2096, -3962,  -522, -3962,  3206, -3962, -3962, -3962, -2429,
   -1893,  1798,   963, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -1593, -3962, -2453, -3962, -3962, -3962, -3962, -3962,
    2015, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -1725, -3962,
   -1906,   163, -3962,   316, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962,  -100,   844,   -99, -2814, -1088,  1828, -3962, -3962, -1302,
    3246, -2422, -3962, -3962, -3962,  1997, -3962, -3962, -3962, -3962,
   -3962,   930, -3024,  2855, -3962, -3962, -3269,  -910, -2351,  -886,
   -3962, -2439,   479, -1881, -1846,  -306, -1331, -1329, -3962, -3962,
   -3962, -3962,  -193, -3962, -3962, -3962,   501,  1893, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,  -564,
    -846, -3962, -3962,  2154,  2591, -3962,  3128, -3962, -1007,  3391,
   -3962, -3962,  3396, -3962, -3962, -3962, -3962,  3047,  3010,  1960,
   -3962, -3962, -2413, -3962, -3962,  1921, -3962,   756,  -899, -1844,
    1046, -3962, -3962,  1048, -3317, -3962, -3962,  3398, -3962, -3962,
   -3962,   989, -3962,    27,  3768,  3399, -3962, -3962, -3962, -3962,
   -3962, -3962,  2763, -1058,  3696, -3962, -3962, -3962, -3962, -3962,
   -3962,  2410, -3962, -3962, -3962, -3962, -3962, -3962,  2959,  3794,
    -597, -1280, -3962,  -760,  2940,  2415,  -861, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962,  2586,   971, -3962, -3962, -3962,  3044, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962,  1093,  -113, -3962,    30,
    -140, -3962,   -35, -3962, -3962, -3962, -3962, -3962,  -206, -3962,
   -3962,  -210,  2819,  -995, -1399,   683, -1256, -2118, -3962,  1079,
    3025, -2555,  -699, -1148, -1157, -2052,   108, -3962, -3962,  2995,
    1665,   120,  -753,  -348,    -6, -2926,  -111,  -598, -3962, -1730,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
    1918, -3962, -3962, -3962,  1053, -3962,  3817, -3962,  2672, -1366,
    3822, -3962, -3962,  -590,  2486,  1929,  1932, -3962, -3962,  1939,
   -1876, -3962, -3962, -3962,   174, -3962,  2569, -3962, -3962, -3962,
   -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962,  2527,  3545,  3058, -3962,  2587, -3962, -3962,
   -3962, -3962, -3962,   298, -3962,   631, -3962, -2563,  2845,   572,
   -3962,  1141,  -562,  -797, -3962, -3962,   293, -3962, -3962,  1315,
    3843,  3550, -3962, -3962, -3962, -3962, -3962, -2842,  -882, -3962,
   -3507, -2915, -1717, -3962, -3962, -2245, -3131, -3962, -3962, -1042,
   -3962, -3962, -3962, -3962, -2026, -3962, -3962, -3962,    67,  3913,
    3917, -3962, -3962,  -177, -3962,   352, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962,   355,   686, -3962, -3962,  3772, -3962, -3962,
   -3962, -3962,  3773, -3962, -3962, -3962, -3962, -3962,  3776, -3962,
   -3962, -3962, -3962, -3962,  2044, -3962, -3962, -3962, -3962, -3962,
   -3962, -3962, -3962
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    56,   629,  1504,    57,    58,    59,    60,    61,  1344,
      62,   840,  1261,  1806,  1807,    63,   566,    64,  1037,  1575,
    1576,  3140,  3141,  1577,    65,  2209,  3177,  4238,  3178,  4243,
    3179,  4245,  1595,   529,  2178,   530,  2048,  2049,  1063,  3161,
    3127,  3948,  3131,  4062,  4202,  4104,  2131,  3500,  3949,  3950,
    4071,   561,  2207,  1524,  4229,  2028,  4339,  2029,    66,   661,
    1035,  1548,  1549,  3518,  3519,  3781,  3520,  3773,  3774,  3775,
    3776,  4467,  4312,  4409,  4468,  4540,  4574,  4580,  4509,  4589,
    4590,  4591,  4578,   886,  4592,    67,   592,   593,   888,  1376,
    1820,  1377,    68,    69,   560,  1287,  1288,  1289,  1290,  2385,
    1821,  2380,  2381,  3296,  4510,  4576,  4595,  4313,  4314,  4209,
    4315,  4074,  4316,  4213,  4317,  4077,  4318,  4319,  4320,  4321,
    4459,  4322,  4208,  4502,  4309,  4310,  4461,  4556,  4571,  4323,
    4084,  4203,  4396,  4085,  4204,  4454,  4305,  4455,  4497,  4552,
    4306,  4397,  4500,  4400,  4324,  4330,  4469,  4325,  4331,  4326,
    4089,  4220,  4329,  4218,  4328,  4465,  4464,  4536,  2737,  3160,
     648,   649,   673,  2199,   650,  1052,  1008,  1526,  2061,  2062,
    2587,  2588,  2719,  2720,  2721,  2053,  2054,  2055,  2187,  2188,
    2189,  2035,  2036,  2037,  1530,  2032,  2033,   651,  1009,  1019,
    2056,  2057,  2058,  2725,  2191,  2192,  2193,  2194,  1249,  1250,
    3007,  2743,  3170,  3967,  3528,  4111,  4345,  3171,  3172,  2662,
    3074,  2141,    70,   581,   863,  1341,  2433,  1342,  2435,  2893,
    2894,  2895,  1865,  1866,  3846,  1870,  2432,  4007,  4356,  4152,
    4153,  2897,  4151,  2901,  3321,  3322,  3615,  3848,  4010,  4361,
    4263,  4429,  4359,  4425,  4360,  4427,  4521,  4479,  4480,  4273,
    4370,  4371,  4433,  4482,  4164,  4165,  4166,  2455,  2907,  3851,
    3787,  2181,  1516,  1517,   531,   532,   533,   669,  2744,  2116,
    2745,  2746,  3104,  2118,  2119,  2864,  1435,  3095,  3061,  3829,
    3167,  3108,  3109,  3110,  3111,  3112,  3118,  3024,  2597,  2598,
    2667,  3121,  3965,  3705,  3720,  3484,  3485,  3486,  3487,  3488,
    3489,  3490,  3196,  3197,  3194,  1111,  3910,  3911,  3912,  3190,
    3191,  3754,  3737,  3738,  3739,  4058,  3966,   802,  3929,  3547,
    1402,  1403,  4017,  1413,  1414,  2487,  1920,  2488,  1520,  3548,
    3549,  3550,  3748,  3251,  3826,  3257,  3258,  3259,  2827,  2828,
    2829,  2830,  2831,  2324,  3740,  3120,  3698,  3903,  3906,  4052,
    4296,  2599,  3025,  2600,  3029,   960,   534,  3741,   536,   537,
     538,  2601,  2602,  1609,  1610,  4114,  4122,  4126,  4115,  4127,
    4123,  4116,  4117,  4118,  4129,  4125,  2750,  3788,  3789,  3018,
    3267,  4054,    71,  1536,  1002,  1011,  1007,  1027,   656,  1537,
    1020,  2132,  2673,  3760,   638,  2120,  3690,  3413,  3694,  2121,
    3040,  2122,  3400,  3675,  2123,  3430,  3692,  3900,  3041,  3042,
    2124,  2125,  2126,  3412,  3422,  4044,  3277,  3278,  3279,  2603,
     125,  2372,  3116,  2646,    72,  1482,    73,   974,   975,   976,
    2531,  2532,  2975,  3376,  3652,   969,   970,   971,  1994,  2529,
      74,   664,  1581,    75,  1354,  2447,  2448,  2449,    76,  1028,
      77,    78,   665,  1588,  1589,  1590,    79,  1337,   132,    80,
     873,  1349,  1351,  1352,    81,   660,  1029,  1030,  1031,  1032,
    2137,    82,  1857,  2412,  2413,  2414,  2415,  1545,  2675,  1546,
    1547,  2146,  3314,    83,    84,   626,  2332,   598,   892,   599,
     600,  1911,  2470,  3830,   903,   904,   905,  2935,  1389,  1390,
    1391,  2475,  2940,  1108,   803,   804,   805,   806,  1202,  1203,
    3742,   807,  1212,  1767,   808,   809,   810,   811,   812,   813,
    1794,  3223,  3224,  3567,  2359,  2360,  2361,   814,  2246,  3208,
    2260,   815,  1195,  1752,  1683,  3559,  3216,  3811,  3981,  1626,
    2229,  2780,  2860,  2326,  1133,  1134,  1098,  2236,  1632,  2001,
    2002,  2003,  2004,  2005,  3663,  3662,  3664,  4021,  3868,  4023,
    3872,  2543,  1896,  1897,  2006,  2007,  2977,  3866,  4177,  2327,
    2328,  2329,  3585,  2978,  3381,  2996,  2997,  3879,  2534,  2008,
    2984,  4285,  4030,  4031,  4389,  4388,  4032,  3877,  3878,  3668,
    3669,  3136,  3137,  3138,  2921,  1673,  1674,  1681,  1322,  1323,
    1627,  2410,  2882,  3859,  4014,  2350,  3637,  4012,  4171,  2129,
    3069,  3070,  2472,  2473,  3000,  3397,  3427,  1438,  3831,  2884,
    1965,  1966,  3794,  4579,  2832,  2691,  3008,  2430,  1884,  4278,
    4437,  4524,  4525,  3351,  3352,  3641,  3642,  2474,  2932,  3353,
    3860,  4176,    85,   542,    86,  1804,  2365,  2863,  1258,  2377,
    1039,  1356,  1613,  1614,   827,   556,  1251,  1252,  1253,    87,
     567,  2411,    88,   588,  1894,   853,   877,  1357,  1358,  2456,
    2908,  2915,  2457,  2920,  3625,  2910,  3327,  3328,  2367,  2368,
    2911,  3330,  3622,  3605,  3606,  3309,  3843,    89,   614,  3392,
    2991,  2992,  4255,  4256,   878,    90,   541,  1085,  2758,  1619,
    2217,  1086,  1087,  2220,   693,   694,    91,   978,   609,  1461,
    1462,  1463,  1981,    92,   603,   961,  2961,  2967,  1960,   869,
    1254,  1442,   964,  1443,  1946,  2510,  1423,    93,   998,   997,
    1511,    94,   634,  1512,    95,   841,  1281,  1816,  2868,  3282,
    3593,  1282,  1283,  2378,    96,   589,   883,   884,  1361,  1899,
      97,   583,   870,  1887,  1876,    98,   571,    99,   100,   857,
    3315,  4354,  4475,   575,  1859,  1331,  3529,  4280,  4379,  4380,
    4382,  4445,  4446,  4518,  4583,  4606,  4599,  4609,  4610,  4613,
    4618,  4619,   817,   984,   818,  3894,   819,   820,   821,  2916,
    2917,  3398,   822,  2918,   823,  3019,  1040,  1616,   564,   507,
    2680,   645,   985,  2890,   825,  4091,  1005,  1056,   509,   510,
     101,   602,   907,  1393,   920,  1418,  1408,  1417,  1940,  2504,
    1943,  2505,  2506,  3365,  2957,  3366,  2958,   965,  1936,  1394,
    2959,  1944,  2954,  1395,  1929,  1930,  1931,  1932,  2951,  1926,
    2485,   102,   578,   860,   514,  1335,  1336,  2421,   103,   613,
     104,  1324,  1853,  1854,  2407,  2881,  2408,   105,   889,  1380,
     106,   843,  1316,  2396,  1317,  1829,  1318,  1319,  1843,  1837,
    1846,  1840,  4139,  3997,  3998,  2878,  1257,  1057,  1058,  2388,
    2872,  2873,  3838,  4000,  3597,  4145,  4146,   107,   133,   517,
     667,  1046,  1383,   108,   109,   110,   111,  1386,  1499,  2466,
    1500,  2333,  1501,  1502,  2015,  1909,  1748,  1749,  3265,  1192,
    1193,  2336,  2836,  2837,   906,   677,  1073,  1065,   126,   127,
     128,   680,   681,   129,  1025,  1026,  2674,  3133,  3502,  3763,
    3764,  3954,  4099,  4095,  4096,  4093,  4098,  1067,  3961,  4416,
    4544,  1068,  1069,  3162,  3963,  4233,  4418,  4516,  1070,  2734,
    3515,  4100,  4341,   112,   986,   623,  1497,  1492,  1494,  2011,
    2550,   113,   114
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     508,  1506,  1049,  1513,  1064,  1072,   963,   991,   918,   959,
    1387,   647,   923,   557,  1404,  1407,  1882,   565,  1883,  2476,
     816,   535,  2218,  2429,  1419,  1736,   582,   558,  2145,  1823,
    1621,  2334,  1860,   594,  1735,  2478,   597,   580,  1967,  1135,
     594,  1688,  1006,   587,  1611,  1612,  1439,   615,  1471,  2639,
    2142,  1941,  2705,  2128,  3055,  1021,   506,  1822,  2127,  2883,
    1758,  3002,  2914,  3380,  1235,  2781,  1424,  1766,  2507,  1433,
    2783,  2117,  1439,  2668,  2964,  2965,  3667,  1652,  3338,  1447,
    1710,  2379,  3174,  1093,  2460,  1868,  2528,  2726,   636,  2989,
    2842,  1518,  2596,  1519,  1468,  1469,  1470,  3496,  1472,  2968,
    1038,  1041,  3056,   670,  2727,  2039,  2980,  2590,  3051,  2059,
     639,  2059,   508,  3027,  2990,   508,   646,   652,  3855,  2866,
    3201,  2937,  2605,  2016,   135,  2051,  2609,  1197,  1198,  3672,
    2370,   563,  1488,  1363,  3586,  3192,  2591,  2624,  2200,  3199,
    1230,  1768,  1769,  1197,  1198,  1772,  1773,  1774,  1775,  2635,
    1777,  1778,  1780,  1782,  1783,  1784,  1785,  1786,  3536,  1197,
    1198,  1320,  1320,  2237,  2578,  3262,  4138,  2038,   641,  1974,
     666,   643,  3746,  2553,  2554,  2195,  4112,  1863,  2643,  1188,
    1189,  1190,  2471,   515,  3012,  3013,  3991,  1986,  2715,  1844,
    2565,  2586,  1231,  3708,  3713,  3715,   657,  3714,  1989,  1990,
    1473,  2930,   635,   579,  1197,  1198,  3030,  2583,  2584,   586,
    2234,  2040,  1197,  1198,  4398,  2060,  3724,  2060,  4428,  1915,
    1197,  1198,  3745,  2604,  2321,   612,  2607,  2608,  3896,  2610,
    4230,  3152,  2613,  2614,  1841,  3021,  2617,  2190,  1582,  1256,
    1465,  2626,  3687,   569,  2723,  1800,  2630,  2631,  2632,  2633,
    2634,   572,  1421,  2962,  2638,  2393,  2640,  4215,  2670,   999,
    3483,  3280,  2649,  2650,  2651,  2652,  1080, -2007,  2656,  2679,
    2658,  2682,  2683,  2724,  1350,  1197,  1198,  2693,  2694,  1197,
    1198,  2196,  3801,  2547,  3543,  2567,  2702,  2703,  1197,  1198,
    3409,  2707,  3882,  3361,   748,  3215,  3544,  3253, -1540,  2051,
    1109,  1321,  1321,  2838,  3853, -2560,   658,  2051,  1197,  1198,
    3545,  3300,  1515,  3145,  3146,   981,  1197,  1198,  2644,  2030,
     925,   909,   925,  3709,  1874,  4112,  1197,  1198,  1515,  2760,
    1197,  1198,  1885,  2034,  1197,  1198,  3182,  3198,  3184,  2710,
    2711,  2712,  2713,  -922,  4398,   972,  1197,  1198,  1495,  3021,
    3837,  4112,   682,  4113,   850,   518,  1583,  3543,  4206,  -570,
    1584,  4344,  3343,  2133,  2067,  2383,  2179,  3928,  1175,  3544,
     573,  1585,  1179,  3992,  1515,  1578,  1115,  1167,   875,  3234,
     576,  1197,  1198,  3545,   611,  3125,  1601,  1602,  1603,  3991,
    2313,  1444,  1480,  1197,  1198,   925,   909,  4426,  1197,  1198,
    4430,  4194,  1171,   134,   595,  -571,   967,  3254,  3673,  3378,
    3941,   130,   672,  3943,  2210,  2052,  4216,  1450,  2948,  1651,
    1604,  2825,  1197,  1198,  1440,  4443,  4011, -1540,  4541,  3596,
    2143,  1604,   134,  1135,  1197,  1198,  3123,   674,  2211,  2949,
   -1824,   851,  2833,   512,  3129,   136,   513,  4542,  2826,  3916,
    1605,  1197,  1198,  1600,  4033,   849,  2144, -2489,  3920,  3130,
    4108,  1606,  4444,   835,  1541,  3379,  2384,  2394,  3979,  1060,
    2322,  1116,  1168,  2950,  1441,  3176,  3022,  3253,  3993,  2134,
   -2490,  3940,  2031,  3124,  1481,   968,  3942,  1000,   653,  1199,
    3770, -2035,  1200,   982,  2298,  2009,  1917,  1172,   131,  3771,
    3333,   774,  4113,  1586,  1079,  1343,  3157,  2034,  3347,  3348,
    3016,  1937,   852,  1197,  1198,  2034,  4519,   646,  4207,   652,
    3973,  1199,  1001, -2176,  1200,  4003,  1197,  1198,  4113,  3126,
    1998,  2371,  3384,  1197,  1198,  2177,   876,  1197,  1198,  3404,
    2370,   831,  1763,  3407,  3408,   652,  1176,  1466,  1496,  4424,
    2479,   973,   848,  3033,  3416,  1600,   844,  3037,  1197,  1198,
     646,  3689,   854, -1540,  2623,  3406,  1199,  4059,  1234,  1200,
   -2489,  3053,  3054,   570,  1199,  2931,  3992,  1200,   871,  1635,
    1636,  1969,  1199,  3067,  1972,  1200,  1824,  3254,  4191,  2052,
    1976,  1522,  3077, -2490,  1197,  1198,   919,  2052,  1587,  4217,
    1676,  1771,  3117,   800,   979,  1518,  2395,  1519,  2726,  1690,
    1422,  4034,  2668,  3158, -1500,  2039,  2014,  1579,  1792,  1991,
    1992,  1703,  1704,  1705,   995,  2727,  1197,  1198,  3410,  1709,
    3405,  2092,  2590,  2059,   646,  2988,  1010,  1199,  3994,  3772,
    1200,  1199,  3876,  1247,  1200,  2671,  1823,   646,   636,   508,
    1199, -1500,  2117,  1200,   636,  3619,  1036,  3995,   636,   636,
    1842,  2591,  3512,  1050,  1051,  1010,  3674,  2998,  4561,   646,
    1199,  3832, -2199,  1200,  1822,  1197,  1198,  2038,  1199,  1081,
    1916,  1200,  1082,  1083,  1518,  2235,  1519,  1088,  1199,  4304,
    2668,  1200,  1199,  3023,  1803,  1200,  1199,  3539,  3281,  1200,
    1845,  1197,  1198,  2589,  2351,  1023,  1999,  2521,  1199,  1476,
    2000,  1200,  2963,  4132,  3147,  2354,  1988,  4333,  2357,  2201,
     890,  2040,  3014,  1246,  3670,  2645,  4121,  3036,  2348,  3038,
     839,  1580,  1136,  3255,  2174,  4020,  3049,  1197,  1198,  2060,
    3600,  3601,  3602,  1199,  4172,  2938,  1200,  1078,  1201,  3716,
    3062,  3511,  3015,  1864,   861,  1199,  3996,  3073,  1200,  3535,
    1199,   874,  1022,  1200,  1201,  2723,  2337,  2195,  1033,  3097,
    3099,  3101,  3048,  1862, -1540,  3102,   574, -2560,  2728,  3524,
    1201,  3632,  3633,  3634,  1199,  3057,  3702,  1200,  3189,  2016,
    1892,  4107,  2366,  1194,  2724,  1196,  1199,  3142, -1540,  1200,
    3419,  3362,  1405,  3701,  2817, -2560,  1410,  1415,  1922,  2979,
    4291,  3263,   953,  1199, -2035,  3010,  1200,  3722,  3723,  4453,
    1436,  1239,  1240,   508,  1242,  1201,  1010,   508,   646,  2190,
     508,   646,  1580,  1201,   983,  4015,  1291,  3721,  4419,  3235,
    2722,  1201,  1325,  -922,  1445,  3726, -2176,  2314,  1973, -2317,
    4240,  1580,  3751,  3802,   636,  3546,  2323,  2210,  3540,  -570,
    3995,  1875,  1197,  1198,  3181,  3144,   646,   636,  1061,  1886,
    1451,   636,  4195,  2196,  3150,  1199,  3710,  3481,  1200,  1241,
    2244,  2211,   527,  1245,  2729,  1505,  1255,  1177,  1199,  3686,
     577,  1200,   675,   513,   512,  1199,  1201,   513,  1200,  1199,
    1201,   919,  1200,  1248,  3530,  -571,  -209,   646,  2444,  1201,
    2226,   646,   646,  3255,  1743,  1744,  3677,  3693,   837,  3256,
    1199,  2888,  3626,  1200,  2245,   646,  2018, -2489,  3546,  1201,
    3657,  2051,  4105,  4298,  3661,  4300,  2064,  1201,  3399,  3541,
    2914,  2371,  3678,  1743,  2264,  1197,  1198,  1201,  1644,   872,
   -2490,  1201,  2299,  2995,  3656,  1201,  1199, -2489,  3660,  1200,
    4027,  2302,  2303,  3274,  1400,  2319,  2320,  1201,  1334,  2238,
    3666,   846,   636,  1024,  1197,  1198,  4392,  3159,  4351,  1042,
   -2490,  1353,  2225,  2418,  1345,  1359,  1232,  3326,  1199, -2035,
     646,  1200,  1514,  2513,  2270, -2199,  3635,  4028,  3418,   879,
    3699,  3700,  1201,  3318,  1197,  1198,  -475,  4373,  3198,  1950,
    3526,  3198,  3198,  3563,  1201,  1284,  2847,  2848,   511,  1201,
    2747, -2176,   636,  2490,  1197,  1198,   624,  4048,  3198,  2243,
    1066,  1074, -1500,  3212,  3213,  2740,  4421,  1199,  1062,  2726,
    1200,  4604,  3725,  1201,  1197,  1198,  1477,  3744,  3747,  3749,
    3750,  1197,  1198,  1197,  1198,  1201,  2727,  3323,  2250,  2730,
    2590,  4025,  1232,  1199, -1824,  3372,  1200,  3163,  3856,  3219,
    3220,  2517,  1201,  1998,   636,   115,  3526,  3395,  1617, -2676,
    3385,  3386,  3028,  3028,  1753,  1326,  3236,  3237,  2463,  2591,
    1197,  1198,  1197,  1198,   516,  1439,  1197,  1198,  2099,  1199,
    1197,  1198,  1200,  2552, -2405,  3341,  1197,  1198,  1197,  1198,
    1197,  1198,  1136,  2515,  1967,  1967,  3880,  1984,  1985,  2419,
    2358,  1791,  1746,  3968,  3103,  2520,  1136,  1439,  2523,  2524,
    2379,  2596,  1484,  3653,  1201,   559,  4338,  1197,  1198,  2034,
   -2624,  4210,  4211,  1197,  1198,  2039,  2102,  1201,  3271,  3272,
    2445,  1197,  1198,  2494,  1201,  2349,  1197,  1198,  1201,  2653,
    2624,  3542,  2251,  1329,  2059,   568,  2762,  1197,  1198,  2257,
   -2199, -1851, -2317,  2262,  2356,  1825,  1737,  2128,  2902,  1201,
    1478,  1624,  2127,  1197,  1198,  2748,  3164,  2206,  1608,   646,
    2424,   117,  1615,  1624,  2263,  2117,  2723,  2798,  3415,  1624,
     601,  2846,   625,  1824,  2369,  3869,  3870,  2038,  1197,  1198,
    1197,  1198,  1489,  1479,  4393,  1201,  3349,  1197,  1198, -1852,
    2731,  2052,  4049,  1787,  1199,  2724,   646,  1200,  2589,  3527,
    2266,  1795,  1873,  4605,  1933,  1645,  1883,   636,   662,   607,
    2373,  2389,  2969,  1197,  1198,  1426,  3543,  1201,   880,  1999,
   -2624,  2040,   636,  2000,  1883,  1883,  3982,  4228,  3544,  1197,
    1198,  2334,  4281,  2540,  2851,  2852,  2330,  1247,  1053,  4235,
    2060,  1518,  3545,  1519,  1197,  1198, -2405,  2514, -1851,  1136,
     646,  1197,  1198,  1043,   925,   909,  3389,  1401,  2593,  3629,
    2440,  2441,  1927,  2195,  1233,  3527,  1201,  1736,  1747,  2728,
    2464,   584,  4013,  2845,  1427,  1934,  2462,  1199,  4626,  1625,
    1200,  2278,  3005,  2855,  1197,  1198,  1849,  3564,  1852,  4292,
     636,  1640,  1201,  4050,  2985,   847, -1852,  1695,   690,   610,
    2420,   636,  1400,  4188,  1428,  2986,  1199,   646,  2446,  1200,
    1197,  1198,  1197,  1198,  2654,  1957,  2501, -2317,   636,   636,
    2444,  1797,  2898,    13,  3977,  2190,   596,   881,  1201,  2660,
    2668,  2722,   893,  1406,  1330,  4282,  1199,  4283,  3165,  1200,
    1233,  1677,  2242,  3805,  1678,  1197,  1198,  1906,  4029,  1540,
    3584,  4338,  2668,  1883,  1883,  1914,  1199,  1736,   691,  1200,
     608,  1918,  3312,  1485,  3933,  3970,  2993,  1197,  1198,  2196,
     646,  1197,  1198,  2620,  3577,  2729,  1199,  1958,  3934,  1200,
    1938,   919,  2020,  1199,  2495,  1199,  1200,  1320,  1200,  1197,
    1198,   508,   508,   508,   636,   508,   636,  1235,  3006,  1244,
    1607,  1968,   882,  2051,  1359,  1788,   953,  1970,   508,  2395,
     646,  2749,  2331,  2143,   508,   676,   627,  1856,   659,  1197,
    1198,  1657,  1199,  3350,  1199,  1200,   637,  1200,  1199,  1789,
      25,  1200,  1199,  1359,  1928,  1200,  1385,   636,  1199,  2144,
    1199,  1200,  1199,  1200,  1044,  1200,  3166,  1951,  1952,  1953,
    1736,  1955,  4288,  1201,  4470,  4470, -1851,  2341,  3646,  3071,
     894,  2933,  1197,  1198,  1971, -1824,  4297, -1540,  2285,  1199,
    1975,  3411,  1200,  1197,  1198,  1199,  -475,  3028,  1200,  1935,
    1197,  1198,  2265,  1199,   628, -1851,  1200,   646,  1199,  3795,
     692,  1200,  2735,  4175,  3390,  1197,  1198,  1248,   646,  1199,
    2987,  4225,  1200,   636, -1852,  3423,  2138,   636,  1954,  1923,
    1956,  1947,  4226,  3429,  2736,  1199,  1429,  3431,  1200,  1197,
    1198,  1045,  1661, -1540,   630,  1197,  1198,  1321,  2585,  1197,
    1198,  1197,  1198, -1852,  1924,   895,  1201,  1197,  1198,  2468,
    1199,  1871,  1199,  1200,   636,  1200,  4247,  4110,  2934,  1199,
    2252,  1987,  1200,  1197,  1198,    43, -1540,  2623, -1540,  1959,
    1197,  1198,  2445,  3935,   646,  1201,   508,   508,  1061,  2208,
     508,  3504,  1197,  1198, -1540,  1199,   642,  1998,  1200, -1540,
    2289,  3114,  1088,  3952,  2224,  4276,  1872,   640,  1197,  1198,
    2622,  1199,  1790, -1540,  1200,  1201,  2362,  3142,  4293,  3978,
     654, -1540,  3791,  3792,  2363,  4385,  1199,  1624, -1540,  1200,
    2290,  2034, -1851,  1199,  1437,  1201,  1200,  2135,  3770,  2050,
   -1540,  2140,  2204,  2205,  2450,  1401,  2589,  3771,  1662,  2468,
    2292, -1540,  1665,  4155,  4174,  1201, -1540,  1823,    37,  1666,
    3058,  2342,  1201,   655,  1201, -1540,  1199,  1197,  1198,  1200,
    2293,  4386,  1197,  1198,  4156,  1430,  2253,  1136,  2271,  2297,
   -1852, -1851,  3580,  3394,  2374,  1822,  3582,    43,  1247,  1197,
    1198,  3183,  1199,  1024,  1199,  1200,  2469,  1200,  3270,  1197,
    1198,  1201,  3952,  1201,  1197,  1198,  1431,  1201,  1197,  1198,
    4294,  1201,  2034,  2052,  2785,  1925,  2315,  1201,  3217,  1201,
    2728,  1201,  3218,   259,  2850,   261,  3229,  1199,  2792, -1852,
    1200,  1214,  3239,  2261, -1540,  3059,  3240,  1667,  2340,   605,
    4295,  1736,  4495,  4496,  4227,  1197,  1198,  1432,  1201,  1199,
    3329,    55,  1200,  1199,  1201,  1699,  1200, -1540,  1062,  1247,
     117,  2807,  1201,  3815,  4041,  4042, -1540,  1201,  2274,  3886,
    2446,  1199,  2051,  1999,  1200,  1877,  2275,  3115,  1201,  3953,
    2364,  2279,  2722,  1197,  1198,  3591,   646,  3772,   636,   646,
    4436,  3592,  2283,  1669,  1201,   662, -1540,  4387,  2489, -2676,
     636,  1199,  1197,  1198,  1200,  1291,  2888,  3546,  2284,  1679,
    1291,  1883,  1680,  2767,    52,  1338,  1580,  3881,  1339,  1201,
    3969,  1201,  1624,   646,   606,  2183,  2729,   663,  1201,  1247,
    2861,  1437,  3743,  2288,  2012,  2291,  3060,  4043,  3613,  1878,
    1247,   636,  2294,  3907,  1199,   636, -1540,  1200,   896,   897,
    2819,   899,   666,   901,  1201,  1199,  1093,   953,  1200,  2334,
    1197,  1198,  1199,    55,  3189,  1200,   668,  2425,  2306, -1540,
    1201,   902,   646,   646,   636,   636,   671,  1199,  4094,  2343,
    1200,  2362,  2346,  3614,  2325,  1201,  1136,   512,   646,  3358,
     513, -1824,  1201,   865,   683,  2344,  2853,  1877,  4375,  3186,
     919,  1199,   918,   646,  1200, -1824,   923,  1199,   866,  4376,
    1200,  1199,   526,  1199,  1200, -2624,  1200,  3539, -1540,  1199,
     919,  1907,  1200,  2821,  2718,  1201,  3425,  1217,   953,   685,
    1197,  1198,   527,   867,  2512,  1199,  2426,  3987,  1200,  3205,
    2265,  2012,  1199, -1824,  1670,  1200,   585,  3821,  1248,   591,
    1723,  1201,  3908,  1201,  1199,  2416,   591,  1200,   518,  1334,
    1672,  1878,  2536,  1877,  1340,  3211,  2034,  3214,  2051,   826,
    1199,   688,   636,  1200,  4036,  4037,  2572,  4039,  4040,  3072,
    2034,  1214, -1540,   689,  2535,  2437,  1201,   832,  1353,  2443,
    3648,   636,   842,  3909, -1540, -1540,  2439,   259,   953,   261,
    3221,   845, -1739,  2183,  2771,   856,  1214,  3717,  1201,   953,
    3718,  3047,  1201, -1540,   858, -1540,   859,  2427,  2034,  1248,
    1214,  2183,  3225,   862,  1013, -2624,  3226,  1878,  1387,  1199,
    1201,  2772,  1200,   115,  1199,   885,  3426,  1200, -1540, -1540,
    2573,  3367, -1540, -1540,  3227,  3364, -1739,  3368,   887,  1908,
     864,  1199,  2219,  1214,  1200,  2508,  1531,  1532,  1879,   993,
    1201,  1199,  2052,   994,  1200,  1439,  1199,  3654,  2574,  1200,
    1199,  1439,   848,  1200,  3228,  1014,  2716,  3923,  3540,  2051,
    2732,   996,  2773, -1824,  3393,  2774,  2522,  3537,   876,  1248,
    1003,  3188,  1012,  2775,  1247,  2655,  2537,  1598,  3369,  4140,
    1248, -1824,  2184,  1201,  1034,  2546,  1054,  1199,  1247,  2669,
    1200,  3554,  3555,  1024,  1201,  2538,  1055,  3230,  1405,  3924,
    2718,  1201,  4377,  1405,  1879,  1059,  2539,  1234,  3233,   115,
     116,  2556,  2183,  1090,  3569,  3238,  1201,  2575,   983,  1880,
    2563,  2564,  3925,  1557,  1558,  1199,  1247,  1091,  1200,   117,
    3241,  2568,  2569,  2570,  2571,  1092,  2579,  2580,  2034,  3552,
    1201,  1094,  1015,  1095,  1199,  1096,  1201,  1200,  1099,  1736,
    1201,  1100,  1201,  1238,  3243,  2358,  2034,  1217,  1201,  3926,
    3245,   646,   868,  1237,  4214,   646,  3247,  2733,  1047,  1048,
     508,  1243,  3248,  2960,  1201,  2241,  1234,   636,   636,   636,
    2756,  1201,  1217,  2759,  1101,  1880,  4141,  4142,  3249,  2540,
    4092,  4143,  4144,  1201,  1824,  3574,  1217,  2843,  2576,   118,
    2593,  1260,  1199,   646,  1736,  1200,   119,  3575,   646,  1201,
    1102,  2718,  1759,  2993,  1103,  1226,  1227,  1228,  1229,  2428,
    1328,  1557,  1558,  3576,  1104,  4259,  2738,  2865,   119,  1217,
    4250,  4251,  4252,  4253,  1105,  2041,  1106,  1736,  2052,  4237,
    1107,  2681,  1110,   953,  2681,  2681,  3071,  2681,  2258,  1234,
    2681,  2681,  2681,  2681,  2681,  2681,  2681,   953,  1327,  2681,
    2184,  2681, -1739,  1332,  1573,  1574,  1247,  2034,  1201,  1112,
    2183,  3035,  1199,  1201,  4260,  1200,  2450,  3325,  2184,  4378,
    1113,   120,  3810,  4265,  1247,  1333,  4268,  4269,  4270,  4271,
    1201,  2752,  2753,  2754,  1114,   953,  3269,  3065,  3066,  2776,
    1201,  2541,   646,  2183,  3814,  1201, -1739,  4092,  4092,  1201,
    2267,  1234,  2761,  1347,  3820,  2620,  -664,   925,   909,  3822,
    2268,  1693,  -664,  3823,  1452,  2239,  4346,  2862,  2593,  2017,
    1219,  1220,   646,  2185,  1248,  2525,  2526,  2527,  1117,  3680,
    3681,  1881,  2594,  2042,  1219,  1220,  1201,  1346,  1248,  2052,
   -1824,  2871,  4168,  4169,  1453,  2143,  1016,  2877,  2877,  1360,
    2877,  3542,  1573,  1574,  1967,  2566,  1118,  1213,  2240,  1234,
    2280,  1234,  1119,  2542,  1348,  4170,  3756,  1219,  1220,  3151,
    1120,  2144,  2390,  1362,  1201,  2391,  1248,  2896,  2392,  2184,
    1047,  1048,  4363,  4364,  4367,  1247,  1760,  3895,  3824,  1121,
    3621,  4372,  1147,  1201,  2281,  1234,  1454,  1881,  2282,  1234,
    1455,   121,  2489,  1405,  2452,  2453,  1382,  3825,  2919,  1017,
    2577,  1018,  2922,  1122,  1166,  2034,  1123,  2877,  2877,  2877,
    2334,   893,  1388,  1736,  1124,   953,  1125,  1180,  1181,  2942,
    2777,  2944,  3329,  -664,  1126,  3895,  3183,  2286,  1234,   521,
    1197,  1198,  3332,   953,  1127,  4092,  4092,  1130,  2034,  4124,
    4128,  1201,  1131,  1224,  1225,  1226,  1227,  1228,  1229,  1137,
     919,  2876,  2876,  1138,  2876,  3883,  1214,  1968,  1968,  1139,
    4183,  4184,   122,  2143,  1397,  2865,  1222,  1223,  1224,  1225,
    1226,  1227,  1228,  1229,  2581,  2582,  2186,  3382,  2686,  1214,
    1222,  1223,  1224,  1225,  1226,  1227,  1228,  1229,  1737,  2144,
     925,   909,  2043,  2778,  1140,  1214,  2621,   646,   646,  1416,
    2572,  2044,  4347,  3096,  1385,  4258,  1248,  4349,  2045,  4350,
    1141,  1201,  2622,  3812,  1223,  1224,  1225,  1226,  1227,  1228,
    1229,  2876,  2876,  2876,  1248,  4133,  1320,  2184,   123,  2779,
   -1026,  1396,  4092,  1247,  1142,  2536,  1143,  2714,  2669,   894,
    1456,  1144,  2687,  2669,   953,  2941,  1145,  4092,  3032,  2669,
    2835,  1234,  3020,  2669,  1148,  3043,  1149,  3026,  1420,  1215,
    2184,  4092,  1150,  3034,  2573,  3043,  1247,  2669,  2669,  3044,
     646,  3043,  3231,  1234,  2021,  1151,  3064,  3298,  3299,  2669,
    1831,  1737,  2287,  1216,  3335,  3336,   124,  4124,  1152,  2022,
     636,  4128,  2574,  3068,  1761,   720,  3339,  3340,  3076,  1153,
    2185,  3043,  1154,  2046,  3079,  3080, -1540,  1155,  2669,  3113,
    1762,  1156,   987,   988,   895,   989,  1457,   990,  4092,  1157,
    3139,  3507,  3508,  1158,  2595,  1628,  1629,  1630,  3588,  1234,
    4092,  4092,  1437,  2185,  1159,  1248,  1160,  1641,  3703,  2688,
    -664,  3706,  3707,  4157,  1446,  2021,  3616,  3617,  3562,  3761,
    3762,  1161,  1217,  4124,  4128,  3798,  3807,  1162,  3719,   725,
    2022,  2575, -1540,  1448,  1832,  1163,  1321,  1164,  1696,  2537,
    1833,  1700,  1047,  1048,  1165,  1217,  4158,  4092,  1169,  1458,
     616,  1214,  4627,  3045,  3046,   636,  2669,  4092,  2538,  3816,
    1234,  1217,  1719,  1720,  3833,  1234,  1724, -1540,  3727,  2539,
    3589,  4337,   953,  1170,  3078,  3841,  3842,  3956,  2582,  1173,
    3075,  2047,  1174, -1540,  1738,  1739,  3971,  3972, -1540,  1178,
    2689,   918,  1834, -1824,  4092,   923,  4092,  3975,  3972,   617,
    2572,  3976,  3972,   524,  1182,   953,  4092,  1183,  1835,  -664,
   -1540,   518,  2576,  1184,  3728,  -664,  1218, -1540,  3729,  1185,
    3730,  2593,  1186,  4092,  2023,  4092,   737,  4092,  1187, -1540,
    4035,  3617,  1236,  2186,  4092,  2594,  4038,  3972,  4046,  4047,
   -1540,  1425,  2572,  1449,  4092, -1540,   699,  4182,  3340,  2450,
    3143,  1464,  2540,  1467, -1540,  4186,  3972,  2451,  4092,  4092,
    1474,  1459,  3777,  1248,  2573,  4159,  2186,  3731,  1475,  3168,
    1219,  1220,  1483,   618,  4092,  4092,  1486,  2572,  1487,  4092,
    3098,  4187,  3972,  1221,  1291,  3914,  3915,  1490,   646,  4189,
    3972,  1491,  2574,  1219,  1220,  2023,  1248,  1493,  3918,  -664,
     636,  2024,  4190,  3972,  1460,  3921,  2573,   753,  1498,  1219,
    1220,  4196,  4197,  4198,  4197,  4261,  4262,  1503,  2896,   646,
    4383,  3340,  1737, -1540,  4327,  3889,  2025,  1515,  2572,  1521,
    3944,  3100,   720,  3946,  2574,  1523,  -664,  1136,  4055,   646,
    1525,  2573,   521,  1528,  4055,  1529, -1540,  1217,  1533,  4160,
    4384,  3340,  1534,  3357,  2898, -1540,  1405,  4365,  4366,  1883,
    1883,  2575,  4390,  3617,  2541,  1582,  1535,  4161,  1538,  2574,
    3803,  1539,  2024,  4434,  4435,  1542,  2143,   896,   897,   898,
     899,   900,   901,  4476,  4477, -1540,  2026,  2452,  2453,   724,
    4162,  1543,  2573,  1544,  1047,  1048,   725,  2025,  -840,  1214,
     902,  1591,  2144,  2575,  4530,  3506,  4569,  4570,  4616,  4617,
    1736,  1592,  2690,  1593,  3311,  3988,  3989,  1726,  1727,  4257,
    2574,  3638,  3639,  1594,   730,  2454,  1222,  1223,  1224,  1225,
    1226,  1227,  1228,  1229,  2577, -1540,  2542,  1597,  2575,  2669,
    2070,  2071,  2576,  2669,  2669,  2879,  1599,  2880,  3043,  1222,
    1223,  1224,  1225,  1226,  1227,  1228,  1229,  2026, -1540,  3839,
    3840,   646,  4001,  4002,  2669,  1222,  1223,  1224,  1225,  1226,
    1227,  1228,  1229,  1600,  -805,  -805,  2073,  1618,  1620,  3356,
    2027,  1232,  3043,  1583,  2576,  1624,  -805,  1584,  1631,  2575,
    3043,  1643,  2076,   737,  3043,  1219,  1220,  1646,  1585,  1047,
    1048,  2077,  3222,  1682,  1692,  3732,  4457, -1540,  1693,  1694,
    3370,  3371,  3733,  3373,  2926,  2927,  2928,  1717,  1734,  2576,
     518,  1745,  1754,   619,   699,  2079,  1770,  1776,  3435,   782,
    1796,   636,  1799,  1801,  2536,   519,  3491,  1802,  1805,  1515,
    1808,  1809,   508,  2080,  1810,   620,  3501,  1811,  3043,  3734,
    1812,  2027,  1813,  -664,  1814,   828,   829,   830,   748,   520,
     833,   834,  1815,  3510,   836,   953,   838,  1826,  1827,   751,
    2576, -1540,  2085,   752,   753,  1828,  3521,  1830,  1838,   621,
    1836,  4163,  1839,   636, -1540,  1847,  1848,  1858,  3417,  1861,
    1869,  4006,  1888,  1889,  3534,  1217,  1890,  3421,  3497,  1891,
    1895,  1898, -1540,  3889, -1540,  1901,  1902,  1904,  1197,  1198,
     720,  1905,  4535,  1910,  4537,  1736,  1919,  1942,  1945,  1977,
    3735,  1979,  4299,   590,  4257,  1978,  2227, -1540, -1540,  1949,
    1586, -1540, -1540,  1980,  1982,  2398,  1993,  1387,   622,  1996,
    2010,  4554,  2019,  2065,  2089,  3436,   524,   521,  2130,  1387,
    1580,  2147,  2090,  1224,  1225,  1226,  1227,  1228,  1229,  2399,
    2148,  3643,  2149,  2150,  2577,  2151,  2173,   724,  2537,  2091,
    2152,  2153,  3736,  2400,   725,  2154,  4584,  4585,  2155,  2156,
    3587,  -871,  2157,  2158,  2401,  2159,  4016,  2538,  2942,  2160,
    2161,  2162,  2163,  2164,  3513,  2165,  2272,  3523,  2539,  2166,
    2276,  2167,   730,  2168,  2175,  2169,  2577,  2170,  1653,  1654,
    1655,  1656,  1657,  2871,  2171,  2172,  1325,   646,   646,   646,
    2197,  2198,  2213,  2203,  2300,  1587,  2214,  2215,  2093,  2216,
     522,  2896,  2222,  2259,  2402,  2403,  2248,  2228,   527,  2265,
    2230,  2577,  -664,  1219,  1220,  2231,  2094,  2232,  2247,  2249,
    2919,  3628,  2254,  2256,  3630,  2255,  2269,  2304,   646,   646,
     646,  2273,  2404,  2277,   543,   774,   646,  2295,  2296,  2301,
    3890,   737,  2862,  3891,  2536,  4481,  2305,  2316,  4353,   919,
     919,  2540,  2335,  2317,  2318,  2339, -1244,  2345,   544,  1229,
    2355,   780,  2577,  1115, -1366,  1167,   782,  2375,  1171,   783,
    2098,  2387,  2386,  2409,  3867,  1737,  2417,  2423,  2100,  2434,
    1658,  1659,  1660,  1661,  2941,  2458,  2669,  2431,  2461,  2491,
    2477,  2492,  2493,  2509,  2496,  3081,  2669,  3082,  3043,  2405,
    2497,  2498,  2499,  4167,  2500,  2511,   748,  2516,  1737,  2533,
    2530,  2544,  2545,  2548,  3043,  2549,   636,   545,  2669,  2551,
    1259,   752,   753,  3892,  3893,  2557,  1405,  2555,  2562,  2592,
    2558,  1736,  2559,  4486,  4487,  2560,  4489,  2561,  4481,  3083,
    4611,  2593,  2606,  2611,  2612,  1736,  2615,   546,  2106,  2616,
    1736,  2406,  2618,  2619,  4620,  1736,  2625,  2627,  2628,  4611,
    2629,  2636,  3084,  2541,  4620,  2637,  4222,  2642,  2641,  1222,
    1223,  1224,  1225,  1226,  1227,  1228,  1229,  2647,  2537,  1177,
     547,  2648,  2657,  4526,  3649,  4527,  4528,  2672,  2676,  1662,
    3139,  1663,  1664,  1665,  2709,  1204,  1205,  2538,  2717,  3085,
    1666,   523,  2678,  2739,  2761,  2107,  2108,  2109,  2539,  2757,
    2765,  2770,  2786,  2787,  2110,  3790,  3790,  3790,  2788,  3861,
    2363,   524,  2799,  2869,  2800,  2812,  2834,   824,  2859,   548,
    2111,   646,  2841,  1206,  2112,  2542,  2849,   866,   924,  2858,
    1199,  2870,  2874,  1200,  1207,  2886,  2889,  4342,  1653,  1654,
    1655,  1656,  1657,  4340,  2892,  2899,   824,  2903,  4167,  2900,
    4581,  2891,  2905,   925,   909,  4405,  2923,   525,  2925,  -576,
     926,  2469,  2924,   526,  4596,  1864,   927,  2468,  1667,  2114,
    4405,  2904,  2909,  2946,  1208,  2947,  1927,  1928,  2956,  2966,
    2970,  2540,  2972,  2971,  4415,  1209,  2973,  2974,  2976,  3849,
     928,  2981,   929,  2982,  1737,  2983,  3003,  2489,  2999,  3758,
    3004,  3017,   930,   774,  3871,   646,  3050,   527,  3890,  3122,
    3052,  3891,  1210,  3128,   646,   528,  3132,  3134,  3148,  3149,
    3154,  3155,  3782,  1668,  1669,  3200,  3175,  3156,  3153,   780,
    2099,  3180,  2223,  3189,   782,  3202,  3193,   783,  3195,  3250,
    1658,  1659,  1660,  1661,   -64,  3260,  3203,  3204,  3206,   549,
   -1824,   931,  3207,  3790,  3303,  3261,   932,  3266,  3264,   933,
    3268,  3273,   636,  3276,  3304,  3306,  3301,  3305,  3308,  3313,
    3316,  3904,  1405,   824,  3302,  3317,  1211,  3899,   824,  1338,
    3320,  3342,  3331,  3334,  3337,  3344,  3345,  3359,   934,  3346,
     935,  3892,  3893,  2541,  3355,  3354,  3360,   936,  3363,   937,
    4405,  4623,   646,  3374,  3375,  3383,  3387,  3388,  3401,   824,
    4513,  3391,  3402,  3403,  3492,  3495,  3420,  3499,  3432,  3498,
     550,  3414,   938,   939,   940,   824,  3424,  3503,  3433,  3947,
    3516,  3643,  3522,  3086,  2450,  3505,  3951,  3517,  2012,  3551,
    4016,  3557,  3558,  2322,  3255,  3566,  2092,   941,  3434,  1662,
    3864,  1663,  1664,  1665,  3521,  2067,  3594,  3607,  3506,  4545,
    1666,  3509,  3609,  3525,  3553,  2542,  3598,  1968,   942,   824,
     824,   824,   824,  3531,  3532,  1670,  3897,   646,  4405,  3533,
    4405,  3565,   824,  3578,  3612,  3631,   551,  4564,  4340,  1201,
    1671,  1672,   552,  3618,  3636,  3620,  3644,  4405,  3650,  2684,
    2685,   943,  2692,  3651,  3658,  2695,  2696,  2697,  2698,  2699,
    2700,  2701,  3659,  3671,  2704,  3679,  2706,  3682,  3683,   553,
    3688,  3697,  3704,  3752,  2670,  3755,  3759,  4405,  4405,  3765,
    3927,  3757,  4601,  3769,  3778,  3779,   646,  3780,  1667,  3786,
    3793,  3783,  3784,  3800,   554,  3796,  3797,  3798,  3799,  2922,
    3804,  3806,  3808,  3809,  3813,  3817,  3818,  3819,  3790,  3790,
     555,  3790,  3790,  3827,  3834,  4167,   944,  3835,  3828,  3957,
    3836,  3844,  3087,  3088,  3089,  3090,  3091,  3092,  3093,  3094,
    3845,  3842,  3854,  3358,  3857,  1405,  3283,  3858,  4593,  3862,
    3863,   945,  3865,  1668,  1669,  3875,  3284,  3884, -1452, -1457,
    3885,   946,   947,  3887,  3888,   948,   949,  3902,  3285,  3913,
    3905,  3743,  3917,  3932,  4593,  3919,  3931,  3937,  3938,  3746,
    3939,  3286,  3287,  3288,  3945,  3958,   950,  3959,  3974,  4625,
    3980,  3984,  3985,  3986,  4102,   636,  3999,  3289,  3990,  4005,
    4004,  4009,  4008,  4022,  4045,  4051,  3790,  4057,  3807,  4024,
    4061,   751,  4097,  4130,  4106,  4060,  1364,  4120,  4131,  4135,
    4136,  4134,  4147,  4179,  4150,  4019,  1365,  4181,  4137,  4201,
    4199,  4192,   951,  -349,  4219,  4221,  4231,  4242,  1366,   636,
    4249,  4224,  4154,  4234,  4241,   952,  4264,  4266,  4267,  4277,
     646,  1367,  1368,  1369,  4272,  4279,  4275,  4284,  3117,  4304,
    -367,  4307,  4332,  4334,  4335,  4336,  4355,  1370,  4369,   824,
    4374,  4381,  4391,  4394,  4395,  4352,  4358, -2424,  4401,  4402,
    4417,  4193,  4412,   953,  4406,  4413,  4414,  4424,  4438,  4439,
    4441,  4440,  4447,  4448,  4449,  4450,  4451,  4452,  4205,  4453,
    4460,   954,   955,  4212,  4458,  1670,  4462, -2382,  4463,  4103,
    4466,  4472,   956,  4485,  4501,  4488,  4490,  4491,  4506,  4504,
    1671,  1672,  4514,  4520,  4517,   824,   824,  4515,  4523,  4529,
    4532,  4533,  4538,  4534,   824,   824,   824,   824,   824,   824,
     824,  4543,  4539,  4546,  4549,  4550,  4553,  4557,   824,   824,
    4551,   824,   824,  4148,  4559,  4562,   824,   824,   957,  4563,
     824,   824,   824,   824,  4565,   824,   824,  4568,  4572, -2424,
    4573,  4597,  4575,   824,   824,   958,   824,   824,   824,   824,
     824,  1737,  4582,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,  4598,   824,  4612,  4602,   824,   824,
    4368,  2867,  4622,   824,  2708,  3767,  3011,   824,   824,   824,
    3768,  1071,  3962,  2922,  4343,  2922,  4232,  3290,  4473,  1527,
     824,   824,   824,  4474,  3960,  3964,  4101,  4577,  4614,   824,
     604,   966,  2382,  4301,  3291,  2459,   824,   824,   824,  3297,
     824,  4072,  4308,  4586,  4073,  4498,  4075,   824,   824,   824,
    4399,   824,   824,   824,   824,   824,  4076,   824,   824,   824,
     824,   824,   824,   824,   824,  4078,  4499,  4079,   824,   824,
    4080,  4081,  4236,  4082,  4083,  4086,  4471,  2066,  4087,  4088,
    4411,  4410,  2067,  1596,  2068,  2661,  2069,  1371,  3319,  3428,
    2063,  2115,  3847,  3611,  4357,  4109,  4154,  2070,  2071,  3324,
    1867,  2865,  4423,  4149,  1372,   646,  3850,  4548,  4484,  4522,
    4274,   684,  3514,  3785,  2182,  3696,  3173,  2659,  2666,  3119,
    3711,  3684,  3712,  3753,  4053,  3898,  3936,  4422,  2072,  3922,
    3001,  3581,  3252,  2073,  2074,  3579,  3583,   687,  4287,   539,
     686,  2075,   540,  4289,  4239,  3292,  4290,  4244,  4246,  2076,
    2212,  2751,  4119,  3107,  4056,  2663,  1997,   977,  2077,  2906,
    3901,  3293,  4483,  3685,  2176,  1995,  2139,  2078,  2442,  3310,
    2887,  3608,   992,  2467,  1262,  2929,  2840,  3590,  1691,  1392,
    3275,  2784,  2079,  2994,  3655,  2839,  1737,  4286,  4185,  4493,
    3766,  4494,  1642,  2856,  3691,  4026,  1515,  2013,  4567,  1263,
    2080,  1292,  1293,  4018,  2936,  1893,   646,  1264,  2081,  2082,
    2755,  2885,  1798,  1855,  2912,  2083,  3852,  3624,  3623,  4420,
    3665,  2221,   980,  2084,  3294,  4362,   824,  -952,  1507,  2085,
    1089,  1373,  2518,  1508,  1961,  1509,  1510,   962,  2519,   824,
    2086,  2376,  3295,  3695,  1983,  4547,  1900,  4566,  3610,  4442,
    4492,  4621,  4624,  2180,  3930,  3627,  1913,   824,  3647,   921,
    2087,  1293,  2955,  2338,   922,  2503,  2953,   646,  2952,  2945,
    2422,  1262,  2465,  1265,  1381,  2397,  1903,  4248,  4254,   891,
    3595,  1384,   678,  3139,  3139,  2202,   679,     0,  1294,  4223,
    3955,  1075,  1076,  4503,  1374,  1077,  1263,     0,  1266,  2088,
    4511,  2089,  1267,     0,  1264,     0,     0,     0,     0,  2090,
       0,     0,  1375,     0,     0,     0,     0,     0,     0,  1295,
       0,     0,     0,  4431,  4432,     0,  2091,     0,     0,     0,
       1,     0,     2,  1296,     0,     0,     0,  4615,     0,  1268,
       0,     0,     0,     0,     0,     0,     0,  1294,     3,  2092,
       0,     0,     4,     0,     0,     0,  1297,  1269,     0,  1298,
       0,     0,     0,     0,     0,     0,     5,     6,  4555,     0,
    1265,  1270,  1299,  4560,     7,     0,     0,     0,  1295,     8,
       9,     0,     0,     0,     0,  2093,     0,     0,     0,     0,
       0,     0,  1296,     0,  1300,  1266,     0,    10,     0,  1267,
       0,     0,     0,  2094,     0,     0,     0,  2095,  4594,     0,
       0,     0,     0,     0,     0,  1297,    11,     0,  1298,  1301,
    1271,     0,     0,     0,     0,     0,  1302,     0,     0,     0,
       0,  1299,  1737,     0,  4594,     0,  1268,     0,    12,     0,
       0,     0,   646,     0,     0,  2096,  1737,    13,    14,    15,
    2097,  1737,     0,  1300,  1269,     0,  1737,  2098,     0,     0,
      16,    17,  2099,     0,     0,  2100,   824,  1303,  1270,     0,
       0,     0,     0,    18,     0,     0,     0,     0,  1301,     0,
       0,     0,     0,     0,     0,  1302,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,  2101,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,     0,     0,     0,
    2102,  2103,  2104,  2105,     0,     0,     0,  1271,     0,     0,
      21,     0,    22,     0,     0,     0,  1303,    23,     0,     0,
      24,     0,     0,     0,     0,  2106,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1272,     0,
       0,     0,  2070,  2071,    25,     0,    26,  1273,     0,     0,
       0,     0,     0,     0,   824,   824,   824,     0,     0,     0,
       0,     0,  1274,     0,    27,     0,     0,     0,     0,   824,
       0,     0,     0,     0,     0,     0,  -805,  -805,  2073,     0,
    1275,    28,  2107,  2108,  2109,    29,     0,     0,  -805,  1304,
       0,  2110,     0,  1305,  2076,   824,     0,     0,     0,     0,
       0,   824,     0,  2077,   824,     0,   824,  2111,     0,  1306,
       0,  2112,   824,     0,   824,   824,     0,  1307,     0,     0,
       0,     0,     0,  1276,     0,  1308,     0,  2079,     0,     0,
       0,     0,     0,     0,     0,  1272,     0,     0,     0,     0,
       0,  1515,     0,  2113,  1273,  2080,     0,     0,  1304,     0,
       0,     0,     0,  1309,  1277,     0,  2114,     0,     0,  1274,
       0,     0,     0,     0,     0,     0,  1310,  1311,  1306,     0,
       0,     0,     0,     0,  2085,   512,  1307,  1275,   513,  1278,
       0,    30,     0,     0,  1308,     0,     0,     0,     0,  1279,
       0,     0,     0,     0,     0,     0,     0,     0,    31,   824,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     824,    32,  1309,     0,     0,     0,     0,  -952,     0,  1312,
    1276,     0,    33,     0,     0,  1310,  1311,     0,     0,     0,
       0,     0,     0,     0,     0,  1280,     0,     0,     0,     0,
       0,     0,   824,     0,    34,     0,  2089,    35,     0,    36,
       0,  1277,    37,     0,  2090,    38,    39,     0,  1313,     0,
       0,     0,   824,     0,     0,    40,     1,    41,     2,   824,
       0,  2091,     0,     0,     0,    42,  1278,     0,  1312,     0,
    1314,    43,  1315,     0,  2741,     0,  1279,     0,     4,    44,
       0,     0,  2070,  2071,    45,     0,    46,     0,     0,     0,
       0,     0,     5,     6,     0,     0,     0,     0,     0,     0,
       7,     0,     0,     0,     0,     8,     9,  1313,     0,     0,
       0,     0,     0,     0,     0,     0,    47,     0,  2073,     0,
    2093,     0,  1280,    10,     0,     0,    48,     0,     0,  1314,
       0,  1315,     0,     0,  2076,     0,     0,     0,  2094,     0,
       0,     0,    11,  2077,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   855,    12,     0,     0,  2079,     0,     0,
       0,     0,     0,    13,    14,    15,     0,     0,     0,    49,
       0,  1515,     0,     0,     0,  2080,    16,    17,     0,     0,
       0,    50,  2098,     0,     0,    51,     0,     0,    52,     0,
    2100,     0,     0,     0,    53,     0,     0,     0,     0,     0,
       0,     0,     0,    19,  2085,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,    54,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,    55,    22,     0,
       0,     0,     0,    23,     0,     0,    24,     0,     0,     0,
       0,     0,     0,   824,     0,     0,     0,     0,     0,     0,
    2106,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      25,     0,    26,     0,     0,     0,  2089,     0,     0,     0,
       0,     0,     0,     0,  2090,  1097,     0,     0,     0,     0,
      27,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2091,     0,     0,     0,     0,     0,    28,     0,     0,
       0,    29,     0,     0,     0,     0,  1129,  2107,  2108,  2109,
       0,     0,     0,     0,     0,     0,  2110,     0,     0,     0,
     824,     0,  1146,     0,   824,     0,     0,     0,     0,   824,
     824,     0,  2111,     0,     0,     0,  2112,     0,   824,     0,
       0,   824,     0,     0,     0,     0,     0,     0,     0,     0,
    2093,   824,   824,     0,   824,   824,     0,   824,   824,   824,
     824,   824,  1378,  1293,   824,     0,     0,     0,  2094,  1191,
       0,     0,     0,   824,     0,     0,     0,     0,     0,     0,
     824,  2114,   824,     0,   824,   824,     0,   824,   824,     0,
       0,     0,   824,   824,   824,     0,     0,    30,   824,   824,
     824,     0,   824,     0,   824,     0,   824,     0,   824,     0,
     824,     0,     0,     0,    31,   824,     0,     0,     0,     0,
       0,     0,  2098,     0,     0,     0,     0,    32,     0,     0,
    2100,     0,     0,     0,   824,     0,  2742,     0,    33,     0,
       0,   824,     0,     0,   824,     0,     0,     0,     0,  1294,
     824,     0,     0,   824,     0,     0,     0,   824,     0,     0,
      34,     0,     0,    35,     0,    36,     0,     0,    37,     0,
       0,    38,    39,     0,     0,     0,     0,     0,     0,     0,
    1295,    40,     0,    41,     0,     0,     0,     0,     0,     0,
       0,    42,     0,     0,  1296,     0,     0,    43,     0,     0,
    2106,     0,     0,     0,     0,    44,     0,     0,     0,     0,
      45,     0,    46,     0,     0,     0,     0,  1297,     0,   824,
    1298,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1299,     0,     0,     0,     0,     0,     0,
       0,     0,    47,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    48,     0,     0,  1300,     0,  2107,  2108,  2109,
       0,     0,     0,     0,     0,     0,  2110,     0,     0,     0,
       0,  1551,     0,     0,     0,     0,   824,     0,     0,     0,
    1301,     0,  2111,     0,     0,     0,  2112,  1302,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    49,  1550,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    50,     0,     0,
       0,    51,     0,     0,    52,     0,     0,     0,  1303,     0,
      53,  2114,  1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,
    1560,  1561,     0,  1562,  1563,  1564,  1565,  1566,  1567,  1568,
    1569,  1570,     0,  1571,  1572,     0,     0,     0,    54,     0,
    3009,     0,  1622,  1623,     0,     0,     0,     0,     0,     0,
       0,  1633,  1634,    55,     0,  1637,  1638,  1639,  3009,  3009,
       0,     0,     0,     0,     0,  1647,  1648,     0,  1649,  1650,
       0,     0,     0,  1675,     0,     0,     0,  1684,  1685,  1686,
    1687,     0,  1689,     0,     0,     0,     0,     0,     0,     0,
    1697,  1698,     0,  1701,  1702,     0,     0,     0,     0,     0,
    1706,  1707,  1708,     0,     0,  1711,  1712,  1713,  1714,  1715,
    1716,     0,  1718,     0,     0,  1721,  1722,     0,     0,     0,
    1725,  3437,  3438,     0,  1728,  1732,  1733,  3439,     0,  3440,
       0,  3441,  3442,     0,     0,     0,     0,  1740,  1741,  1742,
    1304,     0,     0,     0,  1379,     0,  1750,     0,     0,  3443,
       0,     0,     0,  1755,  1756,  1757,     0,     0,  1573,  1574,
    1306,     0,     0,     0,     0,     0,     0,     0,  1307,     0,
       0,     0,     0,     0,     0,     0,  1308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1793,  3009,  3009,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3444,     0,     0,  3445,  1309,     0,     0,     0,     0,     0,
       0,  3446,     0,     0,     0,     0,     0,  1310,  1311,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3447,     0,     0,     0,     0,     0,     0,     0,   824,     0,
       0,     0,   824,     0,     0,     0,     0,  3448,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,   824,     0,     0,     0,     0,     0,     0,
    1312,     0,     0,  3449,     0,  3450,     0,     0,     0,     0,
       0,     0,     0,   824,     0,     0,     0,     0,  3451,  3452,
       0,     0,   824,     0,   824,     0,   824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1313,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   824,     0,     0,     0,     0,   824,     0,
    3453,  1314,     0,  1315,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1912,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1921,   824,     0,     0,
    3454,     0,     0,     0,     0,     0,     0,     0,     0,  3455,
    3456,     0,  3457,     0,  1948,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3458,  3459,
    3460,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3105,  3461,  3462,  3463,
       0,  2067,     0,  2068,  3464,     0,     0,  3465,     0,     0,
       0,     0,     0,     0,     0,     0,  2070,  2071,     0,     0,
       0,   824,     0,     0,  3466,  3467,  2070,  2071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   824,     0,  2072,     0,     0,
       0,     0,  2073,     0,     0,     0,     0,  3468,  3469,     0,
    -805,  -805,  2073,     0,     0,     0,     0,     0,  2076,     0,
       0,     0,  -805,     0,     0,     0,     0,  2077,  2076,     0,
       0,     0,  3470,     0,     0,     0,  2078,  2077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2079,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2079,     0,     0,     0,  1515,     0,     0,     0,  2080,
       0,     0,     0,     0,     0,  1515,     0,  2081,     0,  2080,
       0,     0,     0,     0,  3106,     0,  3471,     0,     0,     0,
    3472,     0,  2084,     0,     0,     0,     0,     0,  2085,     0,
       0,     0,  3473,  2233,     0,     0,     0,     0,  2085,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     824,   824,     0,     0,     0,     0,     0,     0,     0,  2087,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3009,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3474,     0,     0,     0,  3475,     0,
    2089,  3476,  3477,  3478,  3479,     0,     0,     0,  2090,     0,
    2089,     0,     0,   824,     0,     0,     0,     0,  2090,     0,
       0,     0,     0,     0,     0,  2091,     0,     0,     0,     0,
       0,  2308,  2310,  2312,     0,  2091,     0,     0,   824,     0,
       0,     0,   824,   824,     0,   824,     0,     0,  2092,     0,
       0,     0,  3480,  3481,   824,     0,     0,     0,     0,   824,
       0,     0,   824,     0,   824,   824,     0,     0,     0,     0,
       0,     0,  2347,     0,     0,     0,     0,  3482,     0,     0,
       0,  2352,     0,  2353,  2093,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2093,     0,     0,   824,     0,     0,
       0,     0,  2094,     0,     0,     0,  2095,     0,     0,     0,
       0,     0,  2094,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2097,
       0,     0,     0,     0,     0,   824,  2098,     0,     0,     0,
       0,     0,     0,     0,  2100,     0,  2098,     0,     0,     0,
       0,     0,     0,     0,  2100,     0,  2436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2438,     0,   824,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2103,     0,     0,     0,     0,     0,     0,     0,   824,  2484,
       0,     0,     0,     0,     0,     0,   824,     0,     0,     0,
       0,     0,     0,     0,  2106,     0,     0,     0,     0,  2502,
       0,     0,     0,     0,  2106,     0,  2484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2107,  2108,  2109,     0,     0,     0,     0,     0,     0,
    2110,  2107,  2108,  2109,     0,     0,     0,     0,     0,     0,
    2110,     0,     0,     0,     0,     0,  2111,     0,     0,     0,
    2112,     0,     0,     0,     0,     0,  2111,     0,     0,     0,
    2112,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2114,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2114,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   824,     0,     0,     0,
    2677,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   824,   824,     0,
       0,     0,     0,     0,     0,     0,   824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2764,     0,     0,
       0,  2766,     0,     0,     0,     0,  2768,  2769,     0,     0,
       0,     0,     0,     0,     0,  2782,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2789,  2790,
       0,  2791,     0,     0,  2793,  2794,  2795,  2796,  2797,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2801,     0,     0,     0,     0,     0,     0,  2802,     0,  2803,
       0,  2804,  2805,     0,  2806,     0,     0,     0,     0,  2809,
    2810,  2811,     0,     0,     0,  2813,  2814,  2815,     0,  2816,
       0,  2818,     0,  2820,     0,  2822,     0,  2823,     0,     0,
       0,     0,  2824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   824,     0,     0,     0,
     824,  2844,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2854,     0,     0,
    2857,     0,     0,     0,     0,     0,     0,   824,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4090,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   824,     0,     0,     0,     0,     0,     0,     0,   824,
       0,     0,     0,     0,     0,     0,   824,     0,   824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   824,     0,     0,     0,
       0,     0,  4090,  4090,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   824,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   824,     0,   824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   824,     0,
    4090,  4090,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3185,     0,  4348,     0,  3187,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3209,
    3210,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3232,     0,     0,     0,     0,     0,     0,     0,     0,  3242,
       0,  3244,     0,  3246,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   824,     0,  4090,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4090,   824,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4090,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   824,     0,
       0,     0,     0,     0,  3307,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,  4090,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4090,  4090,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3377,     0,
       0,     0,  4090,     0,     0,     0,     0,     0,     0,   824,
       0,     0,  4090,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3396,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,     0,     0,     0,     0,     0,     0,  4090,
       0,  4090,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4090,     0,     0,     0,   824,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4090,     0,
    4090,     0,  4090,     0,     0,     0,     0,     0,     0,  4090,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4090,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4090,  4090,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4090,
    4090,     0,     0,     0,  4090,     0,     0,     0,     0,     0,
     824,     0,     0,     0,     0,     0,     0,  3493,  3494,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3538,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3556,     0,     0,     0,  3560,
    3561,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3568,     0,     0,     0,     0,  3570,     0,     0,  3571,
       0,  3572,  3573,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3604,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3604,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3604,     0,     0,     0,     0,
       0,     0,     0,  3676,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3604,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3873,  3874,     0,     0,     0,     0,
       0,     0,     0,  3396,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3396,     0,     0,     0,  3983,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3604,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3396,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4173,     0,     0,     0,
       0,     0,     0,  4178,     0,  4180,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4200,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3396,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3396,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4302,     0,  4303,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4311,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4403,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4408,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3604,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   137,     0,   695,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   696,
       0,   147,   148,   149,   150,   697,   152,     0,   153,  4456,
       0,   698,   154,   699,   700,   701,   155,   702,     0,   156,
     157,   158,  1729,   159,     0,   160,   161,     0,     0,   162,
     703,   704,   163,   164,     0,   165,   166,   705,   706,   168,
       0,   169,   170,   171,   172,   173,     0,   707,   175,     0,
     708,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     709,   194,     0,   710,   711,   195,  4505,     0,   196,   712,
     197,   713,     0,   198,   714,   715,     0,   199,   200,   201,
     716,   717,   718,     0,     0,     0,     0,   719,   204,   720,
       0,     0,   721,   205,   206,     0,   207,     0,     0,  4531,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,   722,     0,
     232,   233,   234,   235,   236,   723,   724,   237,   238,     0,
     239,   240,   241,   725,     0,   242,     0,     0,     0,   726,
     244,     0,   245,     0,   246,     0,   247,   727,   249,   728,
       0,   251,     0,   252,     0,   729,     0,   253,   254,     0,
     255,   730,     0,   256,   257,     0,     0,     0,   731,   259,
     260,   261,   732,     0,   262,   263,   264,  4603,   265,     0,
     266,     0,     0,     0,   733,   267,   268,   734,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,  3604,  1730,   277,
       0,   735,   278,   279,     0,     0,     0,     0,     0,   736,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
     737,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,   738,   307,
     308,   309,   310,   739,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   740,   318,     0,     0,   741,   320,
     742,   321,     0,   322,   743,   744,   745,   746,   747,   327,
     328,   329,   330,   331,     0,   748,   332,   333,     0,     0,
     334,   335,   336,   337,   749,   750,   751,   338,   339,     0,
     752,   753,   340,     0,   341,   342,   754,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,   755,   351,   352,     0,   353,
     354,   756,   356,   357,   358,   359,   757,   758,   362,   759,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   760,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,   761,   762,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   763,     0,   764,   399,   400,   401,
     402,   403,   765,   766,   406,   407,   408,   409,     0,   767,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   768,   769,   441,   442,     0,   443,
     444,   770,   446,   447,   448,   771,   772,   449,   450,   451,
     452,   773,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,   774,   460,   461,     0,   462,   775,   776,   777,
     778,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,  1731,   475,   476,     0,   779,   780,   781,
     478,   479,   480,   782,   481,   482,   783,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   784,   491,   492,     0,     0,   785,   786,   787,   788,
     493,     0,     0,   494,   789,     0,   790,   495,   496,   497,
     791,   792,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,     0,   793,     0,     0,     0,
     794,   795,     0,     0,     0,     0,   796,   797,     0,     0,
     798,   799,     0,     0,   800,   801,   137,     0,   695,   139,
     140,   141,   142,  2480,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   696,     0,   147,   148,   149,   150,   697,
     152,     0,   153,     0,     0,  2481,   154,   699,   700,   701,
     155,   702,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,   703,   704,   163,   164,     0,   165,
     166,   705,   706,   168,     0,   169,   170,   171,   172,   173,
       0,   707,   175,     0,   708,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
       0,   190,   191,   192,   709,   194,     0,   710,   711,   195,
       0,     0,   196,   712,   197,   713,     0,   198,   714,   715,
       0,   199,   200,   201,   716,   717,   718,     0,     0,     0,
       0,   719,   204,   720,     0,     0,  2482,   205,   206,     0,
     207,     0,     0,     0,   208,     0,   209,   210,   211,   212,
     213,     0,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,     0,   218,     0,   219,   220,     0,   221,   222,
     223,     0,     0,   224,   225,     0,   226,   227,   228,   229,
     230,   231,   722,     0,   232,   233,   234,   235,   236,   723,
     724,   237,   238,     0,   239,   240,   241,   725,     0,   242,
       0,     0,     0,   726,   244,     0,   245,     0,   246,     0,
     247,   727,   249,   728,     0,   251,     0,   252,     0,   729,
       0,   253,   254,     0,   255,   730,     0,   256,   257,     0,
       0,     0,   731,   259,   260,   261,   732,     0,   262,   263,
     264,     0,   265,     0,   266,     0,     0,     0,   733,   267,
     268,   734,     0,     0,   269,     0,     0,     0,   270,   271,
       0,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,     0,     0,   277,     0,   735,   278,   279,     0,     0,
       0,     0,     0,   736,   281,     0,   282,     0,   283,     0,
     284,   285,     0,     0,   737,     0,     0,     0,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   738,   307,   308,   309,   310,   739,   311,   312,
       0,     0,     0,     0,   313,   314,   315,   316,   740,   318,
       0,     0,   741,   320,   742,   321,     0,   322,   743,   744,
     745,   746,   747,   327,   328,   329,   330,   331,     0,   748,
     332,   333,     0,     0,   334,   335,   336,   337,   749,   750,
     751,   338,   339,     0,   752,   753,   340,     0,   341,   342,
     754,  2483,   344,   345,   346,     0,   347,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,   350,   755,
     351,   352,     0,   353,   354,   756,   356,   357,   358,   359,
     757,   758,   362,   759,     0,   363,   364,   365,     0,   366,
       0,   367,   368,   369,   370,   371,     0,   760,   373,   374,
       0,     0,   375,     0,     0,     0,   376,   377,   378,   379,
     380,     0,     0,   381,   382,   383,   384,   385,     0,   386,
     387,     0,   388,   389,   390,   761,   762,   391,     0,   392,
       0,   393,   394,     0,   395,   396,   397,     0,   763,     0,
     764,   399,   400,   401,   402,   403,   765,   766,   406,   407,
     408,   409,     0,   767,   411,     0,     0,     0,   412,   413,
     414,   415,     0,     0,     0,   416,     0,     0,     0,   417,
       0,   418,   419,   420,   421,     0,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,   427,   428,   429,     0,
     430,   431,     0,   432,     0,     0,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   768,   769,
     441,   442,     0,   443,   444,   770,   446,   447,   448,   771,
     772,   449,   450,   451,   452,   773,   453,   454,     0,     0,
     455,   456,   457,   458,   459,     0,   774,   460,   461,     0,
     462,   775,   776,   777,   778,     0,     0,     0,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   779,   780,   781,   478,   479,   480,   782,   481,   482,
     783,   483,   484,     0,   485,   486,     0,     0,   487,     0,
       0,   488,     0,   489,     0,   784,   491,   492,     0,     0,
     785,   786,   787,   788,   493,     0,     0,   494,   789,     0,
     790,   495,   496,   497,   791,   792,     0,     0,     0,     0,
       0,     0,   500,   501,     0,   502,   503,   504,     0,     0,
     793,     0,     0,     0,   794,   795,     0,     0,     0,     0,
     796,   797,     0,     0,   798,   799,     0,     0,   800,   801,
     137,     0,   695,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   696,     0,   147,
     148,   149,   150,   697,   152,     0,   153,     0,     0,   698,
     154,   699,   700,   701,   155,   702,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,   703,   704,
     163,   164,     0,   165,   166,   705,   706,   168,     0,   169,
     170,   171,   172,   173,     0,   707,   175,     0,   708,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,     0,   190,   191,   192,   709,   194,
       0,   710,   711,   195,     0,     0,   196,   712,   197,   713,
       0,   198,   714,   715,     0,   199,   200,   201,   716,   717,
     718,     0,     0,     0,     0,   719,   204,   720,     0,     0,
     721,   205,   206,     0,   207,     0,     0,     0,   208,     0,
     209,   210,   211,   212,   213,     0,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,     0,   218,     0,   219,
     220,     0,   221,   222,   223,     0,     0,   224,   225,     0,
     226,   227,   228,   229,   230,   231,   722,     0,   232,   233,
     234,   235,   236,   723,   724,   237,   238,     0,   239,   240,
     241,   725,     0,   242,     0,     0,     0,   726,   244,  2307,
     245,     0,   246,     0,   247,   727,   249,   728,     0,   251,
       0,   252,     0,   729,     0,   253,   254,     0,   255,   730,
       0,   256,   257,     0,     0,     0,   731,   259,   260,   261,
     732,     0,   262,   263,   264,     0,   265,     0,   266,     0,
       0,     0,   733,   267,   268,   734,     0,     0,   269,     0,
       0,     0,   270,   271,     0,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,     0,     0,   277,     0,   735,
     278,   279,     0,     0,     0,     0,     0,   736,   281,     0,
     282,     0,   283,     0,   284,   285,     0,     0,   737,     0,
       0,     0,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,   738,   307,   308,   309,
     310,   739,   311,   312,     0,     0,     0,     0,   313,   314,
     315,   316,   740,   318,     0,     0,   741,   320,   742,   321,
       0,   322,   743,   744,   745,   746,   747,   327,   328,   329,
     330,   331,     0,   748,   332,   333,     0,     0,   334,   335,
     336,   337,   749,   750,   751,   338,   339,     0,   752,   753,
     340,     0,   341,   342,   754,     0,   344,   345,   346,     0,
     347,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     348,   349,   350,   755,   351,   352,     0,   353,   354,   756,
     356,   357,   358,   359,   757,   758,   362,   759,     0,   363,
     364,   365,     0,   366,     0,   367,   368,   369,   370,   371,
       0,   760,   373,   374,     0,     0,   375,     0,     0,     0,
     376,   377,   378,   379,   380,     0,     0,   381,   382,   383,
     384,   385,     0,   386,   387,     0,   388,   389,   390,   761,
     762,   391,     0,   392,     0,   393,   394,     0,   395,   396,
     397,     0,   763,     0,   764,   399,   400,   401,   402,   403,
     765,   766,   406,   407,   408,   409,     0,   767,   411,     0,
       0,     0,   412,   413,   414,   415,     0,     0,     0,   416,
       0,     0,     0,   417,     0,   418,   419,   420,   421,     0,
     422,   423,   424,   425,   426,     0,     0,     0,     0,     0,
     427,   428,   429,     0,   430,   431,     0,   432,     0,     0,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   768,   769,   441,   442,     0,   443,   444,   770,
     446,   447,   448,   771,   772,   449,   450,   451,   452,   773,
     453,   454,     0,     0,   455,   456,   457,   458,   459,     0,
     774,   460,   461,     0,   462,   775,   776,   777,   778,     0,
       0,     0,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   779,   780,   781,   478,   479,
     480,   782,   481,   482,   783,   483,   484,     0,   485,   486,
       0,     0,   487,     0,     0,   488,     0,   489,     0,   784,
     491,   492,     0,     0,   785,   786,   787,   788,   493,     0,
       0,   494,   789,     0,   790,   495,   496,   497,   791,   792,
       0,     0,     0,     0,     0,     0,   500,   501,     0,   502,
     503,   504,     0,     0,   793,     0,     0,     0,   794,   795,
       0,     0,     0,     0,   796,   797,     0,     0,   798,   799,
       0,     0,   800,   801,   137,     0,   695,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   696,     0,   147,   148,   149,   150,   697,   152,     0,
     153,     0,     0,   698,   154,   699,   700,   701,   155,   702,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,   703,   704,   163,   164,     0,   165,   166,   705,
     706,   168,     0,   169,   170,   171,   172,   173,     0,   707,
     175,     0,   708,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   709,   194,     0,   710,   711,   195,     0,     0,
     196,   712,   197,   713,     0,   198,   714,   715,     0,   199,
     200,   201,   716,   717,   718,     0,     0,     0,     0,   719,
     204,   720,     0,     0,   721,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
     722,     0,   232,   233,   234,   235,   236,   723,   724,   237,
     238,     0,   239,   240,   241,   725,     0,   242,     0,     0,
       0,   726,   244,  2309,   245,     0,   246,     0,   247,   727,
     249,   728,     0,   251,     0,   252,     0,   729,     0,   253,
     254,     0,   255,   730,     0,   256,   257,     0,     0,     0,
     731,   259,   260,   261,   732,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,   733,   267,   268,   734,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,   735,   278,   279,     0,     0,     0,     0,
       0,   736,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,   737,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     738,   307,   308,   309,   310,   739,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   740,   318,     0,     0,
     741,   320,   742,   321,     0,   322,   743,   744,   745,   746,
     747,   327,   328,   329,   330,   331,     0,   748,   332,   333,
       0,     0,   334,   335,   336,   337,   749,   750,   751,   338,
     339,     0,   752,   753,   340,     0,   341,   342,   754,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,   755,   351,   352,
       0,   353,   354,   756,   356,   357,   358,   359,   757,   758,
     362,   759,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   760,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,   761,   762,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   763,     0,   764,   399,
     400,   401,   402,   403,   765,   766,   406,   407,   408,   409,
       0,   767,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   768,   769,   441,   442,
       0,   443,   444,   770,   446,   447,   448,   771,   772,   449,
     450,   451,   452,   773,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,   774,   460,   461,     0,   462,   775,
     776,   777,   778,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   779,
     780,   781,   478,   479,   480,   782,   481,   482,   783,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   784,   491,   492,     0,     0,   785,   786,
     787,   788,   493,     0,     0,   494,   789,     0,   790,   495,
     496,   497,   791,   792,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,     0,   793,     0,
       0,     0,   794,   795,     0,     0,     0,     0,   796,   797,
       0,     0,   798,   799,     0,     0,   800,   801,   137,     0,
     695,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,   696,     0,   147,   148,   149,
     150,   697,   152,     0,   153,     0,     0,   698,   154,   699,
     700,   701,   155,   702,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,   703,   704,   163,   164,
       0,   165,   166,   705,   706,   168,     0,   169,   170,   171,
     172,   173,     0,   707,   175,     0,   708,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,   709,   194,     0,   710,
     711,   195,     0,     0,   196,   712,   197,   713,     0,   198,
     714,   715,     0,   199,   200,   201,   716,   717,   718,     0,
       0,     0,     0,   719,   204,   720,     0,     0,   721,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,     0,   218,     0,   219,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,   231,   722,     0,   232,   233,   234,   235,
     236,   723,   724,   237,   238,     0,   239,   240,   241,   725,
       0,   242,     0,     0,     0,   726,   244,  2311,   245,     0,
     246,     0,   247,   727,   249,   728,     0,   251,     0,   252,
       0,   729,     0,   253,   254,     0,   255,   730,     0,   256,
     257,     0,     0,     0,   731,   259,   260,   261,   732,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
     733,   267,   268,   734,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,     0,     0,   277,     0,   735,   278,   279,
       0,     0,     0,     0,     0,   736,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,   737,     0,     0,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,   738,   307,   308,   309,   310,   739,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     740,   318,     0,     0,   741,   320,   742,   321,     0,   322,
     743,   744,   745,   746,   747,   327,   328,   329,   330,   331,
       0,   748,   332,   333,     0,     0,   334,   335,   336,   337,
     749,   750,   751,   338,   339,     0,   752,   753,   340,     0,
     341,   342,   754,     0,   344,   345,   346,     0,   347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
     350,   755,   351,   352,     0,   353,   354,   756,   356,   357,
     358,   359,   757,   758,   362,   759,     0,   363,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   760,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,   387,     0,   388,   389,   390,   761,   762,   391,
       0,   392,     0,   393,   394,     0,   395,   396,   397,     0,
     763,     0,   764,   399,   400,   401,   402,   403,   765,   766,
     406,   407,   408,   409,     0,   767,   411,     0,     0,     0,
     412,   413,   414,   415,     0,     0,     0,   416,     0,     0,
       0,   417,     0,   418,   419,   420,   421,     0,   422,   423,
     424,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     768,   769,   441,   442,     0,   443,   444,   770,   446,   447,
     448,   771,   772,   449,   450,   451,   452,   773,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,   774,   460,
     461,     0,   462,   775,   776,   777,   778,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   779,   780,   781,   478,   479,   480,   782,
     481,   482,   783,   483,   484,     0,   485,   486,     0,     0,
     487,     0,     0,   488,     0,   489,     0,   784,   491,   492,
       0,     0,   785,   786,   787,   788,   493,     0,     0,   494,
     789,     0,   790,   495,   496,   497,   791,   792,     0,     0,
       0,     0,     0,     0,   500,   501,     0,   502,   503,   504,
       0,     0,   793,     0,     0,     0,   794,   795,     0,     0,
       0,     0,   796,   797,     0,     0,   798,   799,     0,     0,
     800,   801,   137,     0,   695,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   696,
       0,   147,   148,   149,   150,   697,   152,     0,   153,     0,
       0,   698,   154,   699,   700,   701,   155,   702,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
     703,   704,   163,   164,     0,   165,   166,   705,   706,   168,
       0,   169,   170,   171,   172,   173,     0,   707,   175,     0,
     708,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     709,   194,     0,   710,   711,   195,     0,     0,   196,   712,
     197,   713,     0,   198,   714,   715,     0,   199,   200,   201,
     716,   717,   718,     0,     0,     0,     0,   719,   204,   720,
       0,     0,   721,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,   722,     0,
     232,   233,   234,   235,   236,   723,   724,   237,   238,     0,
     239,   240,   241,   725,     0,   242,     0,     0,     0,   726,
     244,     0,   245,     0,   246,     0,   247,   727,   249,   728,
       0,   251,     0,   252,     0,   729,     0,   253,   254,     0,
     255,   730,     0,   256,   257,     0,     0,     0,   731,   259,
     260,   261,   732,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,   733,   267,   268,   734,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,   735,   278,   279,     0,     0,     0,     0,     0,   736,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
     737,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,   738,   307,
     308,   309,   310,   739,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   740,   318,     0,     0,   741,   320,
     742,   321,     0,   322,   743,   744,   745,   746,   747,   327,
     328,   329,   330,   331,     0,   748,   332,   333,     0,     0,
     334,   335,   336,   337,   749,   750,   751,   338,   339,     0,
     752,   753,   340,     0,   341,   342,   754,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,   755,   351,   352,     0,   353,
     354,   756,   356,   357,   358,   359,   757,   758,   362,   759,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   760,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,   761,   762,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   763,     0,   764,   399,   400,   401,
     402,   403,   765,   766,   406,   407,   408,   409,     0,   767,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   768,   769,   441,   442,     0,   443,
     444,   770,   446,   447,   448,   771,   772,   449,   450,   451,
     452,   773,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,   774,   460,   461,     0,   462,   775,   776,   777,
     778,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   779,   780,   781,
     478,   479,   480,   782,   481,   482,   783,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   784,   491,   492,     0,     0,   785,   786,   787,   788,
     493,     0,     0,   494,   789,     0,   790,   495,   496,   497,
     791,   792,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,     0,   793,     0,     0,     0,
     794,   795,     0,     0,     0,     0,   796,   797,     0,     0,
     798,   799,     0,     0,   800,   801,   137,     0,   695,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   696,     0,   147,   148,   149,   150,   697,
     152,     0,   153,     0,     0,   698,   154,   699,   700,   701,
     155,   702,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,   703,   704,   163,   164,     0,   165,
     166,   705,   706,   168,     0,   169,   170,   171,   172,   173,
       0,   707,   175,     0,   708,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
       0,   190,   191,   192,   709,   194,     0,   710,   711,   195,
       0,     0,   196,   712,   197,   713,     0,   198,   714,   715,
       0,   199,   200,   201,   716,   717,   718,     0,     0,     0,
       0,   719,   204,   720,     0,     0,   721,   205,   206,     0,
     207,     0,     0,     0,   208,     0,   209,   210,   211,   212,
     213,     0,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,     0,   218,     0,   219,   220,     0,   221,   222,
     223,     0,     0,   224,   225,     0,   226,   227,   228,   229,
     230,   231,   722,     0,   232,   233,   234,   235,   236,   723,
     724,   237,   238,     0,   239,   240,   241,   725,     0,   242,
       0,     0,     0,   726,   244,     0,   245,     0,   246,     0,
     247,   727,   249,   728,     0,   251,     0,   252,     0,   729,
       0,   253,   254,     0,   255,   730,     0,   256,   257,     0,
       0,     0,   731,   259,   260,   261,   732,     0,   262,   263,
     264,     0,   265,     0,   266,     0,     0,     0,   733,   267,
     268,   734,     0,     0,   269,     0,     0,     0,   270,   271,
       0,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,     0,     0,   277,     0,   735,   278,   279,     0,     0,
       0,     0,     0,   736,   281,     0,   282,     0,   283,     0,
     284,   285,     0,     0,   737,     0,     0,     0,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   738,   307,   308,   309,   310,   739,   311,   312,
       0,     0,     0,     0,   313,   314,   315,   316,   740,   318,
       0,     0,   741,   320,   742,   321,     0,   322,   743,   744,
     745,   746,   747,   327,   328,   329,   330,   331,     0,   748,
     332,   333,     0,     0,   334,   335,   336,   337,   749,   750,
     751,   338,   339,     0,   752,   753,   340,     0,   341,   342,
     754,     0,   344,   345,   346,     0,   347,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,   350,   755,
     351,   352,     0,   353,   354,   756,   356,   357,   358,   359,
     757,   758,   362,   759,     0,   363,   364,   365,     0,   366,
       0,   367,   368,   369,   370,   371,     0,   760,   373,   374,
       0,     0,   375,     0,     0,     0,   376,   377,   378,   379,
     380,     0,     0,   381,   382,   383,   384,   385,     0,   386,
     387,     0,   388,   389,   390,   761,   762,   391,     0,   392,
       0,   393,   394,     0,   395,   396,   397,     0,   763,     0,
     764,   399,   400,   401,   402,   403,   765,   766,   406,   407,
     408,   409,     0,   767,   411,     0,     0,     0,   412,   413,
     414,   415,     0,     0,     0,   416,     0,     0,     0,   417,
       0,   418,   419,   420,   421,     0,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,   427,   428,   429,     0,
     430,   431,     0,   432,     0,     0,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   768,   769,
     441,   442,     0,   443,   444,   770,   446,   447,   448,   771,
     772,   449,   450,   451,   452,   773,   453,   454,     0,     0,
     455,   456,   457,   458,   459,     0,   774,   460,   461,     0,
     462,   775,   776,   777,   778,     0,     0,     0,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   779,   780,   781,   478,   479,   480,   782,   481,   482,
     783,   483,   484,     0,   485,   486,     0,     0,   487,     0,
       0,   488,     0,   489,     0,   784,   491,   492,     0,     0,
     785,   786,   787,   788,   493,     0,     0,   494,   789,     0,
     790,   495,   496,   497,   791,   792,     0,     0,     0,     0,
       0,     0,   500,   501,     0,   502,   503,   504,     0,     0,
     793,     0,     0,     0,   794,   795,     0,     0,     0,     0,
     796,  1128,     0,     0,   798,   799,     0,     0,   800,   801,
     137,     0,   695,   139,   140,   141,   142,  1764,     0,   143,
       0,     0,     0,  1765,   145,     0,     0,   696,     0,   147,
     148,   149,   150,   697,   152,     0,   153,     0,     0,   698,
     154,   699,   700,   701,   155,   702,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,   703,   704,
     163,   164,     0,   165,   166,   705,   706,   168,     0,   169,
     170,   171,   172,   173,     0,   707,   175,     0,   708,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,     0,   190,   191,   192,   709,   194,
       0,   710,   711,   195,     0,     0,   196,   712,   197,   713,
       0,   198,   714,   715,     0,   199,   200,   201,   716,   717,
     718,     0,     0,     0,     0,   719,   204,   720,     0,     0,
     721,   205,   206,     0,   207,     0,     0,     0,   208,     0,
     209,   210,   211,   212,   213,     0,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,     0,   218,     0,   219,
     220,     0,   221,   222,   223,     0,     0,   224,   225,     0,
     226,   227,   228,   229,   230,   231,   722,     0,   232,   233,
     234,   235,   236,   723,   724,   237,   238,     0,   239,   240,
     241,   725,     0,   242,     0,     0,     0,   726,   244,     0,
     245,     0,   246,     0,   247,   727,   249,   728,     0,   251,
       0,   252,     0,   729,     0,   253,   254,     0,   255,   730,
       0,   256,   257,     0,     0,     0,   731,   259,   260,   261,
     732,     0,   262,   263,   264,     0,   265,     0,   266,     0,
       0,     0,   733,   267,   268,   734,     0,     0,   269,     0,
       0,     0,   270,   271,     0,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,     0,     0,   277,     0,   735,
     278,   279,     0,     0,     0,     0,     0,   736,   281,     0,
     282,     0,   283,     0,   284,   285,     0,     0,   737,     0,
       0,     0,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,   738,   307,   308,   309,
     310,   739,   311,   312,     0,     0,     0,     0,   313,   314,
     315,   316,   740,   318,     0,     0,   741,   320,   742,   321,
       0,   322,   743,   744,   745,   746,   747,   327,   328,   329,
     330,   331,     0,   748,   332,   333,     0,     0,   334,   335,
     336,   337,   749,     0,   751,   338,   339,     0,   752,   753,
     340,     0,   341,   342,   754,     0,   344,   345,   346,     0,
     347,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     348,   349,   350,   755,   351,   352,     0,   353,   354,   756,
     356,   357,   358,   359,   757,   758,   362,   759,     0,   363,
     364,   365,     0,   366,     0,   367,   368,   369,   370,   371,
       0,   760,   373,   374,     0,     0,   375,     0,     0,     0,
     376,   377,   378,   379,   380,     0,     0,   381,   382,   383,
     384,   385,     0,   386,   387,     0,   388,   389,   390,   761,
     762,   391,     0,   392,     0,   393,   394,     0,   395,   396,
     397,     0,   763,     0,   764,   399,   400,   401,   402,   403,
     765,   766,   406,   407,   408,   409,     0,   767,   411,     0,
       0,     0,   412,   413,   414,   415,     0,     0,     0,   416,
       0,     0,     0,   417,     0,   418,   419,   420,   421,     0,
     422,   423,   424,   425,   426,     0,     0,     0,     0,     0,
     427,   428,   429,     0,   430,   431,     0,   432,     0,     0,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   768,   769,   441,   442,     0,   443,   444,   770,
     446,   447,   448,   771,   772,   449,   450,   451,   452,   773,
     453,   454,     0,     0,   455,   456,   457,   458,   459,     0,
     774,   460,   461,     0,   462,   775,   776,   777,   778,     0,
       0,     0,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   779,   780,   781,   478,   479,
     480,   782,   481,   482,   783,   483,   484,     0,   485,   486,
       0,     0,   487,     0,     0,   488,     0,   489,     0,   784,
     491,   492,     0,     0,   785,   786,   787,   788,   493,     0,
       0,   494,   789,     0,   790,   495,   496,   497,   791,   792,
       0,     0,     0,     0,     0,     0,   500,   501,     0,   502,
     503,   504,     0,     0,   793,     0,     0,     0,   794,   795,
       0,     0,     0,     0,   796,   797,     0,     0,   798,   799,
       0,     0,   800,   801,   137,     0,   695,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   696,     0,   147,   148,   149,   150,   697,   152,     0,
     153,     0,     0,   698,   154,   699,   700,   701,   155,   702,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,   703,   704,   163,   164,     0,   165,   166,   705,
     706,   168,     0,   169,   170,   171,   172,   173,     0,   707,
     175,     0,   708,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   709,   194,     0,   710,   711,   195,     0,     0,
     196,   712,   197,   713,     0,   198,   714,   715,     0,   199,
     200,   201,   716,   717,   718,     0,     0,     0,     0,   719,
     204,   720,     0,     0,   721,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
     722,     0,   232,   233,   234,   235,   236,   723,   724,   237,
     238,     0,   239,   240,   241,   725,     0,   242,     0,     0,
       0,   726,   244,     0,   245,     0,   246,     0,   247,   727,
     249,   728,     0,   251,     0,   252,     0,   729,     0,   253,
     254,     0,   255,   730,     0,   256,   257,     0,     0,     0,
     731,   259,   260,   261,   732,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,   733,   267,   268,  2763,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,   735,   278,   279,     0,     0,     0,     0,
       0,   736,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,   737,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     738,   307,   308,   309,   310,   739,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   740,   318,     0,     0,
     741,   320,   742,   321,     0,   322,   743,   744,   745,   746,
     747,   327,   328,   329,   330,   331,     0,   748,   332,   333,
       0,     0,   334,   335,   336,   337,   749,   750,   751,   338,
     339,     0,   752,   753,   340,     0,   341,   342,   754,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,   755,   351,   352,
       0,   353,   354,   756,   356,   357,   358,   359,   757,   758,
     362,   759,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   760,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,   761,   762,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   763,     0,   764,   399,
     400,   401,   402,   403,   765,   766,   406,   407,   408,   409,
       0,   767,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   768,   769,   441,   442,
       0,   443,   444,   770,   446,   447,   448,   771,   772,   449,
     450,   451,   452,   773,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,   774,   460,   461,     0,   462,   775,
     776,   777,   778,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   779,
     780,   781,   478,   479,   480,   782,   481,   482,   783,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   784,   491,   492,     0,     0,   785,   786,
     787,   788,   493,     0,     0,   494,   789,     0,   790,   495,
     496,   497,   791,   792,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,     0,   793,     0,
       0,     0,   794,   795,     0,     0,     0,     0,   796,   797,
       0,     0,   798,   799,     0,     0,   800,   801,   137,     0,
     695,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,   696,     0,   147,   148,   149,
     150,   697,   152,     0,   153,     0,     0,   698,   154,   699,
     700,   701,   155,   702,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,   703,   704,   163,   164,
       0,   165,   166,   705,   706,   168,     0,   169,   170,   171,
     172,   173,     0,   707,   175,     0,   708,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,   709,   194,     0,   710,
     711,   195,     0,     0,   196,   712,   197,   713,     0,   198,
     714,   715,     0,   199,   200,   201,   716,   717,   718,     0,
       0,     0,     0,   719,   204,   720,     0,     0,   721,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,     0,   218,     0,   219,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,   231,   722,     0,   232,   233,   234,   235,
     236,   723,   724,   237,   238,     0,   239,   240,   241,   725,
       0,   242,     0,     0,     0,   726,   244,     0,   245,     0,
     246,     0,   247,   727,   249,   728,     0,   251,     0,   252,
       0,   729,     0,   253,   254,     0,   255,   730,     0,   256,
     257,     0,     0,     0,   731,   259,   260,   261,   732,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
     733,   267,   268,  2808,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,     0,     0,   277,     0,   735,   278,   279,
       0,     0,     0,     0,     0,   736,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,   737,     0,     0,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,   738,   307,   308,   309,   310,   739,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     740,   318,     0,     0,   741,   320,   742,   321,     0,   322,
     743,   744,   745,   746,   747,   327,   328,   329,   330,   331,
       0,   748,   332,   333,     0,     0,   334,   335,   336,   337,
     749,   750,   751,   338,   339,     0,   752,   753,   340,     0,
     341,   342,   754,     0,   344,   345,   346,     0,   347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
     350,   755,   351,   352,     0,   353,   354,   756,   356,   357,
     358,   359,   757,   758,   362,   759,     0,   363,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   760,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,   387,     0,   388,   389,   390,   761,   762,   391,
       0,   392,     0,   393,   394,     0,   395,   396,   397,     0,
     763,     0,   764,   399,   400,   401,   402,   403,   765,   766,
     406,   407,   408,   409,     0,   767,   411,     0,     0,     0,
     412,   413,   414,   415,     0,     0,     0,   416,     0,     0,
       0,   417,     0,   418,   419,   420,   421,     0,   422,   423,
     424,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     768,   769,   441,   442,     0,   443,   444,   770,   446,   447,
     448,   771,   772,   449,   450,   451,   452,   773,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,   774,   460,
     461,     0,   462,   775,   776,   777,   778,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   779,   780,   781,   478,   479,   480,   782,
     481,   482,   783,   483,   484,     0,   485,   486,     0,     0,
     487,     0,     0,   488,     0,   489,     0,   784,   491,   492,
       0,     0,   785,   786,   787,   788,   493,     0,     0,   494,
     789,     0,   790,   495,   496,   497,   791,   792,     0,     0,
       0,     0,     0,     0,   500,   501,     0,   502,   503,   504,
       0,     0,   793,     0,     0,     0,   794,   795,     0,     0,
       0,     0,   796,   797,     0,     0,   798,   799,     0,     0,
     800,   801,   137,     0,   695,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   696,
       0,   147,   148,   149,   150,   697,   152,     0,   153,     0,
       0,   698,   154,   699,   700,   701,   155,   702,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
     703,   704,   163,   164,     0,   165,   166,   705,   706,   168,
       0,   169,   170,   171,   172,   173,     0,   707,   175,     0,
     708,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     709,   194,     0,   710,   711,   195,     0,     0,   196,   712,
     197,   713,     0,   198,   714,   715,     0,   199,   200,   201,
     716,   717,   718,     0,     0,     0,     0,   719,   204,   720,
       0,     0,  3603,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,   722,     0,
     232,   233,   234,   235,   236,   723,   724,   237,   238,     0,
     239,   240,   241,   725,     0,   242,     0,     0,     0,   726,
     244,     0,   245,     0,   246,     0,   247,   727,   249,   728,
       0,   251,     0,   252,     0,   729,     0,   253,   254,     0,
     255,   730,     0,   256,   257,     0,     0,     0,   731,   259,
     260,   261,   732,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,   733,   267,   268,   734,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,   735,   278,   279,     0,     0,     0,     0,     0,   736,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
     737,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,   738,   307,
     308,   309,   310,   739,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   740,   318,     0,     0,   741,   320,
     742,   321,     0,   322,   743,   744,   745,   746,   747,   327,
     328,   329,   330,   331,     0,   748,   332,   333,     0,     0,
     334,   335,   336,   337,   749,   750,   751,   338,   339,     0,
     752,   753,   340,     0,   341,   342,   754,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,   755,   351,   352,     0,   353,
     354,   756,   356,   357,   358,   359,   757,   758,   362,   759,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   760,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,   761,   762,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   763,     0,   764,   399,   400,   401,
     402,   403,   765,   766,   406,   407,   408,   409,     0,   767,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   768,   769,   441,   442,     0,   443,
     444,   770,   446,   447,   448,   771,   772,   449,   450,   451,
     452,   773,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,   774,   460,   461,     0,   462,   775,   776,   777,
     778,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   779,   780,   781,
     478,   479,   480,   782,   481,   482,   783,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   784,   491,   492,     0,     0,   785,   786,   787,   788,
     493,     0,     0,   494,   789,     0,   790,   495,   496,   497,
     791,   792,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,     0,   793,     0,     0,     0,
     794,   795,     0,     0,     0,     0,   796,   797,     0,     0,
     798,   799,     0,     0,   800,   801,   137,     0,   695,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   696,     0,   147,   148,   149,   150,   697,
     152,     0,   153,     0,     0,   698,   154,   699,   700,   701,
     155,   702,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,   703,   704,   163,   164,     0,   165,
     166,   705,   706,   168,     0,   169,   170,   171,   172,   173,
       0,   707,   175,     0,   708,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
       0,   190,   191,   192,   709,   194,     0,   710,   711,   195,
       0,     0,   196,   712,   197,   713,     0,   198,   714,   715,
       0,   199,   200,   201,   716,   717,   718,     0,     0,     0,
       0,   719,   204,   720,     0,     0,   721,   205,   206,     0,
     207,     0,     0,     0,   208,     0,   209,   210,   211,   212,
     213,     0,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,     0,   218,     0,   219,   220,     0,   221,   222,
     223,     0,     0,   224,   225,     0,   226,   227,   228,   229,
     230,   231,   722,     0,   232,   233,   234,   235,   236,   723,
     724,   237,   238,     0,   239,   240,   241,   725,     0,   242,
       0,     0,     0,   726,   244,     0,   245,     0,   246,     0,
     247,   727,   249,   728,     0,   251,     0,   252,     0,   729,
       0,   253,   254,     0,   255,   730,     0,   256,   257,     0,
       0,     0,   731,   259,   260,   261,   732,     0,   262,   263,
     264,     0,   265,     0,   266,     0,     0,     0,   733,   267,
     268,   734,     0,     0,   269,     0,     0,     0,   270,   271,
       0,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,     0,     0,   277,     0,   735,   278,   279,     0,     0,
       0,     0,     0,   736,   281,     0,   282,     0,   283,     0,
     284,   285,     0,     0,   737,     0,     0,     0,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   738,   307,   308,   309,   310,   739,   311,   312,
    4478,     0,     0,     0,   313,   314,   315,   316,   740,   318,
       0,     0,   741,   320,   742,   321,     0,   322,   743,   744,
     745,   746,   747,   327,   328,   329,   330,   331,     0,   748,
     332,   333,     0,     0,   334,   335,   336,   337,   749,     0,
     751,   338,   339,     0,   752,   753,   340,     0,   341,   342,
     754,     0,   344,   345,   346,     0,   347,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,   350,   755,
     351,   352,     0,   353,   354,   756,   356,   357,   358,   359,
     757,   758,   362,   759,     0,   363,   364,   365,     0,   366,
       0,   367,   368,   369,   370,   371,     0,   760,   373,   374,
       0,     0,   375,     0,     0,     0,   376,   377,   378,   379,
     380,     0,     0,   381,   382,   383,   384,   385,     0,   386,
     387,     0,   388,   389,   390,   761,   762,   391,     0,   392,
       0,   393,   394,     0,   395,   396,   397,     0,   763,     0,
     764,   399,   400,   401,   402,   403,   765,   766,   406,   407,
     408,   409,     0,   767,   411,     0,     0,     0,   412,   413,
     414,   415,     0,     0,     0,   416,     0,     0,     0,   417,
       0,   418,   419,   420,   421,     0,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,   427,   428,   429,     0,
     430,   431,     0,   432,     0,     0,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   768,   769,
     441,   442,     0,   443,   444,   770,   446,   447,   448,   771,
     772,   449,   450,   451,   452,   773,   453,   454,     0,     0,
     455,   456,   457,   458,   459,     0,   774,   460,   461,     0,
     462,   775,   776,   777,   778,     0,     0,     0,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   779,   780,   781,   478,   479,   480,   782,   481,   482,
     783,   483,   484,     0,   485,   486,     0,     0,   487,     0,
       0,   488,     0,   489,     0,   784,   491,   492,     0,     0,
     785,   786,   787,   788,   493,     0,     0,   494,   789,     0,
     790,   495,   496,   497,   791,   792,     0,     0,     0,     0,
       0,     0,   500,   501,     0,   502,   503,   504,     0,     0,
     793,     0,     0,     0,   794,   795,     0,     0,     0,     0,
     796,   797,     0,     0,   798,   799,     0,     0,   800,   801,
     137,     0,   695,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   696,     0,   147,
     148,   149,   150,   697,   152,     0,   153,     0,     0,   698,
     154,   699,   700,   701,   155,   702,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,   703,   704,
     163,   164,     0,   165,   166,   705,   706,   168,     0,   169,
     170,   171,   172,   173,     0,   707,   175,     0,   708,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,     0,   190,   191,   192,   709,   194,
       0,   710,   711,   195,     0,     0,   196,   712,   197,   713,
       0,   198,   714,   715,     0,   199,   200,   201,   716,   717,
     718,     0,     0,     0,     0,   719,   204,   720,     0,     0,
     721,   205,   206,     0,   207,     0,     0,     0,   208,     0,
     209,   210,   211,   212,   213,     0,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,     0,   218,     0,   219,
     220,     0,   221,   222,   223,     0,     0,   224,   225,     0,
     226,   227,   228,   229,   230,   231,   722,     0,   232,   233,
     234,   235,   236,   723,   724,   237,   238,     0,   239,   240,
     241,   725,     0,   242,     0,     0,     0,   726,   244,     0,
     245,     0,   246,     0,   247,   727,   249,   728,     0,   251,
       0,   252,     0,   729,     0,   253,   254,     0,   255,   730,
       0,   256,   257,     0,     0,     0,   731,   259,   260,   261,
     732,     0,   262,   263,   264,     0,   265,     0,   266,     0,
       0,     0,   733,   267,   268,   734,     0,     0,   269,     0,
       0,     0,   270,   271,     0,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,     0,     0,   277,     0,   735,
     278,   279,     0,     0,     0,     0,     0,   736,   281,     0,
     282,     0,   283,     0,   284,   285,     0,     0,   737,     0,
       0,     0,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,   738,   307,   308,   309,
     310,   739,   311,   312,     0,     0,     0,     0,   313,   314,
     315,   316,   740,   318,     0,     0,   741,   320,   742,   321,
       0,   322,   743,   744,   745,   746,   747,   327,   328,   329,
     330,   331,     0,   748,   332,   333,     0,     0,   334,   335,
     336,   337,   749,     0,   751,   338,   339,     0,   752,   753,
     340,     0,   341,   342,   754,     0,   344,   345,   346,     0,
     347,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     348,   349,   350,   755,   351,   352,     0,   353,   354,   756,
     356,   357,   358,   359,   757,   758,   362,   759,     0,   363,
     364,   365,     0,   366,     0,   367,   368,   369,   370,   371,
       0,   760,   373,   374,     0,     0,   375,     0,     0,     0,
     376,   377,   378,   379,   380,     0,     0,   381,   382,   383,
     384,   385,     0,   386,   387,     0,   388,   389,   390,   761,
     762,   391,     0,   392,     0,   393,   394,     0,   395,   396,
     397,     0,   763,     0,   764,   399,   400,   401,   402,   403,
     765,   766,   406,   407,   408,   409,     0,   767,   411,     0,
       0,     0,   412,   413,   414,   415,     0,     0,     0,   416,
       0,     0,     0,   417,     0,   418,   419,   420,   421,     0,
     422,   423,   424,   425,   426,     0,     0,     0,     0,     0,
     427,   428,   429,     0,   430,   431,     0,   432,     0,     0,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   768,   769,   441,   442,     0,   443,   444,   770,
     446,   447,   448,   771,   772,   449,   450,   451,   452,   773,
     453,   454,     0,     0,   455,   456,   457,   458,   459,     0,
     774,   460,   461,     0,   462,   775,   776,   777,   778,     0,
       0,     0,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   779,   780,   781,   478,   479,
     480,   782,   481,   482,   783,   483,   484,     0,   485,   486,
       0,     0,   487,     0,     0,   488,     0,   489,     0,   784,
     491,   492,     0,     0,   785,   786,   787,   788,   493,     0,
       0,   494,   789,     0,   790,   495,   496,   497,   791,   792,
       0,     0,     0,     0,     0,     0,   500,   501,     0,   502,
     503,   504,     0,     0,   793,     0,     0,     0,   794,   795,
       0,     0,     0,     0,   796,   797,     0,     0,   798,   799,
       0,     0,   800,   801,   137,     0,   695,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   696,     0,   147,   148,   149,   150,   697,   152,     0,
     153,     0,     0,   698,   154,   699,   700,   701,   155,   702,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,   703,   704,   163,   164,     0,   165,   166,   705,
     706,   168,     0,   169,   170,   171,   172,   173,     0,   707,
     175,     0,   708,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   709,   194,     0,   710,   711,   195,     0,     0,
     196,   712,   197,   713,     0,   198,   714,   715,     0,   199,
     200,   201,   716,   717,   718,     0,     0,     0,     0,   719,
     204,   720,     0,     0,   721,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
     722,     0,   232,   233,   234,   235,   236,   723,   724,   237,
     238,     0,   239,   240,   241,   725,     0,   242,     0,     0,
       0,   726,   244,     0,   245,     0,   246,     0,   247,   727,
     249,   728,     0,   251,     0,   252,     0,   729,     0,   253,
     254,     0,   255,   730,     0,   256,   257,     0,     0,     0,
     731,   259,   260,   261,   732,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,   733,   267,   268,  1779,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,   735,   278,   279,     0,     0,     0,     0,
       0,   736,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,   737,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     738,   307,   308,   309,   310,   739,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   740,   318,     0,     0,
     741,   320,   742,   321,     0,   322,   743,   744,   745,   746,
     747,   327,   328,   329,   330,   331,     0,   748,   332,   333,
       0,     0,   334,   335,   336,   337,   749,     0,   751,   338,
     339,     0,   752,   753,   340,     0,   341,   342,   754,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,   755,   351,   352,
       0,   353,   354,   756,   356,   357,   358,   359,   757,   758,
     362,   759,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   760,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,   761,   762,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   763,     0,   764,   399,
     400,   401,   402,   403,   765,   766,   406,   407,   408,   409,
       0,   767,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   768,   769,   441,   442,
       0,   443,   444,   770,   446,   447,   448,   771,   772,   449,
     450,   451,   452,   773,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,   774,   460,   461,     0,   462,   775,
     776,   777,   778,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   779,
     780,   781,   478,   479,   480,   782,   481,   482,   783,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   784,   491,   492,     0,     0,   785,   786,
     787,   788,   493,     0,     0,   494,   789,     0,   790,   495,
     496,   497,   791,   792,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,     0,   793,     0,
       0,     0,   794,   795,     0,     0,     0,     0,   796,   797,
       0,     0,   798,   799,     0,     0,   800,   801,   137,     0,
     695,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,   696,     0,   147,   148,   149,
     150,   697,   152,     0,   153,     0,     0,   698,   154,   699,
     700,   701,   155,   702,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,   703,   704,   163,   164,
       0,   165,   166,   705,   706,   168,     0,   169,   170,   171,
     172,   173,     0,   707,   175,     0,   708,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,   709,   194,     0,   710,
     711,   195,     0,     0,   196,   712,   197,   713,     0,   198,
     714,   715,     0,   199,   200,   201,   716,   717,   718,     0,
       0,     0,     0,   719,   204,   720,     0,     0,   721,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,     0,   218,     0,   219,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,   231,   722,     0,   232,   233,   234,   235,
     236,   723,   724,   237,   238,     0,   239,   240,   241,   725,
       0,   242,     0,     0,     0,   726,   244,     0,   245,     0,
     246,     0,   247,   727,   249,   728,     0,   251,     0,   252,
       0,   729,     0,   253,   254,     0,   255,   730,     0,   256,
     257,     0,     0,     0,   731,   259,   260,   261,   732,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
     733,   267,   268,  1781,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,     0,     0,   277,     0,   735,   278,   279,
       0,     0,     0,     0,     0,   736,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,   737,     0,     0,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,   738,   307,   308,   309,   310,   739,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     740,   318,     0,     0,   741,   320,   742,   321,     0,   322,
     743,   744,   745,   746,   747,   327,   328,   329,   330,   331,
       0,   748,   332,   333,     0,     0,   334,   335,   336,   337,
     749,     0,   751,   338,   339,     0,   752,   753,   340,     0,
     341,   342,   754,     0,   344,   345,   346,     0,   347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
     350,   755,   351,   352,     0,   353,   354,   756,   356,   357,
     358,   359,   757,   758,   362,   759,     0,   363,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   760,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,   387,     0,   388,   389,   390,   761,   762,   391,
       0,   392,     0,   393,   394,     0,   395,   396,   397,     0,
     763,     0,   764,   399,   400,   401,   402,   403,   765,   766,
     406,   407,   408,   409,     0,   767,   411,     0,     0,     0,
     412,   413,   414,   415,     0,     0,     0,   416,     0,     0,
       0,   417,     0,   418,   419,   420,   421,     0,   422,   423,
     424,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     768,   769,   441,   442,     0,   443,   444,   770,   446,   447,
     448,   771,   772,   449,   450,   451,   452,   773,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,   774,   460,
     461,     0,   462,   775,   776,   777,   778,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   779,   780,   781,   478,   479,   480,   782,
     481,   482,   783,   483,   484,     0,   485,   486,     0,     0,
     487,     0,     0,   488,     0,   489,     0,   784,   491,   492,
       0,     0,   785,   786,   787,   788,   493,     0,     0,   494,
     789,     0,   790,   495,   496,   497,   791,   792,     0,     0,
       0,     0,     0,     0,   500,   501,     0,   502,   503,   504,
       0,     0,   793,     0,     0,     0,   794,   795,     0,     0,
       0,     0,   796,   797,     0,     0,   798,   799,     0,     0,
     800,   801,   137,     0,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,   699,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,  1817,     0,     0,     0,     0,   203,   204,   720,
       0,     0,     0,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,     0,     0,
     232,   233,   234,   235,   236,     0,   724,   237,   238,     0,
     239,   240,   241,   725,     0,   242,     0,     0,     0,   243,
     244,     0,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   251,     0,   252,     0,     0,     0,   253,   254,     0,
     255,   730,     0,   256,   257,     0,     0,     0,   258,   259,
     260,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,   268,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,     0,   278,   279,     0,     0,     0,     0,     0,   280,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
     737,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   748,   332,   333,     0,     0,
     334,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     752,   753,   340,     0,   341,   342,   343,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,     0,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,     0,     0,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,     0,     0,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,   774,   460,   461,     0,   462,  1818,   464,   465,
    1819,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,     0,   780,   477,
     478,   479,   480,   782,   481,   482,   783,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,     0,   505,     0,     0,   137,
       0,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,   800,   801,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,  2594,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,     0,   197,     0,     0,
     198,     0,     0,     0,   199,   200,   201,     0,     0,   202,
       0,     0,     0,     0,   203,   204,     0,     0,     0,     0,
     205,   206,     0,   207,     0,     0,     0,   208,     0,   209,
     210,   211,   212,   213,     0,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,     0,   218,     0,   219,   220,
       0,   221,   222,   223,     0,     0,   224,   225,     0,   226,
     227,   228,   229,   230,   231,     0,     0,   232,   233,   234,
     235,   236,     0,     0,   237,   238,     0,   239,   240,   241,
       0,     0,   242,     0,     0,     0,   243,   244,     0,   245,
     521,   246,     0,   247,   248,   249,   250,     0,   251,     0,
     252,     0,     0,     0,   253,   254,     0,   255,     0,     0,
     256,   257,     0,     0,     0,   258,   259,   260,   261,     0,
       0,   262,   263,   264,  2143,   265,     0,   266,     0,     0,
       0,     0,   267,   268,     0,     0,     0,   269,     0,     0,
       0,   270,   271,     0,   272,   273,     0,     0,     0,   274,
    2144,     0,   275,   276,     0,     0,   277,     0,     0,   278,
     279,     0,  3169,     0,     0,     0,   280,   281,     0,   282,
       0,   283,     0,   284,   285,     0,     0,     0,     0,     0,
       0,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,     0,   307,   308,   309,   310,
       0,   311,   312,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,     0,     0,   319,   320,     0,   321,     0,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,     0,   332,   333,     0,     0,   334,   335,   336,
     337,     0,     0,     0,   338,   339,     0,     0,     0,   340,
       0,   341,   342,   343,     0,   344,   345,   346,     0,   347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   348,
     349,   350,     0,   351,   352,  2099,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,     0,   363,   364,
     365,     0,   366,     0,   367,   368,   369,   370,   371,     0,
     372,   373,   374,     0,     0,   375,     0,     0,     0,   376,
     377,   378,   379,   380,     0,     0,   381,   382,   383,   384,
     385,     0,   386,   387,     0,   388,   389,   390,     0,     0,
     391,     0,   392,     0,   393,   394,     0,   395,   396,   397,
       0,   398,     0,     0,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,  -481,     0,
       0,   412,   413,   414,   415,     0,     0,     0,   416,     0,
       0,     0,   417,     0,   418,   419,   420,   421,     0,   422,
     423,   424,   425,   426,   524,     0,     0,     0,     0,   427,
     428,   429,     0,   430,   431,     0,   432,     0,     0,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
       0,     0,     0,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,     0,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,   462,   463,   464,   465,   466,     0,     0,
       0,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,     0,     0,   477,   478,   479,   480,
       0,   481,   482,     0,   483,   484,     0,   485,   486,     0,
       0,   487,     0,     0,   488,     0,   489,     0,   490,   491,
     492,     0,     0,     0,     0,     0,     0,   493,     0,     0,
     494,     0,     0,     0,   495,   496,   497,   498,   499,     0,
       0,     0,     0,     0,     0,   500,   501,     0,   502,   503,
     504,     0,     0,   505,   137,     0,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   146,  2665,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,  2594,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
     204,     0,     0,     0,     0,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,     0,   239,   240,   241,     0,     0,   242,     0,     0,
       0,   243,   244,     0,   245,   521,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,   253,
     254,     0,   255,     0,     0,   256,   257,     0,     0,     0,
     258,   259,   260,   261,     0,     0,   262,   263,   264,  2143,
     265,     0,   266,     0,     0,     0,     0,   267,   268,     0,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,  2144,     0,   275,   276,     0,
       0,   277,     0,     0,   278,   279,     0,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,   338,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,     0,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,     0,     0,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,   524,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,     0,     0,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,   477,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,     0,   505,   137,
       0,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,  2665,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,     0,   197,     0,     0,
     198,     0,     0,     0,   199,   200,   201,     0,     0,   202,
       0,     0,     0,     0,   203,   204,     0,     0,     0,     0,
     205,   206,     0,   207,     0,     0,     0,   208,     0,   209,
     210,   211,   212,   213,     0,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,     0,   218,     0,   219,   220,
       0,   221,   222,   223,     0,     0,   224,   225,     0,   226,
     227,   228,   229,   230,   231,     0,     0,   232,   233,   234,
     235,   236,     0,     0,   237,   238,     0,   239,   240,   241,
       0,     0,   242,     0,     0,     0,   243,   244,     0,   245,
       0,   246,     0,   247,   248,   249,   250,     0,   251,     0,
     252,     0,     0,     0,   253,   254,     0,   255,     0,     0,
     256,   257,     0,     0,     0,   258,   259,   260,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,     0,     0,
       0,     0,   267,   268,     0,     0,     0,   269,     0,     0,
       0,   270,   271,     0,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,     0,     0,   277,     0,     0,   278,
     279,     0,     0,     0,     0,     0,   280,   281,     0,   282,
       0,   283,     0,   284,   285,     0,     0,     0,     0,     0,
       0,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,     0,   307,   308,   309,   310,
       0,   311,   312,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,     0,     0,   319,   320,     0,   321,     0,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,     0,   332,   333,     0,     0,   334,   335,   336,
     337,     0,     0,     0,   338,   339,     0,     0,     0,   340,
       0,   341,   342,   343,     0,   344,   345,   346,     0,   347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   348,
     349,   350,     0,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,     0,   363,   364,
     365,     0,   366,     0,   367,   368,   369,   370,   371,     0,
     372,   373,   374,     0,     0,   375,     0,     0,     0,   376,
     377,   378,   379,   380,     0,     0,   381,   382,   383,   384,
     385,     0,   386,   387,     0,   388,   389,   390,     0,     0,
     391,     0,   392,     0,   393,   394,     0,   395,   396,   397,
       0,   398,     0,     0,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,  2450,     0,
       0,   412,   413,   414,   415,     0,     0,     0,   416,     0,
       0,     0,   417,     0,   418,   419,   420,   421,     0,   422,
     423,   424,   425,   426,     0,     0,     0,     0,     0,   427,
     428,   429,     0,   430,   431,     0,   432,     0,     0,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
       0,     0,     0,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,     0,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,   462,   463,   464,   465,   466,     0,     0,
       0,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,     0,     0,   477,   478,   479,   480,
       0,   481,   482,     0,   483,   484,     0,   485,   486,     0,
       0,   487,     0,     0,   488,     0,   489,     0,   490,   491,
     492,     0,     0,     0,     0,     0,     0,   493,     0,     0,
     494,     0,     0,     0,   495,   496,   497,   498,   499,     0,
       0,     0,     0,     0,     0,   500,   501,     0,   502,   503,
     504,     0,     0,   505,   137,     0,   138,   139,   140,   141,
     142,     0,     0,   143,     0,  2913,     0,   144,   145,     0,
       0,   146,   801,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
     204,     0,     0,     0,     0,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,     0,   239,   240,   241,     0,     0,   242,     0,     0,
       0,   243,   244,     0,   245,     0,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,   253,
     254,     0,   255,     0,     0,   256,   257,     0,     0,     0,
     258,   259,   260,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,     0,   267,   268,     0,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,     0,   278,   279,     0,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,   338,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,     0,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,     0,     0,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,     0,     0,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,   477,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,     0,   505,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   137,
    4607,   138,   139,   140,   141,   142,  4608,   801,   143,     0,
       0,     0,   144,   145,     0,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,     0,   197,     0,     0,
     198,     0,     0,     0,   199,   200,   201,     0,     0,   202,
       0,     0,     0,     0,   203,   204,     0,     0,     0,     0,
     205,   206,     0,   207,     0,     0,     0,   208,     0,   209,
     210,   211,   212,   213,     0,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,     0,   218,     0,   219,   220,
       0,   221,   222,   223,     0,     0,   224,   225,     0,   226,
     227,   228,   229,   230,   231,     0,     0,   232,   233,   234,
     235,   236,     0,     0,   237,   238,     0,   239,   240,   241,
       0,     0,   242,     0,     0,     0,   243,   244,     0,   245,
       0,   246,     0,   247,   248,   249,   250,     0,   251,     0,
     252,     0,     0,     0,   253,   254,     0,   255,     0,     0,
     256,   257,     0,     0,     0,   258,   259,   260,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,     0,     0,
       0,     0,   267,   268,     0,     0,     0,   269,     0,     0,
       0,   270,   271,     0,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,     0,     0,   277,     0,     0,   278,
     279,     0,     0,     0,     0,     0,   280,   281,     0,   282,
       0,   283,     0,   284,   285,     0,     0,     0,     0,     0,
       0,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,     0,   307,   308,   309,   310,
       0,   311,   312,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,     0,     0,   319,   320,     0,   321,     0,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,     0,   332,   333,     0,     0,   334,   335,   336,
     337,     0,     0,     0,   338,   339,     0,     0,     0,   340,
       0,   341,   342,   343,     0,   344,   345,   346,     0,   347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   348,
     349,   350,     0,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,     0,   363,   364,
     365,     0,   366,     0,   367,   368,   369,   370,   371,     0,
     372,   373,   374,     0,     0,   375,     0,     0,     0,   376,
     377,   378,   379,   380,     0,     0,   381,   382,   383,   384,
     385,     0,   386,   387,     0,   388,   389,   390,     0,     0,
     391,     0,   392,     0,   393,   394,     0,   395,   396,   397,
       0,   398,     0,     0,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
       0,   412,   413,   414,   415,     0,     0,     0,   416,     0,
       0,     0,   417,     0,   418,   419,   420,   421,     0,   422,
     423,   424,   425,   426,     0,     0,     0,     0,     0,   427,
     428,   429,     0,   430,   431,     0,   432,     0,     0,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
       0,     0,     0,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,     0,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,   462,   463,   464,   465,   466,     0,     0,
       0,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,     0,     0,   477,   478,   479,   480,
       0,   481,   482,     0,   483,   484,     0,   485,   486,     0,
       0,   487,     0,     0,   488,     0,   489,     0,   490,   491,
     492,     0,     0,     0,     0,     0,     0,   493,     0,     0,
     494,     0,     0,     0,   495,   496,   497,   498,   499,     0,
       0,     0,     0,     0,     0,   500,   501,     0,   502,   503,
     504,     0,     0,   505,   137,     0,   138,   139,   140,   141,
     142,     0,     0,   143,  1132,     0,     0,   144,   145,     0,
       0,   146,   801,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
     204,     0,     0,     0,     0,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,     0,   239,   240,   241,     0,     0,   242,     0,     0,
       0,   243,   244,     0,   245,     0,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,   253,
     254,     0,   255,     0,     0,   256,   257,     0,     0,     0,
     258,   259,   260,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,     0,   267,   268,     0,
    1355,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,     0,   278,   279,     0,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,   338,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,     0,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,     0,     0,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,     0,     0,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,   477,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,     0,   505,   137,
       0,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,   562,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,     0,   197,     0,     0,
     198,     0,     0,     0,   199,   200,   201,     0,     0,   202,
       0,     0,     0,     0,   203,   204,     0,     0,     0,     0,
     205,   206,     0,   207,     0,     0,     0,   208,     0,   209,
     210,   211,   212,   213,     0,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,     0,   218,     0,   219,   220,
       0,   221,   222,   223,     0,     0,   224,   225,     0,   226,
     227,   228,   229,   230,   231,     0,     0,   232,   233,   234,
     235,   236,     0,     0,   237,   238,     0,   239,   240,   241,
       0,     0,   242,     0,     0,     0,   243,   244,     0,   245,
       0,   246,     0,   247,   248,   249,   250,     0,   251,     0,
     252,     0,     0,     0,   253,   254,     0,   255,     0,     0,
     256,   257,     0,     0,     0,   258,   259,   260,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,     0,     0,
       0,     0,   267,   268,     0,     0,     0,   269,     0,     0,
       0,   270,   271,     0,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,     0,     0,   277,     0,     0,   278,
     279,     0,     0,     0,     0,     0,   280,   281,     0,   282,
       0,   283,     0,   284,   285,     0,     0,     0,     0,     0,
       0,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,     0,   307,   308,   309,   310,
       0,   311,   312,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,     0,     0,   319,   320,     0,   321,     0,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,     0,   332,   333,     0,     0,   334,   335,   336,
     337,     0,     0,     0,   338,   339,     0,     0,     0,   340,
       0,   341,   342,   343,     0,   344,   345,   346,     0,   347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   348,
     349,   350,     0,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,     0,   363,   364,
     365,     0,   366,     0,   367,   368,   369,   370,   371,     0,
     372,   373,   374,     0,     0,   375,     0,     0,     0,   376,
     377,   378,   379,   380,     0,     0,   381,   382,   383,   384,
     385,     0,   386,   387,     0,   388,   389,   390,     0,     0,
     391,     0,   392,     0,   393,   394,     0,   395,   396,   397,
       0,   398,     0,     0,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
       0,   412,   413,   414,   415,     0,     0,     0,   416,     0,
       0,     0,   417,     0,   418,   419,   420,   421,     0,   422,
     423,   424,   425,   426,     0,     0,     0,     0,     0,   427,
     428,   429,     0,   430,   431,     0,   432,     0,     0,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
       0,     0,     0,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,     0,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,   462,   463,   464,   465,   466,     0,     0,
       0,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,     0,     0,   477,   478,   479,   480,
       0,   481,   482,     0,   483,   484,     0,   485,   486,     0,
       0,   487,     0,     0,   488,     0,   489,     0,   490,   491,
     492,     0,     0,     0,     0,     0,     0,   493,     0,     0,
     494,     0,     0,     0,   495,   496,   497,   498,   499,     0,
       0,     0,     0,     0,     0,   500,   501,     0,   502,   503,
     504,     0,     0,   505,   137,     0,   138,   139,   140,   141,
     142,     0,     0,   143,  2664,     0,     0,   144,   145,     0,
       0,   146,  2665,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
     204,     0,     0,     0,     0,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,     0,   239,   240,   241,     0,     0,   242,     0,     0,
       0,   243,   244,     0,   245,     0,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,   253,
     254,     0,   255,     0,     0,   256,   257,     0,     0,     0,
     258,   259,   260,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,     0,   267,   268,     0,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,     0,   278,   279,     0,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,   338,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,     0,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,     0,     0,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,     0,     0,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,   477,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,     0,   505,     0,
       0,     0,     0,     0,  2875,   137,     0,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,   562,   144,   145,
       0,     0,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,     0,
     190,   191,   192,   193,   194,     0,     0,     0,   195,     0,
       0,   196,     0,   197,     0,     0,   198,     0,     0,     0,
     199,   200,   201,     0,     0,   202,     0,     0,     0,     0,
     203,   204,     0,     0,     0,     0,   205,   206,     0,   207,
       0,     0,     0,   208,     0,   209,   210,   211,   212,   213,
       0,     0,     0,   214,     0,     0,   215,   216,   217,     0,
       0,     0,   218,     0,   219,   220,     0,   221,   222,   223,
       0,     0,   224,   225,     0,   226,   227,   228,   229,   230,
     231,     0,     0,   232,   233,   234,   235,   236,     0,     0,
     237,   238,     0,   239,   240,   241,     0,     0,   242,     0,
       0,     0,   243,   244,     0,   245,     0,   246,     0,   247,
     248,   249,   250,     0,   251,     0,   252,     0,     0,     0,
     253,   254,     0,   255,     0,     0,   256,   257,     0,     0,
       0,   258,   259,   260,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,     0,     0,     0,     0,   267,   268,
       0,     0,     0,   269,     0,     0,     0,   270,   271,     0,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
       0,     0,   277,     0,     0,   278,   279,     0,     0,     0,
       0,     0,   280,   281,     0,   282,     0,   283,     0,   284,
     285,     0,     0,     0,     0,     0,     0,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,     0,   307,   308,   309,   310,     0,   311,   312,     0,
       0,     0,     0,   313,   314,   315,   316,   317,   318,     0,
       0,   319,   320,     0,   321,     0,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,     0,   332,
     333,     0,     0,   334,   335,   336,   337,     0,     0,     0,
     338,   339,     0,     0,     0,   340,     0,   341,   342,   343,
       0,   344,   345,   346,     0,   347,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   348,   349,   350,     0,   351,
     352,     0,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,     0,   363,   364,   365,     0,   366,     0,
     367,   368,   369,   370,   371,     0,   372,   373,   374,     0,
       0,   375,     0,     0,     0,   376,   377,   378,   379,   380,
       0,     0,   381,   382,   383,   384,   385,     0,   386,   387,
       0,   388,   389,   390,     0,     0,   391,     0,   392,     0,
     393,   394,     0,   395,   396,   397,     0,   398,     0,     0,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,   412,   413,   414,
     415,     0,     0,     0,   416,     0,     0,     0,   417,     0,
     418,   419,   420,   421,     0,   422,   423,   424,   425,   426,
       0,     0,     0,     0,     0,   427,   428,   429,     0,   430,
     431,     0,   432,     0,     0,   433,     0,     0,   434,   435,
     436,   437,   438,   439,   440,     0,     0,     0,     0,   441,
     442,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,     0,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,   462,
     463,   464,   465,   466,     0,     0,     0,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
       0,     0,   477,   478,   479,   480,     0,   481,   482,     0,
     483,   484,     0,   485,   486,     0,     0,   487,     0,     0,
     488,     0,   489,     0,   490,   491,   492,     0,     0,     0,
       0,     0,     0,   493,     0,     0,   494,     0,     0,     0,
     495,   496,   497,   498,   499,     0,     0,     0,     0,     0,
       0,   500,   501,     0,   502,   503,   504,     0,     0,   505,
       0,     0,   137,     0,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,  4608,   801,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,   202,     0,     0,     0,     0,   203,   204,     0,
       0,     0,     0,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,     0,     0,
     232,   233,   234,   235,   236,     0,     0,   237,   238,     0,
     239,   240,   241,     0,     0,   242,     0,     0,     0,   243,
     244,     0,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   251,     0,   252,     0,     0,     0,   253,   254,     0,
     255,     0,     0,   256,   257,     0,     0,     0,   258,   259,
     260,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,   268,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,     0,   278,   279,     0,     0,     0,     0,     0,   280,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
       0,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,     0,   332,   333,     0,     0,
     334,   335,   336,   337,     0,     0,     0,   338,   339,     0,
       0,     0,   340,     0,   341,   342,   343,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,     0,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,     0,     0,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,     0,     0,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,   462,   463,   464,   465,
     466,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,     0,     0,   477,
     478,   479,   480,     0,   481,   482,     0,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,     0,   505,   137,     0,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,   145,     0,     0,   146,   562,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,     0,   197,     0,     0,   198,     0,
       0,     0,   199,   200,   201,     0,     0,   202,     0,     0,
       0,     0,   203,   204,     0,     0,     0,     0,   205,   206,
       0,   207,     0,     0,     0,   208,     0,   209,   210,   211,
     212,   213,     0,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,     0,   218,     0,   219,   220,     0,   221,
     222,   223,     0,     0,   224,   225,     0,   226,   227,   228,
     229,   230,   231,     0,     0,   232,   233,   234,   631,   236,
       0,     0,   237,   238,     0,   239,   240,   241,     0,     0,
     242,     0,     0,     0,   632,   244,     0,   245,     0,   246,
       0,   247,   248,   249,   250,     0,   251,     0,   252,     0,
       0,     0,   253,   254,     0,   255,     0,     0,   256,   257,
       0,     0,     0,   258,   259,   260,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,     0,     0,     0,     0,
     267,   268,     0,     0,     0,   269,     0,     0,     0,   270,
     271,     0,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,     0,     0,   277,     0,     0,   278,   279,     0,
       0,     0,     0,     0,   280,   281,     0,   282,     0,   283,
       0,   284,   285,     0,     0,     0,     0,     0,     0,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,     0,   307,   308,   309,   310,     0,   311,
     312,     0,     0,     0,     0,   313,   314,   315,   316,   317,
     318,     0,     0,   319,   320,     0,   321,     0,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
       0,   332,   333,     0,     0,   334,   335,   336,   337,     0,
       0,     0,   338,   339,     0,     0,     0,   340,     0,   341,
     342,   343,     0,   344,   345,   346,     0,   347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   348,   349,   350,
       0,   351,   352,     0,   633,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,     0,   363,   364,   365,     0,
     366,     0,   367,   368,   369,   370,   371,     0,   372,   373,
     374,     0,     0,   375,     0,     0,     0,   376,   377,   378,
     379,   380,     0,     0,   381,   382,   383,   384,   385,     0,
     386,   387,     0,   388,   389,   390,     0,     0,   391,     0,
     392,     0,   393,   394,     0,   395,   396,   397,     0,   398,
       0,     0,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,     0,   412,
     413,   414,   415,     0,     0,     0,   416,     0,     0,     0,
     417,     0,   418,   419,   420,   421,     0,   422,   423,   424,
     425,   426,     0,     0,     0,     0,     0,   427,   428,   429,
       0,   430,   431,     0,   432,     0,     0,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,     0,     0,
       0,   441,   442,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,   450,   451,   452,     0,   453,   454,     0,
       0,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,   462,   463,   464,   465,   466,     0,     0,     0,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,     0,     0,   477,   478,   479,   480,     0,   481,
     482,     0,   483,   484,     0,   485,   486,     0,     0,   487,
       0,     0,   488,     0,   489,     0,   490,   491,   492,     0,
       0,     0,     0,     0,     0,   493,     0,     0,   494,     0,
       0,     0,   495,   496,   497,   498,   499,     0,     0,     0,
       0,     0,     0,   500,   501,     0,   502,   503,   504,     0,
       0,   505,   137,     0,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
     562,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,   202,     0,     0,     0,     0,   203,   204,     0,
       0,     0,     0,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,     0,     0,
     232,   233,   234,   235,   236,     0,     0,   237,   238,     0,
     239,   240,   241,     0,     0,   242,     0,     0,     0,   243,
     244,     0,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   251,     0,   252,     0,     0,     0,   253,   254,     0,
     255,     0,     0,   256,   257,     0,     0,     0,   258,   259,
     260,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,   268,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,     0,   278,   279,     0,     0,     0,     0,     0,   280,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
       0,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,     0,   332,   333,     0,     0,
     334,   335,   336,   337,     0,     0,     0,   338,   339,     0,
       0,     0,   340,     0,   341,   342,   343,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,     0,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,     0,     0,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,     0,     0,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,   462,   463,   464,   465,
     466,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,     0,     0,   477,
     478,   479,   480,     0,   481,   482,     0,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,     0,   505,   137,     0,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,   145,     0,     0,   146,   801,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,     0,   197,     0,     0,   198,     0,
       0,     0,   199,   200,   201,     0,     0,   202,     0,     0,
       0,     0,   203,   204,     0,     0,     0,     0,   205,   206,
       0,   207,     0,     0,     0,   208,     0,   209,   210,   211,
     212,   213,     0,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,     0,   218,     0,   219,   220,     0,   221,
     222,   223,     0,     0,   224,   225,     0,   226,   227,   228,
     229,   230,   231,     0,     0,   232,   233,   234,   235,   236,
       0,     0,   237,   238,     0,   239,   240,   241,     0,     0,
     242,     0,     0,     0,   243,   244,     0,   245,     0,   246,
       0,   247,   248,   249,   250,     0,   251,     0,   252,     0,
       0,     0,   253,   254,     0,   255,     0,     0,   256,   257,
       0,     0,     0,   258,   259,   260,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,     0,     0,     0,     0,
     267,   268,     0,     0,     0,   269,     0,     0,     0,   270,
     271,     0,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,     0,     0,   277,     0,     0,   278,   279,     0,
       0,     0,     0,     0,   280,   281,     0,   282,     0,   283,
       0,   284,   285,     0,     0,     0,     0,     0,     0,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,     0,   307,   308,   309,   310,     0,   311,
     312,     0,     0,     0,     0,   313,   314,   315,   316,   317,
     318,     0,     0,   319,   320,     0,   321,     0,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
       0,   332,   333,     0,     0,   334,   335,   336,   337,     0,
       0,     0,   338,   339,     0,     0,     0,   340,     0,   341,
     342,   343,     0,   344,   345,   346,     0,   347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   348,   349,   350,
       0,   351,   352,     0,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,     0,   363,   364,   365,     0,
     366,     0,   367,   368,   369,   370,   371,     0,   372,   373,
     374,     0,     0,   375,     0,     0,     0,   376,   377,   378,
     379,   380,     0,     0,   381,   382,   383,   384,   385,     0,
     386,   387,     0,   388,   389,   390,     0,     0,   391,     0,
     392,     0,   393,   394,     0,   395,   396,   397,     0,   398,
       0,     0,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,     0,   412,
     413,   414,   415,     0,     0,     0,   416,     0,     0,     0,
     417,     0,   418,   419,   420,   421,     0,   422,   423,   424,
     425,   426,     0,     0,     0,     0,     0,   427,   428,   429,
       0,   430,   431,     0,   432,     0,     0,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,     0,     0,
       0,   441,   442,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,   450,   451,   452,     0,   453,   454,     0,
       0,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,   462,   463,   464,   465,   466,     0,     0,     0,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,     0,     0,   477,   478,   479,   480,     0,   481,
     482,     0,   483,   484,     0,   485,   486,     0,     0,   487,
       0,     0,   488,     0,   489,     0,   490,   491,   492,     0,
       0,     0,     0,     0,     0,   493,     0,     0,   494,     0,
       0,     0,   495,   496,   497,   498,   499,     0,     0,     0,
       0,     0,     0,   500,   501,     0,   502,   503,   504,     0,
       0,   505,   137,     0,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
    2665,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   908,   909,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,   202,     0,     0,     0,     0,   203,   204,     0,
       0,     0,   910,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,     0,     0,
     232,   233,   234,   235,   236,     0,     0,   237,   238,     0,
     239,   240,   241,     0,     0,   242,     0,     0,     0,   243,
     244,     0,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   911,     0,   252,     0,     0,     0,   253,   254,     0,
     255,     0,     0,   256,   257,     0,     0,     0,   258,   259,
     260,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,   268,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,     0,   278,   279,     0,     0,     0,     0,     0,   280,
     281,     0,   912,     0,   283,     0,   284,   285,     0,     0,
       0,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   913,   330,   331,     0,     0,   332,   333,     0,     0,
     334,   335,   336,   337,     0,     0,     0,   338,   339,     0,
       0,     0,   340,     0,   341,   342,   343,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,     0,   351,   352,     0,   353,
     354,   914,   356,   357,   358,   359,   360,   361,   362,     0,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,     0,     0,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,     0,   412,   413,   915,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,     0,     0,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,   462,   463,   464,   465,
     466,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   916,   476,     0,     0,     0,   477,
     478,   479,   480,     0,   481,   482,     0,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,     0,   505,     0,   137,     0,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,   917,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,     0,   174,   175,     0,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,   195,     0,     0,   196,     0,   197,     0,     0,   198,
       0,     0,     0,   199,   200,   201,     0,     0,   202,     0,
       0,     0,     0,   203,   204,     0,     0,     0,     0,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,     0,   218,     0,   219,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,   231,     0,     0,   232,   233,   234,   235,
     236,     0,     0,   237,   238,     0,   239,   240,   241,     0,
       0,   242,     0,     0,     0,   243,   244,     0,   245,     0,
     246,     0,   247,   248,   249,   250,     0,   251,     0,   252,
       0,     0,     0,   253,   254,     0,   255,     0,     0,   256,
     257,     0,     0,     0,   258,   259,   260,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
       0,   267,   268,     0,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,     0,     0,   277,     0,     0,   278,   279,
     644,     0,     0,     0,     0,   280,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,     0,     0,     0,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,     0,   307,   308,   309,   310,     0,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     317,   318,     0,     0,   319,   320,     0,   321,     0,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,     0,   332,   333,     0,     0,   334,   335,   336,   337,
       0,     0,     0,   338,   339,     0,     0,     0,   340,     0,
     341,   342,   343,     0,   344,   345,   346,     0,   347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
     350,     0,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,     0,   363,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   372,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,   387,     0,   388,   389,   390,     0,     0,   391,
       0,   392,     0,   393,   394,     0,   395,   396,   397,     0,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,     0,
     412,   413,   414,   415,     0,     0,     0,   416,     0,     0,
       0,   417,     0,   418,   419,   420,   421,     0,   422,   423,
     424,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,     0,
       0,     0,   441,   442,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,   134,   460,
     461,     0,   462,   463,   464,   465,   466,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,     0,     0,     0,   477,   478,   479,   480,     0,
     481,   482,     0,   483,   484,     0,   485,   486,     0,     0,
     487,     0,     0,   488,     0,   489,     0,   490,   491,   492,
       0,     0,     0,     0,     0,     0,   493,     0,     0,   494,
       0,     0,     0,   495,   496,   497,   498,   499,     0,     0,
       0,     0,     0,     0,   500,   501,     0,   502,   503,   504,
       0,     0,   505,     0,   137,     0,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
    1409,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
     204,     0,     0,     0,     0,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,     0,   239,   240,   241,     0,     0,   242,     0,     0,
       0,   243,   244,     0,   245,     0,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,   253,
     254,     0,   255,     0,     0,   256,   257,     0,     0,     0,
     258,   259,   260,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,     0,   267,   268,     0,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,     0,   278,   279,   644,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,   338,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,     0,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,     0,     0,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,     0,     0,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,   134,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,   477,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,     0,   505,     0,
     137,     0,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,  1751,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,     0,     0,
     163,   164,     0,   165,   166,   908,   909,   168,     0,   169,
     170,   171,   172,   173,     0,   174,   175,     0,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,   195,     0,     0,   196,     0,   197,     0,
       0,   198,     0,     0,     0,   199,   200,   201,     0,     0,
     202,     0,     0,     0,     0,   203,   204,     0,     0,     0,
     910,   205,   206,     0,   207,     0,     0,     0,   208,     0,
     209,   210,   211,   212,   213,     0,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,     0,   218,     0,   219,
     220,     0,   221,   222,   223,     0,     0,   224,   225,     0,
     226,   227,   228,   229,   230,   231,     0,     0,   232,   233,
     234,   235,   236,     0,     0,   237,   238,     0,   239,   240,
     241,     0,     0,   242,     0,     0,     0,   243,   244,     0,
     245,     0,   246,     0,   247,   248,   249,   250,     0,   911,
       0,   252,     0,     0,     0,   253,   254,     0,   255,     0,
       0,   256,   257,     0,     0,     0,   258,   259,   260,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,     0,
       0,     0,     0,   267,   268,     0,     0,     0,   269,     0,
       0,     0,   270,   271,     0,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,     0,     0,   277,     0,     0,
     278,   279,     0,     0,     0,     0,     0,   280,   281,     0,
     912,     0,   283,     0,   284,   285,     0,     0,     0,     0,
       0,     0,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,     0,   307,   308,   309,
     310,     0,   311,   312,     0,     0,     0,     0,   313,   314,
     315,   316,   317,   318,     0,     0,   319,   320,     0,   321,
       0,   322,     0,   323,   324,   325,   326,   327,   328,   913,
     330,   331,     0,     0,   332,   333,     0,     0,   334,   335,
     336,   337,     0,     0,     0,   338,   339,     0,     0,     0,
     340,     0,   341,   342,   343,     0,   344,   345,   346,     0,
     347,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     348,   349,   350,     0,   351,   352,     0,   353,   354,   914,
     356,   357,   358,   359,   360,   361,   362,     0,     0,   363,
     364,   365,     0,   366,     0,   367,   368,   369,   370,   371,
       0,   372,   373,   374,     0,     0,   375,     0,     0,     0,
     376,   377,   378,   379,   380,     0,     0,   381,   382,   383,
     384,   385,     0,   386,   387,     0,   388,   389,   390,     0,
       0,   391,     0,   392,     0,   393,   394,     0,   395,   396,
     397,     0,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,   412,   413,   915,   415,     0,     0,     0,   416,
       0,     0,     0,   417,     0,   418,   419,   420,   421,     0,
     422,   423,   424,   425,   426,     0,     0,     0,     0,     0,
     427,   428,   429,     0,   430,   431,     0,   432,     0,     0,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,     0,     0,     0,   441,   442,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,     0,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,   462,   463,   464,   465,   466,     0,
       0,     0,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,     0,     0,   477,   478,   479,
     480,     0,   481,   482,     0,   483,   484,     0,   485,   486,
       0,     0,   487,     0,     0,   488,     0,   489,     0,   490,
     491,   492,     0,     0,     0,     0,     0,     0,   493,     0,
       0,   494,     0,     0,     0,   495,   496,   497,   498,   499,
       0,     0,     0,     0,     0,     0,   500,   501,     0,   502,
     503,   504,     0,     0,   505,     0,   137,     0,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,   917,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
       0,   190,   191,   192,   193,   194,     0,     0,     0,   195,
       0,     0,   196,     0,   197,     0,     0,   198,     0,     0,
       0,   199,   200,   201,     0,     0,   202,     0,     0,     0,
       0,   203,   204,     0,     0,     0,     0,   205,   206,     0,
     207,     0,     0,     0,   208,     0,   209,   210,   211,   212,
     213,     0,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,     0,   218,     0,   219,   220,     0,   221,   222,
     223,     0,     0,   224,   225,     0,   226,   227,   228,   229,
     230,   231,     0,     0,   232,   233,   234,   235,   236,     0,
       0,   237,   238,     0,   239,   240,   241,     0,     0,   242,
       0,     0,     0,   243,   244,     0,   245,     0,   246,     0,
     247,   248,   249,   250,     0,   251,     0,   252,     0,     0,
       0,   253,   254,     0,   255,     0,     0,   256,   257,     0,
       0,     0,   258,   259,   260,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,     0,     0,     0,     0,   267,
     268,     0,     0,     0,   269,     0,     0,     0,   270,   271,
       0,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,     0,     0,   277,     0,     0,   278,   279,   644,     0,
       0,     0,     0,   280,   281,     0,   282,     0,   283,     0,
     284,   285,     0,     0,     0,     0,     0,     0,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,     0,   307,   308,   309,   310,     0,   311,   312,
       0,     0,     0,     0,   313,   314,   315,   316,   317,   318,
       0,     0,   319,   320,     0,   321,     0,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,     0,
     332,   333,     0,     0,   334,   335,   336,   337,     0,     0,
       0,   338,   339,     0,     0,     0,   340,     0,   341,   342,
     343,     0,   344,   345,   346,     0,   347,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,   350,     0,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,     0,   363,   364,   365,     0,   366,
       0,   367,   368,   369,   370,   371,     0,   372,   373,   374,
       0,     0,   375,     0,     0,     0,   376,   377,   378,   379,
     380,     0,     0,   381,   382,   383,   384,   385,     0,   386,
     387,     0,   388,   389,   390,     0,     0,   391,     0,   392,
       0,   393,   394,     0,   395,   396,   397,     0,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,   412,   413,
     414,   415,     0,     0,     0,   416,     0,     0,     0,   417,
       0,   418,   419,   420,   421,     0,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,   427,   428,   429,     0,
     430,   431,     0,   432,     0,     0,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,     0,     0,     0,
     441,   442,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,     0,
     455,   456,   457,   458,   459,     0,   134,   460,   461,     0,
     462,   463,   464,   465,   466,     0,     0,     0,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,     0,     0,   477,   478,   479,   480,     0,   481,   482,
       0,   483,   484,     0,   485,   486,     0,     0,   487,     0,
       0,   488,     0,   489,     0,   490,   491,   492,     0,     0,
       0,     0,     0,     0,   493,     0,     0,   494,     0,     0,
       0,   495,   496,   497,   498,   499,     0,     0,     0,     0,
       0,     0,   500,   501,     0,   502,   503,   504,     0,     0,
     505,     0,   137,     0,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,  3640,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,  1285,   188,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,   202,     0,     0,     0,     0,   203,   204,     0,
       0,     0,     0,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,     0,     0,
     232,   233,   234,   235,   236,     0,     0,   237,   238,     0,
     239,   240,   241,     0,     0,   242,     0,     0,     0,   243,
     244,     0,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   251,     0,   252,     0,     0,     0,   253,   254,     0,
     255,     0,     0,   256,   257,     0,     0,     0,   258,   259,
     260,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,   268,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,     0,   278,   279,     0,     0,     0,     0,     0,   280,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
       0,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,     0,   332,   333,     0,     0,
     334,   335,   336,   337,     0,     0,     0,   338,   339,     0,
       0,     0,   340,     0,   341,   342,   343,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,     0,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,     0,     0,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,     0,     0,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,   462,   463,   464,   465,
     466,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,     0,     0,   477,
     478,   479,   480,     0,   481,   482,     0,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,     0,   505,     0,   137,     0,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,  1286,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,     0,   174,   175,     0,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,   195,     0,     0,   196,     0,   197,     0,     0,   198,
       0,     0,     0,   199,   200,   201,     0,     0,   202,     0,
       0,     0,     0,   203,   204,     0,     0,     0,     0,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,     0,   218,     0,   219,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,   231,     0,     0,   232,   233,   234,   235,
     236,     0,     0,   237,   238,     0,   239,   240,   241,     0,
       0,   242,     0,     0,     0,   243,   244,     0,   245,     0,
     246,     0,   247,   248,   249,   250,     0,   251,     0,   252,
       0,     0,     0,   253,   254,     0,   255,     0,     0,   256,
     257,     0,     0,     0,   258,   259,   260,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
       0,   267,   268,     0,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,     0,     0,   277,     0,     0,   278,   279,
       0,     0,     0,     0,     0,   280,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,     0,     0,     0,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,     0,   307,   308,   309,   310,     0,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     317,   318,     0,     0,   319,   320,     0,   321,     0,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,     0,   332,   333,     0,     0,   334,   335,   336,   337,
       0,     0,     0,   338,   339,     0,     0,     0,   340,     0,
     341,   342,   343,     0,   344,   345,   346,     0,   347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
     350,     0,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,     0,   363,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   372,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,   387,     0,   388,   389,   390,     0,     0,   391,
       0,   392,     0,   393,   394,     0,   395,   396,   397,     0,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,     0,
     412,   413,   414,   415,     0,     0,     0,   416,     0,     0,
       0,   417,     0,   418,   419,   420,   421,     0,   422,   423,
     424,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,     0,
       0,     0,   441,   442,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,   462,   463,   464,   465,   466,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,     0,     0,     0,   477,   478,   479,   480,     0,
     481,   482,     0,   483,   484,     0,   485,   486,     0,     0,
     487,     0,     0,   488,     0,   489,     0,   490,   491,   492,
       0,     0,     0,     0,     0,     0,   493,     0,     0,   494,
       0,     0,     0,   495,   496,   497,   498,   499,     0,     0,
       0,     0,     0,     0,   500,   501,     0,   502,   503,   504,
       0,     0,   505,   137,     0,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
    1286,     0,   147,   148,   149,   150,   151,     0,     0,  -369,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,     0,     0,     0,     0,
     162,  4063,     0,   163,   164,     0,   165,   166,     0,     0,
       0,     0,   169,   170,   171,   172,  4064,     0,   174,   175,
       0,   176,   177,     0,   178,   179,     0,   181,     0,   183,
     184,   185,   186,   187,     0,   188,   189,     0,   190,   191,
     192,     0,   194,     0,     0,     0,   195,     0,     0,   196,
       0,   197,     0,     0,   198,     0,     0,     0,   199,   200,
     201,     0,     0,   202,     0,     0,     0,     0,   203,     0,
       0,     0,     0,     0,   205,   206,     0,   207,     0,     0,
       0,   208,     0,   209,   210,   211,   212,   213,     0,     0,
       0,     0,     0,     0,   215,   216,   217,     0,     0,     0,
     218,     0,     0,   220,     0,   221,   222,   223,     0,     0,
     224,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   232,   233,   234,   235,   236,     0,     0,   237,   238,
    4065,   239,   240,   241,     0,     0,     0,     0,     0,     0,
       0,   244,     0,   245,     0,   246,     0,   247,   248,   249,
     250,     0,   251,     0,   252,     0,     0,     0,     0,   254,
       0,     0,     0,     0,     0,   257,     0,     0,     0,   258,
     259,   260,   261,  4066,     0,   262,   263,   264,     0,   265,
       0,   266,     0,     0,     0,     0,   267,     0,     0,     0,
       0,   269,     0,     0,     0,   270,   271,     0,   272,   273,
    4067,     0,     0,   274,     0,     0,     0,   276,     0,     0,
     277,  4068,     0,   278,   279,     0,     0,     0,     0,     0,
     280,   281,     0,   282,     0,   283,     0,   284,   285,     0,
       0,     0,     0,  -324,     0,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,     0,
     307,   308,   309,   310,     0,   311,   312,     0,     0,     0,
       0,   313,   314,   315,   316,   317,   318,     0,     0,   319,
     320,     0,   321,     0,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,     0,   332,   333,     0,
       0,   334,   335,   336,   337,     0,     0,     0,     0,   339,
       0,     0,     0,   340,     0,   341,   342,   343,     0,   344,
     345,  4069,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   349,   350,     0,     0,   352,     0,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   364,   365,     0,   366,     0,   367,   368,
     369,   370,   371,     0,   372,   373,   374,     0,     0,   375,
       0,     0,     0,   376,   377,   378,   379,   380,     0,     0,
     381,   382,   383,   384,   385,     0,   386,     0,     0,   388,
       0,   390,  -324,     0,   391,     0,     0,     0,   393,     0,
       0,   395,   396,   397,  4070,   398,     0,     0,     0,   400,
     401,   402,   403,   404,   405,   406,     0,   408,   409,     0,
     410,     0,     0,     0,     0,   412,   413,   414,     0,     0,
       0,     0,   416,     0,     0,     0,   417,     0,     0,   419,
       0,   421,     0,   422,     0,     0,   425,   426,     0,     0,
       0,     0,     0,   427,   428,   429,     0,   430,   431,     0,
     432,     0,     0,   433,     0,     0,   434,     0,   436,   437,
     438,   439,   440,     0,     0,     0,     0,     0,   442,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,     0,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,   462,   463,   464,
     465,   466,     0,     0,     0,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,     0,     0,
       0,   478,   479,   480,     0,   481,   482,     0,   483,   484,
       0,     0,     0,     0,     0,   487,     0,     0,   488,     0,
       0,     0,   490,   491,   492,     0,     0,     0,     0,     0,
       0,   493,     0,     0,   494,     0,     0,     0,   495,   496,
     497,   498,   499,     0,     0,  -324,     0,     0,     0,   500,
       0,     0,   502,     0,   504,     0,     0,   505,   137,     0,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
    4600,   144,   145,     0,     0,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,     0,   174,   175,     0,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,   195,     0,     0,   196,     0,   197,     0,     0,   198,
       0,     0,     0,   199,   200,   201,     0,     0,   202,     0,
       0,     0,     0,   203,   204,     0,     0,     0,     0,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,     0,   218,     0,   219,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,   231,     0,     0,   232,   233,   234,   235,
     236,     0,     0,   237,   238,     0,   239,   240,   241,     0,
       0,   242,     0,     0,     0,   243,   244,     0,   245,     0,
     246,     0,   247,   248,   249,   250,     0,   251,     0,   252,
       0,     0,     0,   253,   254,     0,   255,     0,     0,   256,
     257,     0,     0,     0,   258,   259,   260,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
       0,   267,   268,     0,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,     0,     0,   277,     0,     0,   278,   279,
       0,     0,     0,     0,     0,   280,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,     0,     0,     0,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,     0,   307,   308,   309,   310,     0,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     317,   318,     0,     0,   319,   320,     0,   321,     0,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,     0,   332,   333,     0,     0,   334,   335,   336,   337,
       0,     0,     0,   338,   339,     0,     0,     0,   340,     0,
     341,   342,   343,     0,   344,   345,   346,     0,   347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
     350,     0,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,     0,   363,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   372,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,   387,     0,   388,   389,   390,     0,     0,   391,
       0,   392,     0,   393,   394,     0,   395,   396,   397,     0,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,     0,
     412,   413,   414,   415,     0,     0,     0,   416,     0,     0,
       0,   417,     0,   418,   419,   420,   421,     0,   422,   423,
     424,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,     0,
       0,     0,   441,   442,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,   462,   463,   464,   465,   466,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,     0,     0,     0,   477,   478,   479,   480,     0,
     481,   482,     0,   483,   484,     0,   485,   486,     0,     0,
     487,     0,     0,   488,     0,   489,     0,   490,   491,   492,
       0,     0,     0,     0,     0,     0,   493,     0,     0,   494,
       0,     0,     0,   495,   496,   497,   498,   499,     0,     0,
       0,     0,     0,     0,   500,   501,     0,   502,   503,   504,
       0,   137,   505,   138,   139,   140,   141,   142,  2223,     0,
     143,     0,     0,     0,   144,   145,     0,     0,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,     0,     0,
       0,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,   160,   161,     0,     0,   162,     0,
       0,   163,   164,     0,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,     0,   174,   175,     0,   176,
     177,     0,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,     0,   190,   191,   192,   193,
     194,     0,     0,     0,   195,     0,     0,   196,     0,   197,
       0,     0,   198,     0,     0,     0,   199,   200,   201,     0,
       0,   202,     0,     0,     0,     0,   203,   204,     0,     0,
       0,     0,   205,   206,     0,   207,     0,     0,     0,   208,
       0,   209,   210,   211,   212,   213,     0,     0,     0,   214,
       0,     0,   215,   216,   217,     0,     0,     0,   218,     0,
     219,   220,     0,   221,   222,   223,     0,     0,   224,   225,
       0,   226,   227,   228,   229,   230,   231,     0,     0,   232,
     233,   234,   235,   236,     0,     0,   237,   238,     0,   239,
     240,   241,     0,     0,   242,     0,     0,     0,   243,   244,
       0,   245,     0,   246,     0,   247,   248,   249,   250,     0,
     251,     0,   252,     0,     0,     0,   253,   254,     0,   255,
       0,     0,   256,   257,     0,     0,     0,   258,   259,   260,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
       0,     0,     0,     0,   267,   268,     0,     0,     0,   269,
       0,     0,     0,   270,   271,     0,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,     0,     0,   277,     0,
       0,   278,   279,     0,     0,     0,     0,     0,   280,   281,
       0,   282,     0,   283,     0,   284,   285,     0,     0,     0,
       0,     0,     0,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,     0,   307,   308,
     309,   310,     0,   311,   312,     0,     0,     0,     0,   313,
     314,   315,   316,   317,   318,     0,     0,   319,   320,     0,
     321,     0,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,     0,   332,   333,     0,     0,   334,
     335,   336,   337,     0,     0,     0,   338,   339,     0,     0,
       0,   340,     0,   341,   342,   343,     0,   344,   345,   346,
       0,   347,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   348,   349,   350,     0,   351,   352,     0,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,     0,
     363,   364,   365,     0,   366,     0,   367,   368,   369,   370,
     371,     0,   372,   373,   374,     0,     0,   375,     0,     0,
       0,   376,   377,   378,   379,   380,     0,     0,   381,   382,
     383,   384,   385,     0,   386,   387,     0,   388,   389,   390,
       0,     0,   391,     0,   392,     0,   393,   394,     0,   395,
     396,   397,     0,   398,     0,     0,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,   412,   413,   414,   415,     0,     0,     0,
     416,     0,     0,     0,   417,     0,   418,   419,   420,   421,
       0,   422,   423,   424,   425,   426,     0,     0,     0,     0,
       0,   427,   428,   429,     0,   430,   431,     0,   432,     0,
       0,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,     0,     0,     0,     0,   441,   442,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,     0,   455,   456,   457,   458,   459,
       0,     0,   460,   461,     0,   462,   463,   464,   465,   466,
       0,     0,     0,     0,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,     0,     0,   477,   478,
     479,   480,     0,   481,   482,     0,   483,   484,     0,   485,
     486,     0,     0,   487,     0,     0,   488,     0,   489,     0,
     490,   491,   492,     0,     0,     0,     0,     0,     0,   493,
       0,     0,   494,     0,     0,     0,   495,   496,   497,   498,
     499,     0,     0,     0,     0,     0,     0,   500,   501,     0,
     502,   503,   504,     0,   137,   505,   138,   139,   140,   141,
     142,  2943,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
     204,     0,     0,     0,     0,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,     0,   239,   240,   241,     0,     0,   242,     0,     0,
       0,   243,   244,     0,   245,     0,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,   253,
     254,     0,   255,     0,     0,   256,   257,     0,     0,     0,
     258,   259,   260,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,     0,   267,   268,     0,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,     0,   278,   279,     0,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,   338,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,     0,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,     0,     0,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,     0,     0,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,   477,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,   137,   505,   138,
     139,   140,   141,   142,  3599,     0,   143,     0,     0,     0,
     144,   145,     0,     0,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,     0,   197,     0,     0,   198,     0,
       0,     0,   199,   200,   201,     0,     0,   202,     0,     0,
       0,     0,   203,   204,     0,     0,     0,     0,   205,   206,
       0,   207,     0,     0,     0,   208,     0,   209,   210,   211,
     212,   213,     0,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,     0,   218,     0,   219,   220,     0,   221,
     222,   223,     0,     0,   224,   225,     0,   226,   227,   228,
     229,   230,   231,     0,     0,   232,   233,   234,   235,   236,
       0,     0,   237,   238,     0,   239,   240,   241,     0,     0,
     242,     0,     0,     0,   243,   244,     0,   245,     0,   246,
       0,   247,   248,   249,   250,     0,   251,     0,   252,     0,
       0,     0,   253,   254,     0,   255,     0,     0,   256,   257,
       0,     0,     0,   258,   259,   260,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,     0,     0,     0,     0,
     267,   268,     0,     0,     0,   269,     0,     0,     0,   270,
     271,     0,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,     0,     0,   277,     0,     0,   278,   279,     0,
       0,     0,     0,     0,   280,   281,     0,   282,     0,   283,
       0,   284,   285,     0,     0,     0,     0,     0,     0,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,     0,   307,   308,   309,   310,     0,   311,
     312,     0,     0,     0,     0,   313,   314,   315,   316,   317,
     318,     0,     0,   319,   320,     0,   321,     0,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
       0,   332,   333,     0,     0,   334,   335,   336,   337,     0,
       0,     0,   338,   339,     0,     0,     0,   340,     0,   341,
     342,   343,     0,   344,   345,   346,     0,   347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   348,   349,   350,
       0,   351,   352,     0,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,     0,   363,   364,   365,     0,
     366,     0,   367,   368,   369,   370,   371,     0,   372,   373,
     374,     0,     0,   375,     0,     0,     0,   376,   377,   378,
     379,   380,     0,     0,   381,   382,   383,   384,   385,     0,
     386,   387,     0,   388,   389,   390,     0,     0,   391,     0,
     392,     0,   393,   394,     0,   395,   396,   397,     0,   398,
       0,     0,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,     0,   412,
     413,   414,   415,     0,     0,     0,   416,     0,     0,     0,
     417,     0,   418,   419,   420,   421,     0,   422,   423,   424,
     425,   426,     0,     0,     0,     0,     0,   427,   428,   429,
       0,   430,   431,     0,   432,     0,     0,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,     0,     0,
       0,   441,   442,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,   450,   451,   452,     0,   453,   454,     0,
       0,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,   462,   463,   464,   465,   466,     0,     0,     0,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,     0,     0,   477,   478,   479,   480,     0,   481,
     482,     0,   483,   484,     0,   485,   486,     0,     0,   487,
       0,     0,   488,     0,   489,     0,   490,   491,   492,     0,
       0,     0,     0,     0,     0,   493,     0,     0,   494,     0,
       0,     0,   495,   496,   497,   498,   499,     0,     0,     0,
       0,     0,     0,   500,   501,     0,   502,   503,   504,     0,
     137,   505,   138,   139,   140,   141,   142,  3645,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,     0,     0,
     163,   164,     0,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,     0,   174,   175,     0,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,   195,     0,     0,   196,     0,   197,     0,
       0,   198,     0,     0,     0,   199,   200,   201,     0,     0,
     202,     0,     0,     0,     0,   203,   204,  2572,     0,     0,
       0,   205,   206,     0,   207,     0,     0,     0,   208,     0,
     209,   210,   211,   212,   213,     0,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,     0,   218,     0,   219,
     220,     0,   221,   222,   223,     0,     0,   224,   225,     0,
     226,   227,   228,   229,   230,   231,     0,     0,   232,   233,
     234,   235,   236,     0,     0,   237,   238,     0,   239,   240,
     241,  2573,     0,   242,     0,     0,     0,   243,   244,     0,
     245,     0,   246,     0,   247,   248,   249,   250,     0,   251,
       0,   252,     0,     0,     0,   253,   254,     0,   255,  2574,
       0,   256,   257,     0,     0,     0,   258,   259,   260,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,     0,
       0,     0,     0,   267,   268,     0,     0,     0,   269,     0,
       0,     0,   270,   271,     0,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,     0,     0,   277,     0,     0,
     278,   279,     0,     0,     0,     0,     0,   280,   281,     0,
     282,     0,   283,     0,   284,   285,     0,     0,  2575,     0,
       0,     0,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,     0,   307,   308,   309,
     310,     0,   311,   312,     0,     0,     0,     0,   313,   314,
     315,   316,   317,   318,     0,     0,   319,   320,     0,   321,
       0,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,     0,   332,   333,     0,     0,   334,   335,
     336,   337,  1047,  1048,     0,   338,   339,     0,     0,  2576,
     340,     0,   341,   342,   343,     0,   344,   345,   346,     0,
     347,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     348,   349,   350,     0,   351,   352,     0,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,     0,   363,
     364,   365,     0,   366,     0,   367,   368,   369,   370,   371,
       0,   372,   373,   374,     0,     0,   375,     0,     0,     0,
     376,   377,   378,   379,   380,     0,     0,   381,   382,   383,
     384,   385,     0,   386,   387,     0,   388,   389,   390,     0,
       0,   391,     0,   392,     0,   393,   394,     0,   395,   396,
     397,     0,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,   412,   413,   414,   415,     0,     0,     0,   416,
       0,     0,     0,   417,     0,   418,   419,   420,   421,     0,
     422,   423,   424,   425,   426,     0,     0,  4587,   590,  4588,
     427,   428,   429,     0,   430,   431,     0,   432,     0,     0,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,     0,     0,     0,   441,   442,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,     0,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,   462,   463,   464,   465,   466,     0,
       0,     0,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,     0,     0,   477,   478,   479,
     480,  2577,   481,   482,     0,   483,   484,     0,   485,   486,
       0,     0,   487,     0,     0,   488,     0,   489,     0,   490,
     491,   492,     0,     0,     0,     0,     0,     0,   493,     0,
       0,   494,     0,     0,     0,   495,   496,   497,   498,   499,
       0,     0,     0,     0,     0,     0,   500,   501,     0,   502,
     503,   504,     0,   137,   505,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,  1398,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,     0,   190,   191,
     192,   193,   194,     0,     0,     0,   195,     0,     0,   196,
       0,   197,     0,     0,   198,     0,     0,     0,   199,   200,
     201,     0,     0,   202,     0,     0,     0,     0,   203,   204,
       0,     0,     0,  1399,   205,   206,     0,   207,     0,     0,
       0,   208,     0,   209,   210,   211,   212,   213,     0,     0,
       0,   214,     0,     0,   215,   216,   217,     0,     0,     0,
     218,     0,   219,   220,     0,   221,   222,   223,  1400,     0,
     224,   225,     0,   226,   227,   228,   229,   230,   231,     0,
       0,   232,   233,   234,   235,   236,     0,     0,   237,   238,
       0,   239,   240,   241,     0,     0,   242,     0,     0,     0,
     243,   244,     0,   245,     0,   246,     0,   247,   248,   249,
     250,     0,   251,     0,   252,     0,     0,     0,   253,   254,
       0,   255,     0,     0,   256,   257,     0,     0,     0,   258,
     259,   260,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,     0,     0,     0,     0,   267,   268,     0,     0,
       0,   269,     0,     0,     0,   270,   271,     0,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,     0,     0,
     277,     0,     0,   278,   279,   644,     0,     0,     0,     0,
     280,   281,     0,   282,     0,   283,     0,   284,   285,     0,
       0,     0,     0,     0,     0,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,     0,
     307,   308,   309,   310,     0,   311,   312,     0,     0,     0,
       0,   313,   314,   315,   316,   317,   318,     0,     0,   319,
     320,     0,   321,     0,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,     0,   332,   333,     0,
       0,   334,   335,   336,   337,     0,     0,     0,   338,   339,
       0,     0,     0,   340,     0,   341,   342,   343,     0,   344,
     345,   346,     0,   347,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   348,   349,   350,     0,   351,   352,     0,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,     0,   363,   364,   365,     0,   366,     0,   367,   368,
     369,   370,   371,     0,   372,   373,   374,     0,     0,   375,
       0,     0,     0,   376,   377,   378,   379,   380,     0,     0,
     381,   382,   383,   384,   385,     0,   386,   387,     0,   388,
     389,   390,     0,     0,   391,     0,   392,     0,   393,   394,
       0,   395,   396,   397,     0,   398,     0,     0,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,     0,   412,   413,   414,   415,     0,
       0,  1401,   416,     0,     0,     0,   417,     0,   418,   419,
     420,   421,     0,   422,   423,   424,   425,   426,     0,     0,
       0,     0,     0,   427,   428,   429,     0,   430,   431,     0,
     432,     0,     0,   433,     0,     0,   434,   435,   436,   437,
     438,   439,   440,     0,     0,     0,     0,   441,   442,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,     0,   455,   456,   457,
     458,   459,     0,   134,   460,   461,     0,   462,   463,   464,
     465,   466,     0,     0,     0,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,     0,     0,
     477,   478,   479,   480,     0,   481,   482,     0,   483,   484,
       0,   485,   486,     0,     0,   487,     0,     0,   488,     0,
     489,     0,   490,   491,   492,     0,     0,     0,     0,     0,
       0,   493,     0,     0,   494,     0,     0,     0,   495,   496,
     497,   498,   499,     0,     0,     0,     0,     0,     0,   500,
     501,     0,   502,   503,   504,     0,   137,   505,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,  1411,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
       0,   190,   191,   192,   193,   194,     0,     0,     0,   195,
       0,     0,   196,     0,   197,     0,     0,   198,     0,     0,
       0,   199,   200,   201,     0,     0,   202,     0,     0,     0,
       0,   203,   204,     0,     0,     0,  1412,   205,   206,     0,
     207,     0,     0,     0,   208,     0,   209,   210,   211,   212,
     213,     0,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,     0,   218,     0,   219,   220,     0,   221,   222,
     223,     0,     0,   224,   225,     0,   226,   227,   228,   229,
     230,   231,     0,     0,   232,   233,   234,   235,   236,     0,
       0,   237,   238,     0,   239,   240,   241,     0,     0,   242,
       0,     0,     0,   243,   244,     0,   245,     0,   246,     0,
     247,   248,   249,   250,     0,   251,     0,   252,     0,     0,
       0,   253,   254,     0,   255,     0,     0,   256,   257,     0,
       0,     0,   258,   259,   260,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,     0,     0,     0,     0,   267,
     268,     0,     0,     0,   269,     0,     0,     0,   270,   271,
       0,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,     0,     0,   277,     0,     0,   278,   279,   644,     0,
       0,     0,     0,   280,   281,     0,   282,     0,   283,     0,
     284,   285,     0,     0,     0,     0,     0,     0,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,     0,   307,   308,   309,   310,     0,   311,   312,
       0,     0,     0,     0,   313,   314,   315,   316,   317,   318,
       0,     0,   319,   320,     0,   321,     0,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,     0,
     332,   333,     0,     0,   334,   335,   336,   337,     0,     0,
       0,   338,   339,     0,     0,     0,   340,     0,   341,   342,
     343,     0,   344,   345,   346,     0,   347,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,   350,     0,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,     0,   363,   364,   365,     0,   366,
       0,   367,   368,   369,   370,   371,     0,   372,   373,   374,
       0,     0,   375,     0,     0,     0,   376,   377,   378,   379,
     380,     0,     0,   381,   382,   383,   384,   385,     0,   386,
     387,     0,   388,   389,   390,     0,     0,   391,     0,   392,
       0,   393,   394,     0,   395,   396,   397,     0,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,   412,   413,
     414,   415,     0,     0,     0,   416,     0,     0,     0,   417,
       0,   418,   419,   420,   421,     0,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,   427,   428,   429,     0,
     430,   431,     0,   432,     0,     0,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,     0,     0,     0,
     441,   442,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,     0,
     455,   456,   457,   458,   459,     0,   134,   460,   461,     0,
     462,   463,   464,   465,   466,     0,     0,     0,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,     0,     0,   477,   478,   479,   480,     0,   481,   482,
       0,   483,   484,     0,   485,   486,     0,     0,   487,     0,
       0,   488,     0,   489,     0,   490,   491,   492,     0,     0,
       0,     0,     0,     0,   493,     0,     0,   494,     0,     0,
       0,   495,   496,   497,   498,   499,     0,     0,     0,     0,
       0,     0,   500,   501,     0,   502,   503,   504,     0,   137,
     505,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,     0,   197,     0,     0,
     198,     0,     0,     0,   199,   200,   201,     0,     0,   202,
       0,     0,     0,     0,   203,   204,     0,     0,     0,     0,
     205,   206,     0,   207,     0,     0,     0,   208,     0,   209,
     210,   211,   212,   213,     0,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,     0,   218,     0,   219,   220,
       0,   221,   222,   223,     0,     0,   224,   225,     0,   226,
     227,   228,   229,   230,   231,     0,     0,   232,   233,   234,
     235,   236,     0,     0,   237,   238,     0,   239,   240,   241,
       0,     0,   242,     0,     0,     0,   243,   244,     0,   245,
       0,   246,     0,   247,   248,   249,   250,     0,   251,     0,
     252,     0,     0,     0,   253,   254,     0,   255,     0,     0,
     256,   257,     0,     0,     0,   258,   259,   260,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,     0,     0,
       0,     0,   267,   268,     0,     0,     0,   269,     0,     0,
       0,   270,   271,     0,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,     0,     0,   277,     0,     0,   278,
     279,     0,     0,     0,     0,     0,   280,   281,     0,   282,
       0,   283,     0,   284,   285,     0,     0,  1962,     0,     0,
       0,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,     0,   307,   308,   309,   310,
       0,   311,   312,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,     0,     0,   319,   320,     0,   321,     0,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,     0,   332,   333,     0,     0,   334,   335,   336,
     337,     0,     0,     0,   338,   339,     0,     0,  1963,   340,
       0,   341,   342,   343,     0,   344,   345,   346,     0,   347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   348,
     349,   350,   755,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,     0,   363,   364,
     365,     0,   366,     0,   367,   368,   369,   370,   371,     0,
     372,   373,   374,     0,     0,   375,     0,     0,     0,   376,
     377,   378,   379,   380,     0,     0,   381,   382,   383,   384,
     385,     0,   386,   387,     0,   388,   389,   390,     0,     0,
     391,     0,   392,     0,   393,   394,     0,   395,   396,   397,
       0,   398,     0,     0,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
       0,   412,   413,   414,   415,     0,     0,     0,   416,     0,
       0,     0,   417,     0,   418,   419,   420,   421,     0,   422,
     423,   424,   425,   426,     0,     0,     0,     0,     0,   427,
     428,   429,     0,   430,   431,     0,   432,     0,     0,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
       0,     0,     0,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,     0,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,   462,   463,   464,   465,   466,     0,     0,
       0,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,     0,     0,   477,   478,   479,   480,
    1964,   481,   482,     0,   483,   484,     0,   485,   486,     0,
       0,   487,     0,     0,   488,     0,   489,     0,   490,   491,
     492,     0,     0,     0,     0,     0,     0,   493,     0,     0,
     494,     0,     0,     0,   495,   496,   497,   498,   499,     0,
       0,     0,     0,     0,     0,   500,   501,     0,   502,   503,
     504,     0,   137,   505,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,  1398,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,   202,     0,     0,     0,     0,   203,   204,     0,
       0,     0,  1399,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,     0,     0,
     232,   233,   234,   235,   236,     0,     0,   237,   238,     0,
     239,   240,   241,     0,     0,   242,     0,     0,     0,   243,
     244,     0,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   251,     0,   252,     0,     0,     0,   253,   254,     0,
     255,     0,     0,   256,   257,     0,     0,     0,   258,   259,
     260,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,   268,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,     0,   278,   279,   644,     0,     0,     0,     0,   280,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
       0,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,     0,   332,   333,     0,     0,
     334,   335,   336,   337,     0,     0,     0,   338,   339,     0,
       0,     0,   340,     0,   341,   342,   343,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,     0,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,     0,     0,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,     0,     0,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,   134,   460,   461,     0,   462,   463,   464,   465,
     466,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,     0,     0,   477,
     478,   479,   480,     0,   481,   482,     0,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,   137,   505,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,     0,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,     0,
     190,   191,   192,   193,   194,     0,     0,     0,   195,     0,
       0,   196,     0,   197,  1004,     0,   198,     0,     0,     0,
     199,   200,   201,     0,     0,   202,     0,     0,     0,     0,
     203,   204,     0,     0,     0,     0,   205,   206,     0,   207,
       0,     0,     0,   208,     0,   209,   210,   211,   212,   213,
       0,     0,     0,   214,     0,     0,   215,   216,   217,     0,
       0,     0,   218,     0,   219,   220,     0,   221,   222,   223,
       0,     0,   224,   225,     0,   226,   227,   228,   229,   230,
     231,     0,     0,   232,   233,   234,   235,   236,     0,     0,
     237,   238,     0,   239,   240,   241,     0,     0,   242,     0,
       0,     0,   243,   244,     0,   245,     0,   246,     0,   247,
     248,   249,   250,     0,   251,     0,   252,     0,     0,     0,
     253,   254,     0,   255,     0,     0,   256,   257,     0,     0,
       0,   258,   259,   260,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,     0,     0,     0,     0,   267,   268,
       0,     0,     0,   269,     0,     0,     0,   270,   271,     0,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
       0,     0,   277,     0,     0,   278,   279,   644,     0,     0,
       0,     0,   280,   281,     0,   282,     0,   283,     0,   284,
     285,     0,     0,     0,     0,     0,     0,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,     0,   307,   308,   309,   310,     0,   311,   312,     0,
       0,     0,     0,   313,   314,   315,   316,   317,   318,     0,
       0,   319,   320,     0,   321,     0,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,     0,   332,
     333,     0,     0,   334,   335,   336,   337,     0,     0,     0,
     338,   339,     0,     0,     0,   340,     0,   341,   342,   343,
       0,   344,   345,   346,     0,   347,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   348,   349,   350,     0,   351,
     352,     0,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,     0,   363,   364,   365,     0,   366,     0,
     367,   368,   369,   370,   371,     0,   372,   373,   374,     0,
       0,   375,     0,     0,     0,   376,   377,   378,   379,   380,
       0,     0,   381,   382,   383,   384,   385,     0,   386,   387,
       0,   388,   389,   390,     0,     0,   391,     0,   392,     0,
     393,   394,     0,   395,   396,   397,     0,   398,     0,     0,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,   412,   413,   414,
     415,     0,     0,     0,   416,     0,     0,     0,   417,     0,
     418,   419,   420,   421,     0,   422,   423,   424,   425,   426,
       0,     0,     0,     0,     0,   427,   428,   429,     0,   430,
     431,     0,   432,     0,     0,   433,     0,     0,   434,   435,
     436,   437,   438,   439,   440,     0,     0,     0,     0,   441,
     442,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,     0,   455,
     456,   457,   458,   459,     0,   134,   460,   461,     0,   462,
     463,   464,   465,   466,     0,     0,     0,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
       0,     0,   477,   478,   479,   480,     0,   481,   482,     0,
     483,   484,     0,   485,   486,     0,     0,   487,     0,     0,
     488,     0,   489,     0,   490,   491,   492,     0,     0,     0,
       0,     0,     0,   493,     0,     0,   494,     0,     0,     0,
     495,   496,   497,   498,   499,     0,     0,     0,     0,     0,
       0,   500,   501,     0,   502,   503,   504,     0,   137,   505,
     138,   139,   140,   141,   142,  1434,     0,   143,     0,     0,
       0,   144,   145,     0,     0,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,     0,   174,   175,     0,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,   195,     0,     0,   196,     0,   197,     0,     0,   198,
       0,     0,     0,   199,   200,   201,     0,     0,   202,     0,
       0,     0,     0,   203,   204,     0,     0,     0,     0,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,     0,   218,     0,   219,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,   231,     0,     0,   232,   233,   234,   235,
     236,     0,     0,   237,   238,     0,   239,   240,   241,     0,
       0,   242,     0,     0,     0,   243,   244,     0,   245,     0,
     246,     0,   247,   248,   249,   250,     0,   251,     0,   252,
       0,     0,     0,   253,   254,     0,   255,     0,     0,   256,
     257,     0,     0,     0,   258,   259,   260,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
       0,   267,   268,     0,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,     0,     0,   277,     0,     0,   278,   279,
     644,     0,     0,     0,     0,   280,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,     0,     0,     0,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,     0,   307,   308,   309,   310,     0,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     317,   318,     0,     0,   319,   320,     0,   321,     0,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,     0,   332,   333,     0,     0,   334,   335,   336,   337,
       0,     0,     0,   338,   339,     0,     0,     0,   340,     0,
     341,   342,   343,     0,   344,   345,   346,     0,   347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
     350,     0,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,     0,   363,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   372,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,   387,     0,   388,   389,   390,     0,     0,   391,
       0,   392,     0,   393,   394,     0,   395,   396,   397,     0,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,     0,
     412,   413,   414,   415,     0,     0,     0,   416,     0,     0,
       0,   417,     0,   418,   419,   420,   421,     0,   422,   423,
     424,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,     0,
       0,     0,   441,   442,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,   134,   460,
     461,     0,   462,   463,   464,   465,   466,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,     0,     0,     0,   477,   478,   479,   480,     0,
     481,   482,     0,   483,   484,     0,   485,   486,     0,     0,
     487,     0,     0,   488,     0,   489,     0,   490,   491,   492,
       0,     0,     0,     0,     0,     0,   493,     0,     0,   494,
       0,     0,     0,   495,   496,   497,   498,   499,     0,     0,
       0,     0,     0,     0,   500,   501,     0,   502,   503,   504,
       0,   137,   505,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,     0,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,     0,     0,
       0,   154,   981,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,   160,   161,     0,     0,   162,     0,
       0,   163,   164,     0,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,     0,   174,   175,     0,   176,
     177,     0,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,     0,   190,   191,   192,   193,
     194,     0,     0,     0,   195,     0,     0,   196,     0,   197,
       0,     0,   198,     0,     0,     0,   199,   200,   201,     0,
       0,   202,     0,     0,     0,     0,   203,   204,     0,     0,
       0,     0,   205,   206,     0,   207,     0,     0,     0,   208,
       0,   209,   210,   211,   212,   213,     0,     0,     0,   214,
       0,     0,   215,   216,   217,     0,     0,     0,   218,     0,
     219,   220,     0,   221,   222,   223,     0,     0,   224,   225,
       0,   226,   227,   228,   229,   230,   231,     0,     0,   232,
     233,   234,   235,   236,     0,     0,   237,   238,     0,   239,
     240,   241,     0,     0,   242,     0,     0,     0,   243,   244,
       0,   245,     0,   246,     0,   247,   248,   249,   250,     0,
     251,     0,   252,     0,     0,     0,   253,   254,     0,   255,
     982,     0,   256,   257,     0,     0,     0,   258,   259,   260,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
       0,     0,     0,     0,   267,   268,     0,     0,     0,   269,
       0,     0,     0,   270,   271,     0,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,     0,     0,   277,     0,
       0,   278,   279,     0,     0,     0,     0,     0,   280,   281,
       0,   282,     0,   283,     0,   284,   285,     0,     0,     0,
       0,     0,     0,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,     0,   307,   308,
     309,   310,     0,   311,   312,     0,     0,     0,     0,   313,
     314,   315,   316,   317,   318,     0,     0,   319,   320,     0,
     321,     0,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,     0,   332,   333,     0,     0,   334,
     335,   336,   337,     0,     0,     0,   338,   339,     0,     0,
       0,   340,     0,   341,   342,   343,     0,   344,   345,   346,
       0,   347,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   348,   349,   350,     0,   351,   352,     0,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,     0,
     363,   364,   365,     0,   366,     0,   367,   368,   369,   370,
     371,     0,   372,   373,   374,     0,     0,   375,     0,     0,
       0,   376,   377,   378,   379,   380,     0,     0,   381,   382,
     383,   384,   385,     0,   386,   387,     0,   388,   389,   390,
       0,     0,   391,     0,   392,     0,   393,   394,     0,   395,
     396,   397,     0,   398,     0,     0,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,   412,   413,   414,   415,     0,     0,     0,
     416,     0,     0,     0,   417,     0,   418,   419,   420,   421,
       0,   422,   423,   424,   425,   426,     0,     0,     0,     0,
       0,   427,   428,   429,     0,   430,   431,     0,   432,     0,
       0,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,     0,     0,     0,     0,   441,   442,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,     0,   455,   456,   457,   458,   459,
       0,   983,   460,   461,     0,   462,   463,   464,   465,   466,
       0,     0,     0,     0,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,     0,     0,   477,   478,
     479,   480,     0,   481,   482,     0,   483,   484,     0,   485,
     486,     0,     0,   487,     0,     0,   488,     0,   489,     0,
     490,   491,   492,     0,     0,     0,     0,     0,     0,   493,
       0,     0,   494,     0,     0,     0,   495,   496,   497,   498,
     499,     0,     0,     0,     0,     0,     0,   500,   501,     0,
     502,   503,   504,     0,   137,   505,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
     204,     0,     0,     0,  2486,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,     0,   239,   240,   241,     0,     0,   242,     0,     0,
       0,   243,   244,     0,   245,     0,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,   253,
     254,     0,   255,     0,     0,   256,   257,     0,     0,     0,
     258,   259,   260,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,     0,   267,   268,     0,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,     0,   278,   279,   644,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,   338,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,     0,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,     0,     0,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,     0,     0,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,   134,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,   477,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,   137,   505,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,   145,     0,     0,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,  1398,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,     0,   197,     0,     0,   198,     0,
       0,     0,   199,   200,   201,     0,     0,   202,     0,     0,
       0,     0,   203,   204,     0,     0,     0,     0,   205,   206,
       0,   207,     0,     0,     0,   208,     0,   209,   210,   211,
     212,   213,     0,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,     0,   218,     0,   219,   220,     0,   221,
     222,   223,     0,     0,   224,   225,     0,   226,   227,   228,
     229,   230,   231,     0,     0,   232,   233,   234,   235,   236,
       0,     0,   237,   238,     0,   239,   240,   241,     0,     0,
     242,     0,     0,     0,   243,   244,     0,   245,     0,   246,
       0,   247,   248,   249,   250,     0,   251,     0,   252,     0,
       0,     0,   253,   254,     0,   255,     0,     0,   256,   257,
       0,     0,     0,   258,   259,   260,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,     0,     0,     0,     0,
     267,   268,     0,     0,     0,   269,     0,     0,     0,   270,
     271,     0,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,     0,     0,   277,     0,     0,   278,   279,   644,
       0,     0,     0,     0,   280,   281,     0,   282,     0,   283,
       0,   284,   285,     0,     0,     0,     0,     0,     0,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,     0,   307,   308,   309,   310,     0,   311,
     312,     0,     0,     0,     0,   313,   314,   315,   316,   317,
     318,     0,     0,   319,   320,     0,   321,     0,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
       0,   332,   333,     0,     0,   334,   335,   336,   337,     0,
       0,     0,   338,   339,     0,     0,     0,   340,     0,   341,
     342,   343,     0,   344,   345,   346,     0,   347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   348,   349,   350,
       0,   351,   352,     0,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,     0,   363,   364,   365,     0,
     366,     0,   367,   368,   369,   370,   371,     0,   372,   373,
     374,     0,     0,   375,     0,     0,     0,   376,   377,   378,
     379,   380,     0,     0,   381,   382,   383,   384,   385,     0,
     386,   387,     0,   388,   389,   390,     0,     0,   391,     0,
     392,     0,   393,   394,     0,   395,   396,   397,     0,   398,
       0,     0,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,     0,   412,
     413,   414,   415,     0,     0,     0,   416,     0,     0,     0,
     417,     0,   418,   419,   420,   421,     0,   422,   423,   424,
     425,   426,     0,     0,     0,     0,     0,   427,   428,   429,
       0,   430,   431,     0,   432,     0,     0,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,     0,     0,
       0,   441,   442,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,   450,   451,   452,     0,   453,   454,     0,
       0,   455,   456,   457,   458,   459,     0,   134,   460,   461,
       0,   462,   463,   464,   465,   466,     0,     0,     0,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,     0,     0,   477,   478,   479,   480,     0,   481,
     482,     0,   483,   484,     0,   485,   486,     0,     0,   487,
       0,     0,   488,     0,   489,     0,   490,   491,   492,     0,
       0,     0,     0,     0,     0,   493,     0,     0,   494,     0,
       0,     0,   495,   496,   497,   498,   499,     0,     0,     0,
       0,     0,     0,   500,   501,     0,   502,   503,   504,     0,
     137,   505,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,     0,     0,
     163,   164,     0,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,     0,   174,   175,     0,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,   195,     0,     0,   196,     0,   197,     0,
       0,   198,     0,     0,     0,   199,   200,   201,     0,     0,
     202,     0,     0,     0,     0,   203,   204,     0,     0,     0,
       0,   205,   206,     0,   207,     0,     0,     0,   208,     0,
     209,   210,   211,   212,   213,     0,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,     0,   218,     0,   219,
     220,     0,   221,   222,   223,     0,     0,   224,   225,     0,
     226,   227,   228,   229,   230,   231,     0,     0,   232,   233,
     234,   235,   236,     0,     0,   237,   238,     0,   239,   240,
     241,     0,     0,   242,     0,     0,     0,   243,   244,     0,
     245,     0,   246,     0,   247,   248,   249,   250,     0,   251,
       0,   252,     0,     0,     0,   253,   254,     0,   255,     0,
       0,   256,   257,     0,     0,     0,   258,   259,   260,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,     0,
       0,     0,     0,   267,   268,     0,     0,     0,   269,     0,
       0,     0,   270,   271,     0,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,     0,     0,   277,     0,     0,
     278,   279,   644,     0,     0,     0,     0,   280,   281,     0,
     282,     0,   283,     0,   284,   285,     0,     0,     0,     0,
       0,     0,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,     0,   307,   308,   309,
     310,     0,   311,   312,     0,     0,     0,     0,   313,   314,
     315,   316,   317,   318,     0,     0,   319,   320,     0,   321,
       0,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,     0,   332,   333,     0,     0,   334,   335,
     336,   337,     0,     0,     0,   338,   339,     0,     0,     0,
     340,     0,   341,   342,   343,     0,   344,   345,   346,     0,
     347,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     348,   349,   350,     0,   351,   352,     0,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,     0,   363,
     364,   365,     0,   366,     0,   367,   368,   369,   370,   371,
       0,   372,   373,   374,     0,     0,   375,     0,     0,     0,
     376,   377,   378,   379,   380,     0,     0,   381,   382,   383,
     384,   385,     0,   386,   387,     0,   388,   389,   390,     0,
       0,   391,     0,   392,     0,   393,   394,     0,   395,   396,
     397,     0,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,   412,   413,   414,   415,     0,     0,     0,   416,
       0,     0,     0,   417,     0,   418,   419,   420,   421,     0,
     422,   423,   424,   425,   426,     0,     0,     0,     0,     0,
     427,   428,   429,     0,   430,   431,     0,   432,     0,     0,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,     0,     0,     0,   441,   442,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,     0,   455,   456,   457,   458,   459,     0,
     134,   460,   461,     0,   462,   463,   464,   465,   466,     0,
       0,     0,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,     0,     0,   477,   478,   479,
     480,     0,   481,   482,     0,   483,   484,     0,   485,   486,
       0,     0,   487,     0,     0,   488,     0,   489,     0,   490,
     491,   492,     0,     0,     0,     0,     0,     0,   493,     0,
       0,   494,     0,     0,     0,   495,   496,   497,   498,   499,
       0,     0,     0,     0,     0,     0,   500,   501,     0,   502,
     503,   504,     0,   137,   505,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,  2939,     0,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,     0,   190,   191,
     192,   193,   194,     0,     0,     0,   195,     0,     0,   196,
       0,   197,     0,     0,   198,     0,     0,     0,   199,   200,
     201,     0,     0,   202,     0,     0,     0,     0,   203,   204,
       0,     0,     0,     0,   205,   206,     0,   207,     0,     0,
       0,   208,     0,   209,   210,   211,   212,   213,     0,     0,
       0,   214,     0,     0,   215,   216,   217,     0,     0,     0,
     218,     0,   219,   220,     0,   221,   222,   223,     0,     0,
     224,   225,     0,   226,   227,   228,   229,   230,   231,     0,
       0,   232,   233,   234,   235,   236,     0,     0,   237,   238,
       0,   239,   240,   241,     0,     0,   242,     0,     0,     0,
     243,   244,     0,   245,     0,   246,     0,   247,   248,   249,
     250,     0,   251,     0,   252,     0,     0,     0,   253,   254,
       0,   255,     0,     0,   256,   257,     0,     0,     0,   258,
     259,   260,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,     0,     0,     0,     0,   267,   268,     0,     0,
       0,   269,     0,     0,     0,   270,   271,     0,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,     0,     0,
     277,     0,     0,   278,   279,     0,     0,     0,     0,     0,
     280,   281,     0,   282,     0,   283,     0,   284,   285,     0,
       0,     0,     0,     0,     0,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,     0,
     307,   308,   309,   310,     0,   311,   312,     0,     0,     0,
       0,   313,   314,   315,   316,   317,   318,     0,     0,   319,
     320,     0,   321,     0,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,     0,   332,   333,     0,
       0,   334,   335,   336,   337,     0,     0,     0,   338,   339,
       0,     0,     0,   340,     0,   341,   342,   343,     0,   344,
     345,   346,     0,   347,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   348,   349,   350,     0,   351,   352,     0,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,     0,   363,   364,   365,     0,   366,     0,   367,   368,
     369,   370,   371,     0,   372,   373,   374,     0,     0,   375,
       0,     0,     0,   376,   377,   378,   379,   380,     0,     0,
     381,   382,   383,   384,   385,     0,   386,   387,     0,   388,
     389,   390,     0,     0,   391,     0,   392,     0,   393,   394,
       0,   395,   396,   397,     0,   398,     0,     0,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,     0,   412,   413,   414,   415,     0,
       0,     0,   416,     0,     0,     0,   417,     0,   418,   419,
     420,   421,     0,   422,   423,   424,   425,   426,     0,     0,
       0,     0,     0,   427,   428,   429,     0,   430,   431,     0,
     432,     0,     0,   433,     0,     0,   434,   435,   436,   437,
     438,   439,   440,     0,     0,     0,     0,   441,   442,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,     0,   455,   456,   457,
     458,   459,     0,   134,   460,   461,     0,   462,   463,   464,
     465,   466,     0,     0,     0,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,     0,     0,
     477,   478,   479,   480,     0,   481,   482,     0,   483,   484,
       0,   485,   486,     0,     0,   487,     0,     0,   488,     0,
     489,     0,   490,   491,   492,     0,     0,     0,     0,     0,
       0,   493,     0,     0,   494,     0,     0,     0,   495,   496,
     497,   498,   499,     0,     0,     0,     0,     0,     0,   500,
     501,     0,   502,   503,   504,     0,   137,   505,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
       0,   190,   191,   192,   193,   194,  4507,     0,     0,   195,
       0,     0,   196,     0,   197,     0,     0,   198,     0,     0,
       0,   199,   200,   201,     0,     0,   202,     0,     0,     0,
       0,   203,   204,     0,     0,     0,     0,   205,   206,     0,
     207,     0,     0,     0,   208,     0,   209,   210,   211,   212,
     213,     0,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,     0,   218,     0,   219,   220,     0,   221,   222,
     223,     0,     0,   224,   225,     0,   226,   227,   228,   229,
     230,   231,     0,  4508,   232,   233,   234,   235,   236,     0,
       0,   237,   238,     0,   239,   240,   241,     0,     0,   242,
       0,     0,     0,   243,   244,     0,   245,     0,   246,     0,
     247,   248,   249,   250,     0,   251,     0,   252,     0,     0,
       0,   253,   254,     0,   255,     0,     0,   256,   257,     0,
       0,     0,   258,   259,   260,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,     0,     0,     0,     0,   267,
     268,     0,     0,     0,   269,     0,     0,     0,   270,   271,
       0,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,     0,     0,   277,     0,     0,   278,   279,     0,     0,
       0,     0,     0,   280,   281,     0,   282,     0,   283,     0,
     284,   285,     0,     0,     0,     0,     0,     0,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,     0,   307,   308,   309,   310,     0,   311,   312,
       0,     0,     0,     0,   313,   314,   315,   316,   317,   318,
       0,     0,   319,   320,     0,   321,     0,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,     0,
     332,   333,     0,     0,   334,   335,   336,   337,     0,     0,
       0,   338,   339,     0,     0,     0,   340,     0,   341,   342,
     343,     0,   344,   345,   346,     0,   347,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,   350,     0,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,     0,   363,   364,   365,     0,   366,
       0,   367,   368,   369,   370,   371,     0,   372,   373,   374,
       0,     0,   375,     0,     0,     0,   376,   377,   378,   379,
     380,     0,     0,   381,   382,   383,   384,   385,     0,   386,
     387,     0,   388,   389,   390,     0,     0,   391,     0,   392,
       0,   393,   394,     0,   395,   396,   397,     0,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,   412,   413,
     414,   415,     0,     0,     0,   416,     0,     0,     0,   417,
       0,   418,   419,   420,   421,     0,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,   427,   428,   429,     0,
     430,   431,     0,   432,     0,     0,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,     0,     0,     0,
     441,   442,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,     0,
     455,   456,   457,   458,   459,     0,     0,   460,   461,     0,
     462,   463,   464,   465,   466,     0,     0,     0,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,     0,     0,   477,   478,   479,   480,     0,   481,   482,
       0,   483,   484,     0,   485,   486,     0,     0,   487,     0,
       0,   488,     0,   489,     0,   490,   491,   492,     0,     0,
       0,     0,     0,     0,   493,     0,     0,   494,     0,     0,
       0,   495,   496,   497,   498,   499,     0,     0,     0,     0,
       0,     0,   500,   501,     0,   502,   503,   504,     0,   137,
     505,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,     0,   197,     0,     0,
     198,     0,     0,     0,   199,   200,   201,     0,     0,   202,
       0,     0,     0,     0,   203,   204,     0,     0,     0,     0,
     205,   206,     0,   207,     0,     0,     0,   208,     0,   209,
     210,   211,   212,   213,     0,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,     0,   218,     0,   219,   220,
       0,   221,   222,   223,     0,     0,   224,   225,     0,   226,
     227,   228,   229,   230,   231,     0,     0,   232,   233,   234,
     235,   236,     0,     0,   237,   238,     0,   239,   240,   241,
       0,     0,   242,     0,     0,     0,   243,   244,     0,   245,
       0,   246,     0,   247,   248,   249,   250,     0,   251,     0,
     252,     0,     0,     0,   253,   254,     0,   255,     0,     0,
     256,   257,     0,     0,     0,   258,   259,   260,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,     0,     0,
       0,     0,   267,   268,     0,     0,     0,   269,     0,     0,
       0,   270,   271,     0,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,     0,     0,   277,     0,     0,   278,
     279,     0,     0,     0,     0,     0,   280,   281,     0,   282,
       0,   283,     0,   284,   285,     0,     0,     0,     0,     0,
       0,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,     0,   307,   308,   309,   310,
       0,   311,   312,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,     0,     0,   319,   320,     0,   321,     0,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,     0,   332,   333,     0,     0,   334,   335,   336,
     337,     0,     0,     0,   338,   339,     0,     0,     0,   340,
       0,   341,   342,   343,     0,   344,   345,   346,     0,   347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   348,
     349,   350,     0,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,     0,   363,   364,
     365,     0,   366,     0,   367,   368,   369,   370,   371,     0,
     372,   373,   374,     0,     0,   375,     0,     0,     0,   376,
     377,   378,   379,   380,     0,     0,   381,   382,   383,   384,
     385,     0,   386,   387,     0,   388,   389,   390,     0,     0,
     391,     0,   392,     0,   393,   394,     0,   395,   396,   397,
       0,   398,     0,     0,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
       0,   412,   413,   414,   415,     0,     0,     0,   416,     0,
       0,     0,   417,     0,   418,   419,   420,   421,     0,   422,
     423,   424,   425,   426,     0,     0,     0,   590,     0,   427,
     428,   429,     0,   430,   431,     0,   432,     0,     0,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
       0,     0,     0,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,     0,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,   462,   463,   464,   465,   466,     0,     0,
       0,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,     0,     0,   477,   478,   479,   480,
       0,   481,   482,     0,   483,   484,     0,   485,   486,     0,
       0,   487,     0,     0,   488,     0,   489,     0,   490,   491,
     492,     0,     0,     0,     0,     0,     0,   493,     0,     0,
     494,     0,     0,     0,   495,   496,   497,   498,   499,     0,
       0,     0,     0,     0,     0,   500,   501,     0,   502,   503,
     504,     0,   137,   505,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,   202,     0,     0,     0,     0,   203,   204,     0,
       0,     0,     0,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,     0,     0,
     232,   233,   234,   235,   236,     0,     0,   237,   238,     0,
     239,   240,   241,     0,     0,   242,     0,     0,     0,   243,
     244,  1084,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   251,     0,   252,     0,     0,     0,   253,   254,     0,
     255,     0,     0,   256,   257,     0,     0,     0,   258,   259,
     260,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,   268,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,     0,   278,   279,     0,     0,     0,     0,     0,   280,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
       0,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,     0,   332,   333,     0,     0,
     334,   335,   336,   337,     0,     0,     0,   338,   339,     0,
       0,     0,   340,     0,   341,   342,   343,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,     0,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,     0,     0,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,     0,     0,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,   462,   463,   464,   465,
     466,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,     0,     0,   477,
     478,   479,   480,     0,   481,   482,     0,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,   137,   505,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,     0,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,     0,
     190,   191,   192,   193,   194,     0,     0,     0,   195,     0,
       0,   196,     0,   197,     0,     0,   198,     0,     0,     0,
     199,   200,   201,     0,     0,   202,     0,     0,     0,     0,
     203,   204,     0,     0,     0,   910,   205,   206,     0,   207,
       0,     0,     0,   208,     0,   209,   210,   211,   212,   213,
       0,     0,     0,   214,     0,     0,   215,   216,   217,     0,
       0,     0,   218,     0,   219,   220,     0,   221,   222,   223,
       0,     0,   224,   225,     0,   226,   227,   228,   229,   230,
     231,     0,     0,   232,   233,   234,   235,   236,     0,     0,
     237,   238,     0,   239,   240,   241,     0,     0,   242,     0,
       0,     0,   243,   244,     0,   245,     0,   246,     0,   247,
     248,   249,   250,     0,   251,     0,   252,     0,     0,     0,
     253,   254,     0,   255,     0,     0,   256,   257,     0,     0,
       0,   258,   259,   260,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,     0,     0,     0,     0,   267,   268,
       0,     0,     0,   269,     0,     0,     0,   270,   271,     0,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
       0,     0,   277,     0,     0,   278,   279,     0,     0,     0,
       0,     0,   280,   281,     0,   282,     0,   283,     0,   284,
     285,     0,     0,     0,     0,     0,     0,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,     0,   307,   308,   309,   310,     0,   311,   312,     0,
       0,     0,     0,   313,   314,   315,   316,   317,   318,     0,
       0,   319,   320,     0,   321,     0,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,     0,   332,
     333,     0,     0,   334,   335,   336,   337,     0,     0,     0,
     338,   339,     0,     0,     0,   340,     0,   341,   342,   343,
       0,   344,   345,   346,     0,   347,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   348,   349,   350,     0,   351,
     352,     0,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,     0,   363,   364,   365,     0,   366,     0,
     367,   368,   369,   370,   371,     0,   372,   373,   374,     0,
       0,   375,     0,     0,     0,   376,   377,   378,   379,   380,
       0,     0,   381,   382,   383,   384,   385,     0,   386,   387,
       0,   388,   389,   390,     0,     0,   391,     0,   392,     0,
     393,   394,     0,   395,   396,   397,     0,   398,     0,     0,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,   412,   413,   414,
     415,     0,     0,     0,   416,     0,     0,     0,   417,     0,
     418,   419,   420,   421,     0,   422,   423,   424,   425,   426,
       0,     0,     0,     0,     0,   427,   428,   429,     0,   430,
     431,     0,   432,     0,     0,   433,     0,     0,   434,   435,
     436,   437,   438,   439,   440,     0,     0,     0,     0,   441,
     442,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,     0,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,   462,
     463,   464,   465,   466,     0,     0,     0,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
       0,     0,   477,   478,   479,   480,     0,   481,   482,     0,
     483,   484,     0,   485,   486,     0,     0,   487,     0,     0,
     488,     0,   489,     0,   490,   491,   492,     0,     0,     0,
       0,     0,     0,   493,     0,     0,   494,     0,     0,     0,
     495,   496,   497,   498,   499,     0,     0,     0,     0,     0,
       0,   500,   501,     0,   502,   503,   504,     0,   137,   505,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,     0,   174,   175,     0,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,   195,     0,     0,   196,     0,   197,     0,     0,   198,
       0,     0,     0,   199,   200,   201,     0,     0,   202,     0,
       0,     0,     0,   203,   204,     0,     0,     0,   910,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,     0,   218,     0,   219,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,   231,     0,     0,   232,   233,   234,   235,
     236,     0,     0,   237,   238,     0,   239,   240,   241,     0,
       0,   242,     0,     0,     0,   243,   244,     0,   245,     0,
     246,     0,   247,   248,   249,   250,     0,   251,     0,   252,
       0,     0,     0,   253,   254,     0,   255,     0,     0,   256,
     257,     0,     0,     0,   258,   259,   260,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
       0,   267,   268,     0,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,     0,     0,   277,     0,     0,   278,   279,
       0,     0,     0,     0,     0,   280,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,     0,     0,     0,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,     0,   307,   308,   309,   310,     0,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     317,   318,     0,     0,   319,   320,     0,   321,     0,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,     0,   332,   333,     0,     0,   334,   335,   336,   337,
       0,     0,     0,   338,   339,     0,     0,     0,   340,     0,
     341,   342,   343,     0,   344,   345,   346,     0,   347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
     350,     0,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,     0,   363,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   372,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,   387,     0,   388,   389,   390,     0,     0,   391,
       0,   392,     0,   393,   394,     0,   395,   396,   397,     0,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,     0,
     412,   413,   414,   415,     0,     0,     0,   416,     0,     0,
       0,   417,     0,   418,   419,   420,   421,     0,   422,   423,
     424,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,     0,
       0,     0,   441,   442,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,   462,   463,   464,   465,   466,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
    1939,   476,     0,     0,     0,   477,   478,   479,   480,     0,
     481,   482,     0,   483,   484,     0,   485,   486,     0,     0,
     487,     0,     0,   488,     0,   489,     0,   490,   491,   492,
       0,     0,     0,     0,     0,     0,   493,     0,     0,   494,
       0,     0,     0,   495,   496,   497,   498,   499,     0,     0,
       0,     0,     0,     0,   500,   501,     0,   502,   503,   504,
       0,   137,   505,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,     0,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,     0,     0,
       0,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,   160,   161,     0,     0,   162,     0,
       0,   163,   164,     0,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,     0,   174,   175,     0,   176,
     177,     0,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,     0,   190,   191,   192,   193,
     194,     0,     0,     0,   195,     0,     0,   196,     0,   197,
       0,     0,   198,     0,     0,     0,   199,   200,   201,     0,
       0,   202,     0,     0,     0,     0,   203,   204,     0,     0,
       0,  2136,   205,   206,     0,   207,     0,     0,     0,   208,
       0,   209,   210,   211,   212,   213,     0,     0,     0,   214,
       0,     0,   215,   216,   217,     0,     0,     0,   218,     0,
     219,   220,     0,   221,   222,   223,     0,     0,   224,   225,
       0,   226,   227,   228,   229,   230,   231,     0,     0,   232,
     233,   234,   235,   236,     0,     0,   237,   238,     0,   239,
     240,   241,     0,     0,   242,     0,     0,     0,   243,   244,
       0,   245,     0,   246,     0,   247,   248,   249,   250,     0,
     251,     0,   252,     0,     0,     0,   253,   254,     0,   255,
       0,     0,   256,   257,     0,     0,     0,   258,   259,   260,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
       0,     0,     0,     0,   267,   268,     0,     0,     0,   269,
       0,     0,     0,   270,   271,     0,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,     0,     0,   277,     0,
       0,   278,   279,     0,     0,     0,     0,     0,   280,   281,
       0,   282,     0,   283,     0,   284,   285,     0,     0,     0,
       0,     0,     0,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,     0,   307,   308,
     309,   310,     0,   311,   312,     0,     0,     0,     0,   313,
     314,   315,   316,   317,   318,     0,     0,   319,   320,     0,
     321,     0,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,     0,   332,   333,     0,     0,   334,
     335,   336,   337,     0,     0,     0,   338,   339,     0,     0,
       0,   340,     0,   341,   342,   343,     0,   344,   345,   346,
       0,   347,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   348,   349,   350,     0,   351,   352,     0,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,     0,
     363,   364,   365,     0,   366,     0,   367,   368,   369,   370,
     371,     0,   372,   373,   374,     0,     0,   375,     0,     0,
       0,   376,   377,   378,   379,   380,     0,     0,   381,   382,
     383,   384,   385,     0,   386,   387,     0,   388,   389,   390,
       0,     0,   391,     0,   392,     0,   393,   394,     0,   395,
     396,   397,     0,   398,     0,     0,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,   412,   413,   414,   415,     0,     0,     0,
     416,     0,     0,     0,   417,     0,   418,   419,   420,   421,
       0,   422,   423,   424,   425,   426,     0,     0,     0,     0,
       0,   427,   428,   429,     0,   430,   431,     0,   432,     0,
       0,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,     0,     0,     0,     0,   441,   442,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,     0,   455,   456,   457,   458,   459,
       0,     0,   460,   461,     0,   462,   463,   464,   465,   466,
       0,     0,     0,     0,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,     0,     0,   477,   478,
     479,   480,     0,   481,   482,     0,   483,   484,     0,   485,
     486,     0,     0,   487,     0,     0,   488,     0,   489,     0,
     490,   491,   492,     0,     0,     0,     0,     0,     0,   493,
       0,     0,   494,     0,     0,     0,   495,   496,   497,   498,
     499,     0,     0,     0,     0,     0,     0,   500,   501,     0,
     502,   503,   504,     0,   137,   505,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
     204,     0,     0,     0,  3031,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,   219,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,   231,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,     0,   239,   240,   241,     0,     0,   242,     0,     0,
       0,   243,   244,     0,   245,     0,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,   253,
     254,     0,   255,     0,     0,   256,   257,     0,     0,     0,
     258,   259,   260,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,     0,   267,   268,     0,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,     0,
       0,   277,     0,     0,   278,   279,     0,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,     0,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,   338,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,   346,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   350,     0,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,     0,   363,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,   387,     0,
     388,   389,   390,     0,     0,   391,     0,   392,     0,   393,
     394,     0,   395,   396,   397,     0,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,     0,   412,   413,   414,   415,
       0,     0,     0,   416,     0,     0,     0,   417,     0,   418,
     419,   420,   421,     0,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,     0,     0,     0,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,   477,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,   485,   486,     0,     0,   487,     0,     0,   488,
       0,   489,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,     0,     0,     0,     0,
     500,   501,     0,   502,   503,   504,     0,   137,   505,   138,
     139,   140,   141,   142,  3039,     0,   143,     0,     0,     0,
     144,   145,     0,     0,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,     0,   197,     0,     0,   198,     0,
       0,     0,   199,   200,   201,     0,     0,   202,     0,     0,
       0,     0,   203,   204,     0,     0,     0,     0,   205,   206,
       0,   207,     0,     0,     0,   208,     0,   209,   210,   211,
     212,   213,     0,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,     0,   218,     0,   219,   220,     0,   221,
     222,   223,     0,     0,   224,   225,     0,   226,   227,   228,
     229,   230,   231,     0,     0,   232,   233,   234,   235,   236,
       0,     0,   237,   238,     0,   239,   240,   241,     0,     0,
     242,     0,     0,     0,   243,   244,     0,   245,     0,   246,
       0,   247,   248,   249,   250,     0,   251,     0,   252,     0,
       0,     0,   253,   254,     0,   255,     0,     0,   256,   257,
       0,     0,     0,   258,   259,   260,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,     0,     0,     0,     0,
     267,   268,     0,     0,     0,   269,     0,     0,     0,   270,
     271,     0,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,     0,     0,   277,     0,     0,   278,   279,     0,
       0,     0,     0,     0,   280,   281,     0,   282,     0,   283,
       0,   284,   285,     0,     0,     0,     0,     0,     0,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,     0,   307,   308,   309,   310,     0,   311,
     312,     0,     0,     0,     0,   313,   314,   315,   316,   317,
     318,     0,     0,   319,   320,     0,   321,     0,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
       0,   332,   333,     0,     0,   334,   335,   336,   337,     0,
       0,     0,   338,   339,     0,     0,     0,   340,     0,   341,
     342,   343,     0,   344,   345,   346,     0,   347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   348,   349,   350,
       0,   351,   352,     0,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,     0,   363,   364,   365,     0,
     366,     0,   367,   368,   369,   370,   371,     0,   372,   373,
     374,     0,     0,   375,     0,     0,     0,   376,   377,   378,
     379,   380,     0,     0,   381,   382,   383,   384,   385,     0,
     386,   387,     0,   388,   389,   390,     0,     0,   391,     0,
     392,     0,   393,   394,     0,   395,   396,   397,     0,   398,
       0,     0,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,     0,   412,
     413,   414,   415,     0,     0,     0,   416,     0,     0,     0,
     417,     0,   418,   419,   420,   421,     0,   422,   423,   424,
     425,   426,     0,     0,     0,     0,     0,   427,   428,   429,
       0,   430,   431,     0,   432,     0,     0,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,     0,     0,
       0,   441,   442,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,   450,   451,   452,     0,   453,   454,     0,
       0,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,   462,   463,   464,   465,   466,     0,     0,     0,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,     0,     0,   477,   478,   479,   480,     0,   481,
     482,     0,   483,   484,     0,   485,   486,     0,     0,   487,
       0,     0,   488,     0,   489,     0,   490,   491,   492,     0,
       0,     0,     0,     0,     0,   493,     0,     0,   494,     0,
       0,     0,   495,   496,   497,   498,   499,     0,     0,     0,
       0,     0,     0,   500,   501,     0,   502,   503,   504,     0,
     137,   505,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,     0,     0,
     163,   164,     0,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,     0,   174,   175,     0,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,   195,     0,     0,   196,     0,   197,     0,
       0,   198,     0,     0,     0,   199,   200,   201,     0,     0,
     202,     0,     0,     0,     0,   203,   204,     0,     0,     0,
    3063,   205,   206,     0,   207,     0,     0,     0,   208,     0,
     209,   210,   211,   212,   213,     0,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,     0,   218,     0,   219,
     220,     0,   221,   222,   223,     0,     0,   224,   225,     0,
     226,   227,   228,   229,   230,   231,     0,     0,   232,   233,
     234,   235,   236,     0,     0,   237,   238,     0,   239,   240,
     241,     0,     0,   242,     0,     0,     0,   243,   244,     0,
     245,     0,   246,     0,   247,   248,   249,   250,     0,   251,
       0,   252,     0,     0,     0,   253,   254,     0,   255,     0,
       0,   256,   257,     0,     0,     0,   258,   259,   260,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,     0,
       0,     0,     0,   267,   268,     0,     0,     0,   269,     0,
       0,     0,   270,   271,     0,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,     0,     0,   277,     0,     0,
     278,   279,     0,     0,     0,     0,     0,   280,   281,     0,
     282,     0,   283,     0,   284,   285,     0,     0,     0,     0,
       0,     0,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,     0,   307,   308,   309,
     310,     0,   311,   312,     0,     0,     0,     0,   313,   314,
     315,   316,   317,   318,     0,     0,   319,   320,     0,   321,
       0,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,     0,   332,   333,     0,     0,   334,   335,
     336,   337,     0,     0,     0,   338,   339,     0,     0,     0,
     340,     0,   341,   342,   343,     0,   344,   345,   346,     0,
     347,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     348,   349,   350,     0,   351,   352,     0,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,     0,   363,
     364,   365,     0,   366,     0,   367,   368,   369,   370,   371,
       0,   372,   373,   374,     0,     0,   375,     0,     0,     0,
     376,   377,   378,   379,   380,     0,     0,   381,   382,   383,
     384,   385,     0,   386,   387,     0,   388,   389,   390,     0,
       0,   391,     0,   392,     0,   393,   394,     0,   395,   396,
     397,     0,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,   412,   413,   414,   415,     0,     0,     0,   416,
       0,     0,     0,   417,     0,   418,   419,   420,   421,     0,
     422,   423,   424,   425,   426,     0,     0,     0,     0,     0,
     427,   428,   429,     0,   430,   431,     0,   432,     0,     0,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,     0,     0,     0,   441,   442,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,     0,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,   462,   463,   464,   465,   466,     0,
       0,     0,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,     0,     0,   477,   478,   479,
     480,     0,   481,   482,     0,   483,   484,     0,   485,   486,
       0,     0,   487,     0,     0,   488,     0,   489,     0,   490,
     491,   492,     0,     0,     0,     0,     0,     0,   493,     0,
       0,   494,     0,     0,     0,   495,   496,   497,   498,   499,
       0,     0,     0,     0,     0,     0,   500,   501,     0,   502,
     503,   504,     0,   137,   505,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,     0,   190,   191,
     192,   193,   194,     0,     0,     0,   195,     0,     0,   196,
       0,   197,     0,     0,   198,     0,     0,     0,   199,   200,
     201,     0,     0,   202,     0,     0,     0,     0,   203,   204,
       0,     0,     0,     0,   205,   206,     0,   207,     0,     0,
       0,   208,     0,   209,   210,   211,   212,   213,     0,     0,
       0,   214,     0,     0,   215,   216,   217,     0,     0,     0,
     218,     0,   219,   220,     0,   221,   222,   223,     0,     0,
     224,   225,     0,   226,   227,   228,   229,   230,   231,     0,
       0,   232,   233,   234,   235,   236,     0,     0,   237,   238,
       0,   239,   240,   241,     0,     0,   242,     0,     0,     0,
     243,   244,     0,   245,     0,   246,     0,   247,   248,   249,
     250,     0,   251,     0,   252,     0,     0,     0,   253,   254,
       0,   255,     0,     0,   256,   257,     0,     0,     0,   258,
     259,   260,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,     0,     0,     0,     0,   267,   268,     0,     0,
       0,   269,     0,     0,     0,   270,   271,     0,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,     0,     0,
     277,     0,     0,   278,   279,     0,     0,     0,     0,     0,
     280,   281,     0,   282,     0,   283,     0,   284,   285,     0,
       0,     0,     0,     0,     0,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,     0,
     307,   308,   309,   310,     0,   311,   312,     0,     0,     0,
       0,   313,   314,   315,   316,   317,   318,     0,     0,   319,
     320,     0,   321,     0,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,     0,   332,   333,     0,
       0,   334,   335,   336,   337,     0,     0,     0,   338,   339,
       0,     0,     0,   340,     0,   341,   342,   343,     0,   344,
     345,   346,     0,   347,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   348,   349,   350,     0,   351,   352,     0,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,     0,   363,   364,   365,  3135,   366,     0,   367,   368,
     369,   370,   371,     0,   372,   373,   374,     0,     0,   375,
       0,     0,     0,   376,   377,   378,   379,   380,     0,     0,
     381,   382,   383,   384,   385,     0,   386,   387,     0,   388,
     389,   390,     0,     0,   391,     0,   392,     0,   393,   394,
       0,   395,   396,   397,     0,   398,     0,     0,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,     0,   412,   413,   414,   415,     0,
       0,     0,   416,     0,     0,     0,   417,     0,   418,   419,
     420,   421,     0,   422,   423,   424,   425,   426,     0,     0,
       0,     0,     0,   427,   428,   429,     0,   430,   431,     0,
     432,     0,     0,   433,     0,     0,   434,   435,   436,   437,
     438,   439,   440,     0,     0,     0,     0,   441,   442,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,     0,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,   462,   463,   464,
     465,   466,     0,     0,     0,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,     0,     0,
     477,   478,   479,   480,     0,   481,   482,     0,   483,   484,
       0,   485,   486,     0,     0,   487,     0,     0,   488,     0,
     489,     0,   490,   491,   492,     0,     0,     0,     0,     0,
       0,   493,     0,     0,   494,     0,     0,     0,   495,   496,
     497,   498,   499,     0,     0,     0,     0,     0,     0,   500,
     501,     0,   502,   503,   504,     0,   137,   505,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
       0,   190,   191,   192,   193,   194,     0,     0,     0,   195,
       0,     0,   196,     0,   197,     0,     0,   198,     0,     0,
       0,   199,   200,   201,     0,     0,   202,     0,     0,     0,
       0,   203,   204,     0,     0,     0,     0,   205,   206,     0,
     207,     0,     0,     0,   208,     0,   209,   210,   211,   212,
     213,     0,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,     0,   218,     0,   219,   220,     0,   221,   222,
     223,     0,     0,   224,   225,     0,   226,   227,   228,   229,
     230,   231,     0,     0,   232,   233,   234,   235,   236,     0,
       0,   237,   238,     0,   239,   240,   241,     0,     0,   242,
       0,     0,     0,   243,   244,     0,   245,     0,   246,     0,
     247,   248,   249,   250,     0,   251,     0,   252,     0,     0,
       0,   253,   254,     0,   255,     0,     0,   256,   257,     0,
       0,     0,   258,   259,   260,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,     0,     0,     0,     0,   267,
     268,     0,     0,     0,   269,     0,     0,     0,   270,   271,
       0,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,     0,     0,   277,     0,     0,   278,   279,     0,     0,
       0,     0,     0,   280,   281,     0,   282,     0,   283,     0,
     284,   285,     0,     0,     0,     0,     0,     0,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,     0,   307,   308,   309,   310,     0,   311,   312,
       0,     0,     0,     0,   313,   314,   315,   316,   317,   318,
       0,     0,   319,   320,     0,   321,     0,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,     0,
     332,   333,     0,     0,   334,   335,   336,   337,     0,     0,
       0,   338,   339,     0,     0,     0,   340,     0,   341,   342,
     343,     0,   344,   345,   346,     0,   347,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,   350,     0,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,     0,   363,   364,   365,     0,   366,
       0,   367,   368,   369,   370,   371,     0,   372,   373,   374,
       0,     0,   375,     0,     0,     0,   376,   377,   378,   379,
     380,     0,     0,   381,   382,   383,   384,   385,     0,   386,
     387,     0,   388,   389,   390,     0,     0,   391,     0,   392,
       0,   393,   394,     0,   395,   396,   397,     0,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,   412,   413,
     414,   415,     0,     0,     0,   416,     0,     0,     0,   417,
       0,   418,   419,   420,   421,     0,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,   427,   428,   429,     0,
     430,   431,     0,   432,     0,     0,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,     0,     0,     0,
     441,   442,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,     0,
     455,   456,   457,   458,   459,     0,   134,   460,   461,     0,
     462,   463,   464,   465,   466,     0,     0,     0,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,     0,     0,   477,   478,   479,   480,     0,   481,   482,
       0,   483,   484,     0,   485,   486,     0,     0,   487,     0,
       0,   488,     0,   489,     0,   490,   491,   492,     0,     0,
       0,     0,     0,     0,   493,     0,     0,   494,     0,     0,
       0,   495,   496,   497,   498,   499,     0,     0,     0,     0,
       0,     0,   500,   501,     0,   502,   503,   504,     0,   137,
     505,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,     0,   197,     0,     0,
     198,     0,     0,     0,   199,   200,   201,     0,     0,   202,
       0,     0,     0,     0,   203,   204,     0,     0,     0,     0,
     205,   206,     0,   207,     0,     0,     0,   208,     0,   209,
     210,   211,   212,   213,     0,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,     0,   218,     0,   219,   220,
       0,   221,   222,   223,     0,     0,   224,   225,     0,   226,
     227,   228,   229,   230,   231,     0,     0,   232,   233,   234,
     235,   236,     0,     0,   237,   238,     0,   239,   240,   241,
       0,     0,   242,     0,     0,     0,   243,   244,     0,   245,
       0,   246,     0,   247,   248,   249,   250,     0,   251,     0,
     252,     0,     0,     0,   253,   254,     0,   255,     0,     0,
     256,   257,     0,     0,     0,   258,   259,   260,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,     0,     0,
       0,     0,   267,   268,     0,     0,     0,   269,     0,     0,
       0,   270,   271,     0,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,     0,     0,   277,     0,     0,   278,
     279,     0,     0,     0,     0,     0,   280,   281,     0,   282,
       0,   283,     0,   284,   285,     0,     0,     0,     0,     0,
       0,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,     0,   307,   308,   309,   310,
       0,   311,   312,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,     0,     0,   319,   320,     0,   321,     0,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,     0,   332,   333,     0,     0,   334,   335,   336,
     337,     0,     0,     0,   338,   339,     0,     0,     0,   340,
       0,   341,   342,   343,     0,   344,   345,   346,     0,   347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   348,
     349,   350,     0,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,     0,   363,   364,
     365,     0,   366,     0,   367,   368,   369,   370,   371,     0,
     372,   373,   374,     0,     0,   375,     0,     0,     0,   376,
     377,   378,   379,   380,     0,     0,   381,   382,   383,   384,
     385,     0,   386,   387,     0,   388,   389,   390,     0,     0,
     391,     0,   392,     0,   393,   394,     0,   395,   396,   397,
       0,   398,     0,     0,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
       0,   412,   413,   414,   415,     0,     0,     0,   416,     0,
       0,     0,   417,     0,   418,   419,   420,   421,     0,   422,
     423,   424,   425,   426,     0,     0,     0,     0,     0,   427,
     428,   429,     0,   430,   431,     0,   432,     0,     0,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
       0,     0,     0,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,     0,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,   462,   463,   464,   465,   466,     0,     0,
       0,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,     0,     0,   477,   478,   479,   480,
       0,   481,   482,     0,   483,   484,     0,   485,   486,     0,
       0,   487,     0,     0,   488,     0,   489,     0,   490,   491,
     492,     0,     0,     0,     0,     0,     0,   493,     0,     0,
     494,     0,     0,     0,   495,   496,   497,   498,   499,     0,
       0,     0,     0,     0,     0,   500,   501,     0,   502,   503,
     504,     0,   137,   505,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,   202,     0,     0,     0,     0,   203,   204,     0,
       0,     0,     0,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,   219,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,   231,     0,     0,
     232,   233,   234,   235,   236,     0,     0,   237,   238,     0,
     239,  1850,   241,     0,     0,   242,     0,     0,     0,   243,
     244,     0,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   251,     0,   252,     0,     0,     0,   253,   254,     0,
     255,     0,     0,   256,   257,     0,     0,     0,   258,   259,
     260,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,   268,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,     0,     0,   277,
       0,     0,   278,   279,     0,     0,     0,     0,     0,   280,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
       0,     0,     0,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,     0,   332,   333,     0,     0,
     334,  1851,   336,   337,     0,     0,     0,   338,   339,     0,
       0,     0,   340,     0,   341,   342,   343,     0,   344,   345,
     346,     0,   347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,   350,     0,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
       0,   363,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,   387,     0,   388,   389,
     390,     0,     0,   391,     0,   392,     0,   393,   394,     0,
     395,   396,   397,     0,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,     0,   412,   413,   414,   415,     0,     0,
       0,   416,     0,     0,     0,   417,     0,   418,   419,   420,
     421,     0,   422,   423,   424,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,     0,     0,     0,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,   462,   463,   464,   465,
     466,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,     0,     0,   477,
     478,   479,   480,     0,   481,   482,     0,   483,   484,     0,
     485,   486,     0,     0,   487,     0,     0,   488,     0,   489,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,     0,     0,     0,     0,   500,   501,
       0,   502,   503,   504,     0,   137,   505,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,     0,     0,     0,   147,   148,   149,   150,   151,     0,
       0,  -369,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,     0,     0,
       0,     0,   162,  4063,     0,   163,   164,     0,   165,   166,
       0,     0,     0,     0,   169,   170,   171,   172,  4064,     0,
     174,   175,     0,   176,   177,     0,   178,   179,     0,   181,
       0,   183,   184,   185,   186,   187,     0,   188,   189,     0,
     190,   191,   192,     0,   194,     0,     0,     0,   195,     0,
       0,   196,     0,   197,     0,     0,   198,     0,     0,     0,
     199,   200,   201,     0,     0,   202,     0,     0,     0,     0,
     203,     0,     0,     0,     0,     0,   205,   206,     0,   207,
       0,     0,     0,   208,     0,   209,   210,   211,   212,   213,
       0,     0,     0,     0,     0,     0,   215,   216,   217,     0,
    -339,  -339,   218,     0,  -339,   220,     0,   221,   222,   223,
       0,     0,   224,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   232,   233,   234,   235,   236,     0,     0,
     237,   238,  4065,   239,   240,   241,     0,     0,     0,     0,
       0,     0,     0,   244,     0,   245,     0,   246,     0,   247,
     248,   249,   250,     0,   251,     0,   252,     0,     0,     0,
       0,   254,     0,     0,     0,     0,     0,   257,     0,     0,
       0,   258,   259,   260,   261,  4066,     0,   262,   263,   264,
       0,   265,     0,   266,     0,     0,     0,     0,   267,     0,
       0,     0,     0,   269,     0,     0,     0,   270,   271,     0,
     272,   273,  4067,     0,     0,   274,     0,     0,     0,   276,
       0,     0,   277,  4068,     0,   278,   279,     0,     0,     0,
       0,     0,   280,   281,     0,   282,     0,   283,     0,   284,
     285,     0,     0,     0,     0,  -324,     0,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,     0,   307,   308,   309,   310,     0,   311,   312,     0,
       0,     0,     0,   313,   314,   315,   316,   317,   318,     0,
       0,   319,   320,     0,   321,     0,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,     0,   332,
     333,     0,     0,   334,   335,   336,   337,     0,     0,     0,
       0,   339,     0,     0,     0,   340,     0,   341,   342,   343,
       0,   344,   345,  4069,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   349,   350,     0,     0,
     352,     0,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   364,   365,     0,   366,     0,
     367,   368,   369,   370,   371,     0,   372,   373,   374,     0,
       0,   375,     0,     0,     0,   376,   377,   378,   379,   380,
       0,     0,   381,   382,   383,   384,   385,     0,   386,     0,
       0,   388,     0,   390,  -324,     0,   391,     0,     0,     0,
     393,     0,     0,   395,   396,   397,  4070,   398,     0,     0,
       0,   400,   401,   402,   403,   404,   405,   406,     0,   408,
     409,     0,   410,     0,     0,     0,     0,   412,   413,   414,
       0,     0,     0,     0,   416,     0,     0,     0,   417,     0,
       0,   419,     0,   421,     0,   422,     0,     0,   425,   426,
       0,     0,     0,     0,     0,   427,   428,   429,     0,   430,
     431,     0,   432,     0,     0,   433,     0,     0,   434,     0,
     436,   437,   438,   439,   440,     0,     0,     0,     0,     0,
     442,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,     0,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,   462,
     463,   464,   465,   466,     0,     0,     0,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
       0,     0,     0,   478,   479,   480,     0,   481,   482,     0,
     483,   484,     0,     0,     0,     0,     0,   487,     0,     0,
     488,     0,     0,     0,   490,   491,   492,     0,     0,     0,
       0,     0,     0,   493,     0,     0,   494,     0,     0,     0,
     495,   496,   497,   498,   499,     0,     0,  -324,     0,     0,
       0,   500,     0,     0,   502,     0,   504,     0,   137,   505,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,     0,     0,   147,   148,   149,
     150,   151,     0,     0,  -369,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,     0,     0,     0,     0,   162,  4063,     0,   163,   164,
       0,   165,   166,     0,     0,     0,     0,   169,   170,   171,
     172,  4064,     0,   174,   175,     0,   176,   177,     0,   178,
     179,     0,   181,     0,   183,   184,   185,   186,   187,     0,
     188,   189,     0,   190,   191,   192,     0,   194,     0,     0,
       0,   195,     0,     0,   196,     0,   197,     0,     0,   198,
       0,     0,     0,   199,   200,   201,     0,     0,   202,     0,
       0,     0,     0,   203,     0,     0,     0,     0,     0,   205,
     206,     0,   207,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,     0,     0,     0,     0,     0,     0,   215,
     216,   217,     0,  -360,     0,   218,     0,  -360,   220,     0,
     221,   222,   223,     0,     0,   224,   225,     0,   226,   227,
     228,   229,   230,     0,     0,     0,   232,   233,   234,   235,
     236,     0,     0,   237,   238,  4065,   239,   240,   241,     0,
       0,     0,     0,     0,     0,     0,   244,     0,   245,     0,
     246,     0,   247,   248,   249,   250,     0,   251,     0,   252,
       0,     0,     0,     0,   254,     0,     0,     0,     0,     0,
     257,     0,     0,     0,   258,   259,   260,   261,  4066,     0,
     262,   263,   264,     0,   265,     0,   266,     0,     0,     0,
       0,   267,     0,     0,     0,     0,   269,     0,     0,     0,
     270,   271,     0,   272,   273,  4067,     0,     0,   274,     0,
       0,     0,   276,     0,     0,   277,  4068,     0,   278,   279,
       0,     0,     0,     0,     0,   280,   281,     0,   282,     0,
     283,     0,   284,   285,     0,     0,     0,     0,  -324,     0,
       0,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,     0,   307,   308,   309,   310,     0,
     311,   312,     0,     0,     0,     0,   313,   314,   315,   316,
     317,   318,     0,     0,   319,   320,     0,   321,     0,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,     0,   332,   333,     0,     0,   334,   335,   336,   337,
       0,     0,     0,     0,   339,     0,     0,     0,   340,     0,
     341,   342,   343,     0,   344,   345,  4069,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   349,
     350,     0,     0,   352,     0,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   364,   365,
       0,   366,     0,   367,   368,   369,   370,   371,     0,   372,
     373,   374,     0,     0,   375,     0,     0,     0,   376,   377,
     378,   379,   380,     0,     0,   381,   382,   383,   384,   385,
       0,   386,     0,     0,   388,     0,   390,  -324,     0,   391,
       0,     0,     0,   393,     0,     0,   395,   396,   397,  4070,
     398,     0,     0,     0,   400,   401,   402,   403,   404,   405,
     406,     0,   408,   409,     0,   410,     0,     0,     0,     0,
     412,   413,   414,     0,     0,     0,     0,   416,     0,     0,
       0,   417,     0,     0,   419,     0,   421,     0,   422,     0,
       0,   425,   426,     0,     0,     0,     0,     0,   427,   428,
     429,     0,   430,   431,     0,   432,     0,     0,   433,     0,
       0,   434,     0,   436,   437,   438,   439,   440,     0,     0,
       0,     0,     0,   442,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,     0,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,   462,   463,   464,   465,   466,     0,     0,     0,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,     0,     0,     0,     0,   478,   479,   480,     0,
     481,   482,     0,   483,   484,     0,     0,     0,     0,     0,
     487,     0,     0,   488,     0,     0,     0,   490,   491,   492,
       0,     0,     0,     0,     0,     0,   493,     0,     0,   494,
       0,     0,     0,   495,   496,   497,   498,   499,  -360,     0,
    -324,     0,     0,     0,   500,     0,     0,   502,     0,   504,
       0,   137,   505,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,     0,     0,     0,
     147,   148,   149,   150,   151,     0,     0,  -369,     0,     0,
       0,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,     0,     0,     0,     0,   162,  4063,
       0,   163,   164,     0,   165,   166,     0,     0,     0,     0,
     169,   170,   171,   172,  4064,     0,   174,   175,     0,   176,
     177,     0,   178,   179,     0,   181,     0,   183,   184,   185,
     186,   187,     0,   188,   189,     0,   190,   191,   192,     0,
     194,     0,     0,     0,   195,     0,     0,   196,     0,   197,
       0,     0,   198,     0,     0,     0,   199,   200,   201,     0,
       0,   202,     0,     0,     0,     0,   203,     0,     0,     0,
       0,     0,   205,   206,     0,   207,     0,     0,     0,   208,
       0,   209,   210,   211,   212,   213,     0,     0,     0,     0,
       0,     0,   215,   216,   217,     0,  -357,     0,   218,     0,
    -357,   220,     0,   221,   222,   223,     0,     0,   224,   225,
       0,   226,   227,   228,   229,   230,     0,     0,     0,   232,
     233,   234,   235,   236,     0,     0,   237,   238,  4065,   239,
     240,   241,     0,     0,     0,     0,     0,     0,     0,   244,
       0,   245,     0,   246,     0,   247,   248,   249,   250,     0,
     251,     0,   252,     0,     0,     0,     0,   254,     0,     0,
       0,     0,     0,   257,     0,     0,     0,   258,   259,   260,
     261,  4066,     0,   262,   263,   264,     0,   265,     0,   266,
       0,     0,     0,     0,   267,     0,     0,     0,     0,   269,
       0,     0,     0,   270,   271,     0,   272,   273,  4067,     0,
       0,   274,     0,     0,     0,   276,     0,     0,   277,  4068,
       0,   278,   279,     0,     0,     0,     0,     0,   280,   281,
       0,   282,     0,   283,     0,   284,   285,     0,     0,     0,
       0,  -324,     0,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,     0,   307,   308,
     309,   310,     0,   311,   312,     0,     0,     0,     0,   313,
     314,   315,   316,   317,   318,     0,     0,   319,   320,     0,
     321,     0,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,     0,   332,   333,     0,     0,   334,
     335,   336,   337,     0,     0,     0,     0,   339,     0,     0,
       0,   340,     0,   341,   342,   343,     0,   344,   345,  4069,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   349,   350,     0,     0,   352,     0,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   364,   365,     0,   366,     0,   367,   368,   369,   370,
     371,     0,   372,   373,   374,     0,     0,   375,     0,     0,
       0,   376,   377,   378,   379,   380,     0,     0,   381,   382,
     383,   384,   385,     0,   386,     0,     0,   388,     0,   390,
    -324,     0,   391,     0,     0,     0,   393,     0,     0,   395,
     396,   397,  4070,   398,     0,     0,     0,   400,   401,   402,
     403,   404,   405,   406,     0,   408,   409,     0,   410,     0,
       0,     0,     0,   412,   413,   414,     0,     0,     0,     0,
     416,     0,     0,     0,   417,     0,     0,   419,     0,   421,
       0,   422,     0,     0,   425,   426,     0,     0,     0,     0,
       0,   427,   428,   429,     0,   430,   431,     0,   432,     0,
       0,   433,     0,     0,   434,     0,   436,   437,   438,   439,
     440,     0,     0,     0,     0,     0,   442,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,     0,   455,   456,   457,   458,   459,
       0,     0,   460,   461,     0,   462,   463,   464,   465,   466,
       0,     0,     0,     0,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,     0,     0,     0,   478,
     479,   480,     0,   481,   482,     0,   483,   484,     0,     0,
       0,     0,     0,   487,     0,     0,   488,     0,     0,     0,
     490,   491,   492,     0,     0,     0,     0,     0,     0,   493,
       0,     0,   494,     0,     0,     0,   495,   496,   497,   498,
     499,  -357,     0,  -324,     0,     0,     0,   500,     0,     0,
     502,     0,   504,     0,   137,   505,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,     0,     0,   147,   148,   149,   150,   151,     0,     0,
    -369,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,     0,     0,     0,
       0,   162,  4063,     0,   163,   164,     0,   165,   166,     0,
       0,     0,     0,   169,   170,   171,   172,  4064,     0,   174,
     175,     0,   176,   177,     0,   178,   179,     0,   181,     0,
     183,   184,   185,   186,   187,     0,   188,   189,     0,   190,
     191,   192,     0,   194,     0,     0,     0,   195,     0,     0,
     196,     0,   197,     0,     0,   198,     0,     0,     0,   199,
     200,   201,     0,     0,   202,     0,     0,     0,     0,   203,
       0,     0,     0,     0,     0,   205,   206,     0,   207,     0,
       0,     0,   208,     0,   209,   210,   211,   212,   213,     0,
       0,     0,     0,     0,     0,   215,   216,   217,     0,     0,
       0,   218,     0,  4404,   220,     0,   221,   222,   223,     0,
       0,   224,   225,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   232,   233,   234,   235,   236,     0,     0,   237,
     238,  4065,   239,   240,   241,     0,     0,     0,     0,     0,
       0,     0,   244,     0,   245,     0,   246,     0,   247,   248,
     249,   250,     0,   251,     0,   252,     0,     0,     0,     0,
     254,     0,     0,     0,     0,     0,   257,     0,     0,     0,
     258,   259,   260,   261,  4066,     0,   262,   263,   264,     0,
     265,     0,   266,     0,     0,     0,     0,   267,     0,     0,
       0,     0,   269,     0,     0,     0,   270,   271,     0,   272,
     273,  4067,     0,     0,   274,     0,     0,     0,   276,     0,
       0,   277,  4068,     0,   278,   279,     0,     0,     0,     0,
       0,   280,   281,     0,   282,     0,   283,     0,   284,   285,
       0,     0,     0,     0,  -324,     0,     0,   286,     0,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
       0,   307,   308,   309,   310,     0,   311,   312,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,     0,     0,
     319,   320,     0,   321,     0,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   332,   333,
       0,     0,   334,   335,   336,   337,     0,     0,     0,     0,
     339,     0,     0,     0,   340,     0,   341,   342,   343,     0,
     344,   345,  4069,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   349,   350,     0,     0,   352,
       0,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   364,   365,     0,   366,     0,   367,
     368,   369,   370,   371,     0,   372,   373,   374,     0,     0,
     375,     0,     0,     0,   376,   377,   378,   379,   380,     0,
       0,   381,   382,   383,   384,   385,     0,   386,     0,     0,
     388,     0,   390,  -324,     0,   391,     0,     0,     0,   393,
       0,     0,   395,   396,   397,  4070,   398,     0,     0,     0,
     400,   401,   402,   403,   404,   405,   406,     0,   408,   409,
       0,   410,     0,     0,     0,     0,   412,   413,   414,     0,
       0,     0,     0,   416,     0,     0,     0,   417,     0,     0,
     419,     0,   421,     0,   422,     0,     0,   425,   426,     0,
       0,     0,     0,     0,   427,   428,   429,     0,   430,   431,
       0,   432,     0,     0,   433,     0,     0,   434,     0,   436,
     437,   438,   439,   440,     0,     0,     0,     0,     0,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,     0,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,   462,   463,
     464,   465,   466,     0,     0,     0,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,     0,     0,
       0,     0,   478,   479,   480,     0,   481,   482,     0,   483,
     484,     0,     0,     0,     0,     0,   487,     0,     0,   488,
       0,     0,     0,   490,   491,   492,     0,     0,     0,     0,
       0,     0,   493,     0,     0,   494,     0,     0,     0,   495,
     496,   497,   498,   499,     0,     0,  -324,     0,     0,     0,
     500,     0,     0,   502,     0,   504,     0,   137,   505,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,   145,     0,     0,     0,     0,   147,   148,   149,   150,
     151,     0,     0,  -369,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
       0,     0,     0,     0,   162,  4063,     0,   163,   164,     0,
     165,   166,     0,     0,     0,     0,   169,   170,   171,   172,
    4064,     0,   174,   175,     0,   176,   177,     0,   178,   179,
       0,   181,     0,   183,   184,   185,   186,   187,     0,   188,
     189,     0,   190,   191,   192,     0,   194,     0,     0,     0,
     195,     0,     0,   196,     0,   197,     0,     0,   198,     0,
       0,     0,   199,   200,   201,     0,     0,   202,     0,     0,
       0,     0,   203,     0,     0,     0,     0,     0,   205,   206,
       0,   207,     0,     0,     0,   208,     0,   209,   210,   211,
     212,   213,     0,     0,     0,     0,     0,     0,   215,   216,
     217,     0,     0,     0,   218,     0,  -362,   220,     0,   221,
     222,   223,     0,     0,   224,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,   232,   233,   234,   235,   236,
       0,     0,   237,   238,  4065,   239,   240,   241,     0,     0,
       0,     0,     0,     0,     0,   244,     0,   245,     0,   246,
       0,   247,   248,   249,   250,     0,   251,     0,   252,     0,
       0,     0,     0,   254,     0,     0,     0,     0,     0,   257,
       0,     0,     0,   258,   259,   260,   261,  4066,     0,   262,
     263,   264,     0,   265,     0,   266,     0,     0,     0,     0,
     267,     0,     0,     0,     0,   269,     0,     0,     0,   270,
     271,     0,   272,   273,  4067,     0,     0,   274,     0,     0,
       0,   276,     0,     0,   277,  4068,     0,   278,   279,     0,
       0,     0,     0,     0,   280,   281,     0,   282,     0,   283,
       0,   284,   285,     0,     0,     0,     0,  -324,     0,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,     0,   307,   308,   309,   310,     0,   311,
     312,     0,     0,     0,     0,   313,   314,   315,   316,   317,
     318,     0,     0,   319,   320,     0,   321,     0,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
       0,   332,   333,     0,     0,   334,   335,   336,   337,     0,
       0,     0,     0,   339,     0,     0,     0,   340,     0,   341,
     342,   343,     0,   344,   345,  4069,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   349,   350,
       0,     0,   352,     0,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   364,   365,     0,
     366,     0,   367,   368,   369,   370,   371,     0,   372,   373,
     374,     0,     0,   375,     0,     0,     0,   376,   377,   378,
     379,   380,     0,     0,   381,   382,   383,   384,   385,     0,
     386,     0,     0,   388,     0,   390,  -324,     0,   391,     0,
       0,     0,   393,     0,     0,   395,   396,   397,  4070,   398,
       0,     0,     0,   400,   401,   402,   403,   404,   405,   406,
       0,   408,   409,     0,   410,     0,     0,     0,     0,   412,
     413,   414,     0,     0,     0,     0,   416,     0,     0,     0,
     417,     0,     0,   419,     0,   421,     0,   422,     0,     0,
     425,   426,     0,     0,     0,     0,     0,   427,   428,   429,
       0,   430,   431,     0,   432,     0,     0,   433,     0,     0,
     434,     0,   436,   437,   438,   439,   440,     0,     0,     0,
       0,     0,   442,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,   450,   451,   452,     0,   453,   454,     0,
       0,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,   462,   463,   464,   465,   466,     0,     0,     0,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,     0,     0,     0,   478,   479,   480,     0,   481,
     482,     0,   483,   484,     0,     0,     0,     0,     0,   487,
       0,     0,   488,     0,     0,     0,   490,   491,   492,     0,
       0,     0,     0,     0,     0,   493,     0,     0,   494,     0,
       0,     0,   495,   496,   497,   498,   499,     0,     0,  -324,
       0,     0,     0,   500,     0,     0,   502,     0,   504,     0,
     137,   505,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,     0,     0,   147,
     148,   149,   150,   151,     0,     0,  -369,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,     0,     0,     0,     0,   162,  4063,     0,
     163,   164,     0,   165,   166,     0,     0,     0,     0,   169,
     170,   171,   172,  4064,     0,   174,   175,     0,   176,   177,
       0,   178,   179,     0,   181,     0,   183,   184,   185,   186,
     187,     0,   188,   189,     0,   190,   191,   192,     0,   194,
       0,     0,     0,   195,     0,     0,   196,     0,   197,     0,
       0,   198,     0,     0,     0,   199,   200,   201,     0,     0,
     202,     0,     0,     0,     0,   203,     0,     0,     0,     0,
       0,   205,   206,     0,   207,     0,     0,     0,   208,     0,
     209,   210,   211,   212,   213,     0,     0,     0,     0,     0,
       0,   215,   216,   217,     0,     0,     0,   218,     0,  4512,
     220,     0,   221,   222,   223,     0,     0,   224,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   232,   233,
     234,   235,   236,     0,     0,   237,   238,  4065,   239,   240,
     241,     0,     0,     0,     0,     0,     0,     0,   244,     0,
     245,     0,   246,     0,   247,   248,   249,   250,     0,   251,
       0,   252,     0,     0,     0,     0,   254,     0,     0,     0,
       0,     0,   257,     0,     0,     0,   258,   259,   260,   261,
    4066,     0,   262,   263,   264,     0,   265,     0,   266,     0,
       0,     0,     0,   267,     0,     0,     0,     0,   269,     0,
       0,     0,   270,   271,     0,   272,   273,  4067,     0,     0,
     274,     0,     0,     0,   276,     0,     0,   277,  4068,     0,
     278,   279,     0,     0,     0,     0,     0,   280,   281,     0,
     282,     0,   283,     0,   284,   285,     0,     0,     0,     0,
    -324,     0,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,     0,   307,   308,   309,
     310,     0,   311,   312,     0,     0,     0,     0,   313,   314,
     315,   316,   317,   318,     0,     0,   319,   320,     0,   321,
       0,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,     0,   332,   333,     0,     0,   334,   335,
     336,   337,     0,     0,     0,     0,   339,     0,     0,     0,
     340,     0,   341,   342,   343,     0,   344,   345,  4069,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   349,   350,     0,     0,   352,     0,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     364,   365,     0,   366,     0,   367,   368,   369,   370,   371,
       0,   372,   373,   374,     0,     0,   375,     0,     0,     0,
     376,   377,   378,   379,   380,     0,     0,   381,   382,   383,
     384,   385,     0,   386,     0,     0,   388,     0,   390,  -324,
       0,   391,     0,     0,     0,   393,     0,     0,   395,   396,
     397,  4070,   398,     0,     0,     0,   400,   401,   402,   403,
     404,   405,   406,     0,   408,   409,     0,   410,     0,     0,
       0,     0,   412,   413,   414,     0,     0,     0,     0,   416,
       0,     0,     0,   417,     0,     0,   419,     0,   421,     0,
     422,     0,     0,   425,   426,     0,     0,     0,     0,     0,
     427,   428,   429,     0,   430,   431,     0,   432,     0,     0,
     433,     0,     0,   434,     0,   436,   437,   438,   439,   440,
       0,     0,     0,     0,     0,   442,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,     0,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,   462,   463,   464,   465,   466,     0,
       0,     0,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,     0,     0,     0,   478,   479,
     480,     0,   481,   482,     0,   483,   484,     0,     0,     0,
       0,     0,   487,     0,     0,   488,     0,     0,     0,   490,
     491,   492,     0,     0,     0,     0,     0,     0,   493,     0,
       0,   494,     0,     0,     0,   495,   496,   497,   498,   499,
       0,     0,  -324,     0,     0,     0,   500,     0,     0,   502,
       0,   504,     0,   137,   505,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
       0,     0,   147,   148,   149,   150,   151,     0,     0,  -369,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,     0,     0,     0,     0,
     162,  4063,     0,   163,   164,     0,   165,   166,     0,     0,
       0,     0,   169,   170,   171,   172,  4064,     0,   174,   175,
       0,   176,   177,     0,   178,   179,     0,   181,     0,   183,
     184,   185,   186,   187,     0,   188,   189,     0,   190,   191,
     192,     0,   194,     0,     0,     0,   195,     0,     0,   196,
       0,   197,     0,     0,   198,     0,     0,     0,   199,   200,
     201,     0,     0,   202,     0,     0,     0,     0,   203,     0,
       0,     0,     0,     0,   205,   206,     0,   207,     0,     0,
       0,   208,     0,   209,   210,   211,   212,   213,     0,     0,
       0,     0,     0,     0,   215,   216,   217,     0,     0,     0,
     218,     0,  4558,   220,     0,   221,   222,   223,     0,     0,
     224,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   232,   233,   234,   235,   236,     0,     0,   237,   238,
    4065,   239,   240,   241,     0,     0,     0,     0,     0,     0,
       0,   244,     0,   245,     0,   246,     0,   247,   248,   249,
     250,     0,   251,     0,   252,     0,     0,     0,     0,   254,
       0,     0,     0,     0,     0,   257,     0,     0,     0,   258,
     259,   260,   261,  4066,     0,   262,   263,   264,     0,   265,
       0,   266,     0,     0,     0,     0,   267,     0,     0,     0,
       0,   269,     0,     0,     0,   270,   271,     0,   272,   273,
    4067,     0,     0,   274,     0,     0,     0,   276,     0,     0,
     277,  4068,     0,   278,   279,     0,     0,     0,     0,     0,
     280,   281,     0,   282,     0,   283,     0,   284,   285,     0,
       0,     0,     0,  -324,     0,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,     0,
     307,   308,   309,   310,     0,   311,   312,     0,     0,     0,
       0,   313,   314,   315,   316,   317,   318,     0,     0,   319,
     320,     0,   321,     0,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,     0,   332,   333,     0,
       0,   334,   335,   336,   337,     0,     0,     0,     0,   339,
       0,     0,     0,   340,     0,   341,   342,   343,     0,   344,
     345,  4069,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   349,   350,     0,     0,   352,     0,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   364,   365,     0,   366,     0,   367,   368,
     369,   370,   371,     0,   372,   373,   374,     0,     0,   375,
       0,     0,     0,   376,   377,   378,   379,   380,     0,     0,
     381,   382,   383,   384,   385,     0,   386,     0,     0,   388,
       0,   390,  -324,     0,   391,     0,     0,     0,   393,     0,
       0,   395,   396,   397,  4070,   398,     0,     0,     0,   400,
     401,   402,   403,   404,   405,   406,     0,   408,   409,     0,
     410,     0,     0,     0,     0,   412,   413,   414,     0,     0,
       0,     0,   416,     0,     0,     0,   417,     0,     0,   419,
       0,   421,     0,   422,     0,     0,   425,   426,     0,     0,
       0,     0,     0,   427,   428,   429,     0,   430,   431,     0,
     432,     0,     0,   433,     0,     0,   434,     0,   436,   437,
     438,   439,   440,     0,     0,     0,     0,     0,   442,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,     0,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,   462,   463,   464,
     465,   466,     0,     0,     0,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,     0,     0,
       0,   478,   479,   480,     0,   481,   482,     0,   483,   484,
       0,     0,     0,     0,     0,   487,     0,     0,   488,     0,
       0,     0,   490,   491,   492,     0,     0,     0,     0,     0,
       0,   493,     0,     0,   494,     0,     0,     0,   495,   496,
     497,   498,   499,     0,     0,  -324,     0,     0,     0,   500,
       0,     0,   502,     0,   504,     0,   137,   505,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,     0,     0,   147,   148,   149,   150,   151,
       0,     0,  -369,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,     0,
       0,     0,     0,   162,  4063,     0,   163,   164,     0,   165,
     166,     0,     0,     0,     0,   169,   170,   171,   172,  4064,
       0,   174,   175,     0,   176,   177,     0,   178,   179,     0,
     181,     0,   183,   184,   185,   186,   187,     0,   188,   189,
       0,   190,   191,   192,     0,   194,     0,     0,     0,   195,
       0,     0,   196,     0,   197,     0,     0,   198,     0,     0,
       0,   199,   200,   201,     0,     0,   202,     0,     0,     0,
       0,   203,     0,     0,     0,     0,     0,   205,   206,     0,
     207,     0,     0,     0,   208,     0,   209,   210,   211,   212,
     213,     0,     0,     0,     0,     0,     0,   215,   216,   217,
       0,     0,     0,   218,     0,  -343,   220,     0,   221,   222,
     223,     0,     0,   224,   225,     0,   226,   227,   228,   229,
     230,     0,     0,     0,   232,   233,   234,   235,   236,     0,
       0,   237,   238,  4065,   239,   240,   241,     0,     0,     0,
       0,     0,     0,     0,   244,     0,   245,     0,   246,     0,
     247,   248,   249,   250,     0,   251,     0,   252,     0,     0,
       0,     0,   254,     0,     0,     0,     0,     0,   257,     0,
       0,     0,   258,   259,   260,   261,  4066,     0,   262,   263,
     264,     0,   265,     0,   266,     0,     0,     0,     0,   267,
       0,     0,     0,     0,   269,     0,     0,     0,   270,   271,
       0,   272,   273,  4067,     0,     0,   274,     0,     0,     0,
     276,     0,     0,   277,  4068,     0,   278,   279,     0,     0,
       0,     0,     0,   280,   281,     0,   282,     0,   283,     0,
     284,   285,     0,     0,     0,     0,  -324,     0,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,     0,   307,   308,   309,   310,     0,   311,   312,
       0,     0,     0,     0,   313,   314,   315,   316,   317,   318,
       0,     0,   319,   320,     0,   321,     0,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,     0,
     332,   333,     0,     0,   334,   335,   336,   337,     0,     0,
       0,     0,   339,     0,     0,     0,   340,     0,   341,   342,
     343,     0,   344,   345,  4069,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   349,   350,     0,
       0,   352,     0,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   364,   365,     0,   366,
       0,   367,   368,   369,   370,   371,     0,   372,   373,   374,
       0,     0,   375,     0,     0,     0,   376,   377,   378,   379,
     380,     0,     0,   381,   382,   383,   384,   385,     0,   386,
       0,     0,   388,     0,   390,  -324,     0,   391,     0,     0,
       0,   393,     0,     0,   395,   396,   397,  4070,   398,     0,
       0,     0,   400,   401,   402,   403,   404,   405,   406,     0,
     408,   409,     0,   410,     0,     0,     0,     0,   412,   413,
     414,     0,     0,     0,     0,   416,     0,     0,     0,   417,
       0,     0,   419,     0,   421,     0,   422,     0,     0,   425,
     426,     0,     0,     0,     0,     0,   427,   428,   429,     0,
     430,   431,     0,   432,     0,     0,   433,     0,     0,   434,
       0,   436,   437,   438,   439,   440,     0,     0,     0,     0,
       0,   442,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,     0,
     455,   456,   457,   458,   459,     0,     0,   460,   461,     0,
     462,   463,   464,   465,   466,     0,     0,     0,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,     0,     0,     0,   478,   479,   480,     0,   481,   482,
       0,   483,   484,     0,     0,     0,     0,     0,   487,     0,
       0,   488,     0,     0,     0,   490,   491,   492,     0,     0,
       0,     0,     0,     0,   493,     0,     0,   494,     0,     0,
       0,   495,   496,   497,   498,   499,     0,     0,  -324,     0,
       0,     0,   500,     0,     0,   502,     0,   504,     0,   137,
     505,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,     0,     0,   147,   148,
     149,   150,   151,     0,     0,  -369,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,     0,     0,     0,     0,   162,  4063,     0,   163,
     164,     0,   165,   166,     0,     0,     0,     0,   169,   170,
     171,   172,  4064,     0,   174,   175,     0,   176,   177,     0,
     178,   179,     0,   181,     0,   183,   184,   185,   186,   187,
       0,   188,   189,     0,   190,   191,   192,     0,   194,     0,
       0,     0,   195,     0,     0,   196,     0,   197,     0,     0,
     198,     0,     0,     0,   199,   200,   201,     0,     0,   202,
       0,     0,     0,     0,   203,     0,     0,     0,     0,     0,
     205,   206,     0,   207,     0,     0,     0,   208,     0,   209,
     210,   211,   212,   213,     0,     0,     0,     0,     0,     0,
     215,   216,   217,     0,     0,     0,   218,     0,     0,   220,
       0,   221,   222,   223,     0,     0,   224,   225,     0,   226,
     227,   228,   229,   230,     0,     0,     0,   232,   233,   234,
     235,   236,     0,     0,   237,   238,  4065,   239,   240,   241,
       0,     0,     0,     0,     0,     0,     0,   244,     0,   245,
       0,   246,     0,   247,   248,   249,   250,     0,   251,     0,
     252,     0,     0,     0,     0,   254,     0,     0,     0,     0,
       0,   257,     0,     0,     0,   258,   259,   260,   261,  4066,
       0,   262,   263,   264,     0,   265,     0,   266,     0,     0,
       0,     0,   267,     0,     0,     0,     0,   269,     0,     0,
       0,   270,   271,     0,   272,   273,  4067,     0,     0,   274,
       0,     0,     0,   276,     0,     0,   277,  4068,     0,   278,
     279,     0,     0,     0,     0,     0,   280,   281,     0,   282,
       0,   283,     0,   284,   285,     0,     0,     0,     0,  -324,
       0,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,     0,   307,   308,   309,   310,
       0,   311,   312,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,     0,     0,   319,   320,     0,   321,     0,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,     0,   332,   333,     0,     0,   334,   335,   336,
     337,     0,     0,     0,     0,   339,     0,     0,     0,   340,
       0,   341,   342,   343,     0,   344,   345,  4069,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     349,   350,     0,     0,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   364,
     365,     0,   366,     0,   367,   368,   369,   370,   371,     0,
     372,   373,   374,     0,     0,   375,     0,     0,     0,   376,
     377,   378,   379,   380,     0,     0,   381,   382,   383,   384,
     385,     0,   386,     0,     0,   388,     0,   390,  -324,     0,
     391,     0,     0,     0,   393,     0,     0,   395,   396,   397,
    4070,   398,     0,     0,     0,   400,   401,   402,   403,   404,
     405,   406,     0,   408,   409,     0,   410,     0,     0,     0,
       0,   412,   413,   414,     0,     0,     0,     0,   416,     0,
       0,     0,   417,     0,     0,   419,     0,   421,     0,   422,
       0,     0,   425,   426,     0,     0,     0,     0,     0,   427,
     428,   429,     0,   430,   431,     0,   432,     0,     0,   433,
       0,     0,   434,     0,   436,   437,   438,   439,   440,     0,
       0,     0,     0,     0,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,     0,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,   462,   463,   464,   465,   466,     0,     0,
       0,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,     0,     0,     0,   478,   479,   480,
       0,   481,   482,     0,   483,   484,     0,     0,     0,     0,
       0,   487,     0,     0,   488,     0,     0,     0,   490,   491,
     492,     0,     0,     0,     0,     0,     0,   493,     0,     0,
     494,     0,     0,     0,   495,   496,   497,   498,   499,     0,
       0,  -324,     0,     0,     0,   500,     0,     0,   502,     0,
     504,     0,   137,   505,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,     0,
       0,   147,   148,   149,   150,   151,     0,     0,  -369,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,     0,     0,     0,     0,   162,
    4063,     0,   163,   164,     0,   165,   166,     0,     0,     0,
       0,   169,   170,   171,   172,  4064,     0,   174,   175,     0,
     176,   177,     0,   178,   179,     0,   181,     0,   183,   184,
     185,   186,   187,     0,   188,   189,     0,   190,   191,   192,
       0,   194,     0,     0,     0,   195,     0,     0,   196,     0,
     197,     0,     0,   198,     0,     0,     0,   199,   200,   201,
       0,     0,   202,     0,     0,     0,     0,   203,     0,     0,
       0,     0,     0,   205,   206,     0,   207,     0,     0,     0,
     208,     0,   209,   210,   211,   212,   213,     0,     0,     0,
       0,     0,     0,   215,   216,   217,     0,     0,     0,   218,
       0,     0,   220,     0,   221,   222,   223,     0,     0,   224,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
     232,   233,   234,   235,   236,     0,     0,   237,   238,  4065,
     239,   240,   241,     0,     0,     0,     0,     0,     0,     0,
     244,     0,   245,     0,   246,     0,   247,   248,   249,   250,
       0,   251,     0,   252,     0,     0,     0,     0,   254,     0,
       0,     0,     0,     0,   257,     0,     0,     0,   258,   259,
     260,   261,  4066,     0,   262,   263,   264,     0,   265,     0,
     266,     0,     0,     0,     0,   267,     0,     0,     0,     0,
     269,     0,     0,     0,   270,   271,     0,   272,   273,  4067,
       0,     0,   274,     0,     0,     0,   276,     0,     0,   277,
    4068,     0,   278,   279,     0,     0,     0,     0,     0,   280,
     281,     0,   282,     0,   283,     0,   284,   285,     0,     0,
       0,     0,  -324,     0,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,     0,   307,
     308,   309,   310,     0,   311,   312,     0,     0,     0,     0,
     313,   314,   315,   316,   317,   318,     0,     0,   319,   320,
       0,   321,     0,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,     0,   332,   333,     0,     0,
     334,   335,   336,   337,     0,     0,     0,     0,   339,     0,
       0,     0,   340,     0,   341,   342,   343,     0,   344,   345,
    4069,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   349,   350,     0,     0,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   364,   365,     0,   366,     0,   367,   368,   369,
     370,   371,     0,   372,   373,   374,     0,     0,   375,     0,
       0,     0,   376,   377,   378,   379,   380,     0,     0,   381,
     382,   383,   384,   385,     0,   386,     0,     0,   388,     0,
     390,  -324,     0,   391,     0,     0,     0,   393,     0,     0,
     395,   396,   397,  4070,   398,     0,     0,     0,   400,   401,
     402,   403,   404,   405,   406,     0,   408,   409,     0,   410,
       0,     0,     0,     0,   412,   413,   414,     0,     0,     0,
       0,   416,     0,     0,     0,   417,     0,     0,   419,     0,
     421,     0,   422,     0,     0,   425,   426,     0,     0,     0,
       0,     0,   427,   428,   429,     0,   430,   431,     0,   432,
       0,     0,   433,     0,     0,   434,     0,   436,   437,   438,
     439,   440,     0,     0,     0,     0,     0,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,     0,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,   462,   463,   464,   465,
     466,     0,     0,     0,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,     0,     0,     0,
     478,   479,   480,     0,   481,   482,     0,   483,   484,     0,
       0,     0,     0,     0,   487,     0,     0,  4407,     0,     0,
       0,   490,   491,   492,     0,     0,     0,     0,     0,     0,
     493,     0,     0,   494,     0,     0,     0,   495,   496,   497,
     498,   499,     0,     0,  -324,     0,     0,     0,   500,     0,
       0,   502,     0,   504,     0,   137,   505,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,     0,     0,     0,   147,   148,   149,   150,   151,     0,
       0,     0,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,     0,     0,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
       0,     0,     0,     0,   169,   170,   171,   172,     0,     0,
     174,   175,     0,   176,   177,     0,   178,   179,     0,   181,
       0,   183,   184,   185,   186,   187,     0,   188,   189,     0,
     190,   191,   192,     0,   194,     0,     0,     0,   195,     0,
       0,   196,     0,   197,     0,     0,   198,     0,     0,     0,
     199,   200,   201,     0,     0,   202,     0,     0,     0,     0,
     203,     0,     0,     0,     0,     0,   205,   206,     0,   207,
       0,     0,     0,   208,     0,   209,   210,   211,   212,   213,
       0,     0,     0,     0,     0,     0,   215,   216,   217,     0,
       0,     0,   218,     0,     0,   220,     0,   221,   222,   223,
       0,     0,   224,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   232,   233,   234,   235,   236,     0,     0,
     237,   238,     0,   239,   240,   241,     0,     0,     0,     0,
       0,     0,     0,   244,     0,   245,     0,   246,     0,   247,
     248,   249,   250,     0,   251,     0,   252,     0,     0,     0,
       0,   254,     0,     0,     0,     0,     0,   257,     0,     0,
       0,   258,   259,   260,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,     0,     0,     0,     0,   267,     0,
       0,     0,     0,   269,     0,     0,     0,   270,   271,     0,
     272,   273,     0,     0,     0,   274,     0,     0,     0,   276,
       0,     0,   277,     0,     0,   278,   279,     0,     0,     0,
       0,     0,   280,   281,     0,   282,     0,   283,     0,   284,
     285,     0,     0,     0,     0,     0,     0,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,     0,   307,   308,   309,   310,     0,   311,   312,     0,
       0,     0,     0,   313,   314,   315,   316,   317,   318,     0,
       0,   319,   320,     0,   321,     0,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,     0,   332,
     333,     0,     0,   334,   335,   336,   337,     0,     0,     0,
       0,   339,     0,     0,     0,   340,     0,   341,   342,   343,
       0,   344,   345,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   349,   350,     0,     0,
     352,     0,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   364,   365,     0,   366,     0,
     367,   368,   369,   370,   371,     0,   372,   373,   374,     0,
       0,   375,     0,     0,     0,   376,   377,   378,   379,   380,
       0,     0,   381,   382,   383,   384,   385,     0,   386,     0,
       0,   388,     0,   390,     0,     0,   391,     0,     0,     0,
     393,     0,     0,   395,   396,   397,     0,   398,     0,     0,
       0,   400,   401,   402,   403,   404,   405,   406,     0,   408,
     409,     0,   410,     0,     0,     0,     0,   412,   413,   414,
       0,     0,     0,     0,   416,     0,     0,     0,   417,     0,
       0,   419,     0,   421,     0,   422,     0,     0,   425,   426,
       0,     0,     0,     0,     0,   427,   428,   429,     0,   430,
     431,     0,   432,     0,     0,   433,     0,     0,   434,     0,
     436,   437,   438,   439,   440,     0,     0,     0,     0,     0,
     442,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,     0,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,   462,
     463,   464,   465,   466,     0,     0,     0,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
       0,     0,     0,   478,   479,   480,     0,   481,   482,     0,
     483,   484,     0,     0,     0,     0,     0,   487,     0,     0,
     488,     0,     0,     0,   490,   491,   492,     0,     0,     0,
       0,     0,     0,   493,     0,     0,   494,     0,     0,     0,
     495,   496,   497,   498,   499,     0,     0,     0,     0,     0,
       0,   500,     0,     0,   502,     0,   504,     0,     0,   505
};

static const yytype_int16 yycheck[] =
{
       6,   997,   668,   998,   678,   679,   603,   624,   602,   603,
     892,   122,   602,    19,   913,   914,  1347,    23,  1347,  1913,
     542,    11,  1615,  1869,   923,  1182,    32,    20,  1547,  1285,
    1088,  1748,  1334,    39,  1182,  1915,    42,    30,  1437,   738,
      46,  1129,   640,    36,  1082,  1083,   932,    53,   958,  2099,
    1545,  1417,  2170,  1536,  2626,   653,     6,  1285,  1536,  2410,
    1205,  2554,  2454,  2978,   817,  2239,   927,  1212,  1944,   930,
    2244,  1536,   958,  2125,  2513,  2514,  3393,  1119,  2920,   940,
    1152,  1821,  2744,   698,  1902,  1340,  1993,  2199,    94,  2542,
    2335,  1002,  2066,  1002,   955,   956,   957,  3127,   959,  2521,
     664,   665,  2627,   520,  2199,  1526,  2535,  2062,  2621,  1530,
     116,  1532,   118,  2599,  2543,   121,   122,   123,  3625,  2373,
    2778,  2472,  2068,  1516,     4,    25,  2072,    16,    17,  3398,
      51,    23,   978,   886,  3265,  2772,  2062,  2083,    47,  2776,
     806,  1213,  1214,    16,    17,  1217,  1218,  1219,  1220,  2095,
    1222,  1223,  1224,  1225,  1226,  1227,  1228,  1229,  3182,    16,
      17,    20,    20,    20,  2045,  2836,    17,  1526,   118,  1449,
      17,   121,    34,  2017,  2018,  1596,    78,    74,    20,   794,
     795,   796,  1911,     9,  2583,  2584,    64,  1467,  2188,   109,
    2034,  2054,   807,  3456,  3457,    61,   129,  3460,  1478,  1479,
     960,   145,    94,    29,    16,    17,  2602,  2051,  2052,    35,
     150,  1526,    16,    17,   150,  1530,  3479,  1532,   319,   191,
      16,    17,  3485,  2067,    20,    51,  2070,  2071,  3684,  2073,
    4102,  2720,  2076,  2077,    66,    63,  2080,  1596,    58,   837,
     217,  2085,  3416,    87,  2199,  1252,  2090,  2091,  2092,  2093,
    2094,   111,   268,   163,  2098,   197,  2100,   285,    82,   325,
    3121,   191,  2106,  2107,  2108,  2109,   683,   373,  2112,  2150,
    2114,  2152,  2153,  2199,   872,    16,    17,  2158,  2159,    16,
      17,  1596,    22,  2008,    22,  2036,  2167,  2168,    16,    17,
     144,  2172,  3674,    79,   348,   379,    34,    21,   156,    25,
     713,   160,   160,  2329,  3621,   156,   132,    25,    16,    17,
      48,  2874,   125,  2712,  2713,    36,    16,    17,   160,   427,
      60,    61,    60,    61,    30,    78,    16,    17,   125,  2222,
      16,    17,    30,   233,    16,    17,  2758,  2775,  2760,  2183,
    2184,  2185,  2186,   156,   150,   422,    16,    17,   253,    63,
     447,    78,   529,   255,   128,    69,   176,    22,   194,   156,
     180,  4233,  2925,   127,    11,   365,  1594,  3731,    36,    34,
     230,   191,   785,   251,   125,   176,   555,   555,   128,   191,
      35,    16,    17,    48,    35,    24,  1060,  1061,  1062,    64,
     194,    71,   524,    16,    17,    60,    61,  4358,    16,    17,
    4361,   130,   555,   555,    40,   156,   436,   131,   392,   595,
    3747,   275,   523,  3750,   584,   315,   444,    71,   422,  1118,
     167,    34,    16,    17,   194,   517,  3851,   286,    86,   628,
     230,   167,   555,  1132,    16,    17,   358,   525,   608,   443,
     158,   215,  2323,   545,   137,   230,   548,   105,    61,  3712,
     197,    16,    17,   652,  3879,   566,   256,   156,  3721,   152,
    3967,   197,   554,   551,  1028,   651,   466,   409,  3805,    10,
     266,   650,   650,   477,   244,  2746,   190,    21,   356,   243,
     156,  3744,   590,   405,   616,   515,  3749,   553,   124,   378,
     235,   160,   381,   214,   194,  1490,  1395,   650,   362,   244,
    2913,   555,   255,   323,   681,   657,   130,   233,  2930,  2931,
    2587,  1410,   286,    16,    17,   233,  4477,   523,   354,   525,
    3789,   378,   588,   160,   381,  3842,    16,    17,   255,   168,
     474,   452,  2985,    16,    17,   589,   286,    16,    17,  3025,
      51,   547,  1208,  3029,  3030,   551,   214,   524,   453,   650,
    1916,   628,   658,  2605,  3047,   652,   562,  2609,    16,    17,
     566,  3422,   568,   422,  2083,  3027,   378,  3931,   652,   381,
     269,  2623,  2624,   417,   378,  2468,   251,   381,   584,  1101,
    1102,  1442,   378,  2635,  1445,   381,  1285,   131,  4044,   315,
    1451,  1004,  2642,   269,    16,    17,   602,   315,   418,   627,
    1122,  1216,   430,   657,   610,  1516,   548,  1516,  2720,  1131,
     626,  3880,  2664,   237,   189,  2036,  1502,   418,  1233,  1480,
    1481,  1143,  1144,  1145,   630,  2720,    16,    17,   482,  1151,
    3026,   278,  2587,  2054,   640,  2541,   642,   378,   516,   384,
     381,   378,  3666,   361,   381,   469,  1902,   653,   654,   655,
     378,   226,  2117,   381,   660,  3326,   662,   535,   664,   665,
     492,  2587,  3151,   669,   670,   671,   650,  2548,  4540,   675,
     378,  3586,   160,   381,  1902,    16,    17,  2036,   378,   685,
     652,   381,   688,   689,  1595,   625,  1595,   693,   378,   625,
    2742,   381,   378,   407,  1258,   381,   378,   122,   628,   381,
     620,    16,    17,  2062,  1776,   655,   650,  1987,   378,    74,
     654,   381,   622,  3982,  2714,  1787,  1476,  4224,  1790,   628,
     567,  2036,  2585,   834,  3395,   567,   628,  2608,  1770,  2610,
     556,   652,   738,   457,  1580,  3866,  2617,    16,    17,  2054,
    3303,  3304,  3305,   378,  4013,  2474,   381,   680,   637,   615,
    2631,  3150,   652,   650,   580,   378,   634,  2638,   381,  3181,
     378,   587,   654,   381,   637,  2720,   655,  2188,   660,  2650,
    2651,  2652,  2616,  1337,   633,  2656,   636,   628,  2199,  3171,
     637,  3344,  3345,  3346,   378,  2629,  3444,   381,   650,  2182,
    1354,  3965,  1799,   799,  2720,   801,   378,  2678,   656,   381,
    3054,   587,   913,  3440,   194,   656,   917,   918,  1406,  2534,
    4192,  2837,   530,   378,   483,  2566,   381,  3475,  3476,   625,
     931,   827,   828,   829,   830,   637,   832,   833,   834,  2188,
     836,   837,   652,   637,   555,  3859,   842,  3474,  4345,   651,
    2199,   637,   848,   656,   524,  3482,   483,   651,  1446,   160,
    4119,   652,  3489,   593,   860,   593,   652,   584,   283,   656,
     535,   567,    16,    17,  2757,  2711,   872,   873,   409,   567,
     524,   877,   601,  2188,  2718,   378,   614,   615,   381,   829,
     608,   608,   596,   833,  2199,   996,   836,   555,   378,  3414,
     545,   381,   528,   548,   545,   378,   637,   548,   381,   378,
     637,   907,   381,   621,  3175,   656,   651,   913,   176,   637,
     651,   917,   918,   457,   651,   652,  3402,  3430,   554,   643,
     378,  2416,  3335,   381,   652,   931,  1520,   626,   593,   637,
    3383,    25,  3962,  4196,  3387,  4198,  1534,   637,  3015,   364,
    3332,   452,  3404,   651,   652,    16,    17,   637,   364,   585,
     626,   637,   652,  2546,  3383,   637,   378,   656,  3387,   381,
     189,   651,   652,  2857,   160,   651,   652,   637,   860,   651,
    3392,    68,   978,   514,    16,    17,   125,   601,  4247,    56,
     656,   873,   652,   286,   864,   877,    72,  2907,   378,   658,
     996,   381,   998,   368,  1693,   483,  3347,   226,  3050,    59,
    3438,  3439,   637,  2897,    16,    17,   156,  4276,  3446,  1426,
     226,  3449,  3450,    43,   637,   841,   651,   652,   308,   637,
      46,   658,  1028,  1922,    16,    17,   474,   195,  3466,   652,
     678,   679,   607,   651,   652,   455,  4353,   378,   579,  3151,
     381,   271,  3480,   637,    16,    17,   411,  3485,  3486,  3487,
    3488,    16,    17,    16,    17,   637,  3151,  2903,   652,   394,
    3015,  3875,    72,   378,   158,  2972,   381,   123,  3631,   651,
     652,  1981,   637,   474,  1080,    11,   226,  2997,  1084,   620,
    2986,  2987,  2601,  2602,  1195,   853,   651,   652,   197,  3015,
      16,    17,    16,    17,   631,  1981,    16,    17,   391,   378,
      16,    17,   381,  2013,   250,  2923,    16,    17,    16,    17,
      16,    17,  1118,  1974,  2513,  2514,  3671,   525,   526,   422,
    1794,  1232,   474,  3785,  2657,  1986,  1132,  2013,  1989,  1990,
    2870,  3105,   372,  3378,   637,   103,  4229,    16,    17,   233,
     269,  4067,  4068,    16,    17,  2566,   439,   637,   651,   652,
     418,    16,    17,   372,   637,   165,    16,    17,   637,   139,
    3106,   586,   652,    85,  2585,   397,  2224,    16,    17,   652,
     658,   130,   483,   652,  1789,  1286,  1182,  2660,  2433,   637,
     545,    12,  2660,    16,    17,   211,   242,  1604,  1080,  1195,
    1864,   127,  1084,    12,   652,  2660,  3151,  2269,  3044,    12,
     520,  2346,   650,  1902,  1802,  3658,  3659,  2566,    16,    17,
      16,    17,   980,   578,   363,   637,   146,    16,    17,   130,
     555,   315,   390,    32,   378,  3151,  1232,   381,  2587,   445,
     652,  1237,  1343,   463,   204,   651,  2565,  1243,   658,   492,
    1804,  1839,  2522,    16,    17,   108,    22,   637,   308,   650,
     379,  2566,  1258,   654,  2583,  2584,  3811,  4099,    34,    16,
      17,  2978,  4177,   347,  2352,  2353,   474,   361,   671,  4111,
    2585,  2182,    48,  2182,    16,    17,   422,   652,   237,  1285,
    1286,    16,    17,   360,    60,    61,   370,   483,    75,  3339,
    1888,  1889,   250,  2714,   380,   445,   637,  2454,   650,  2720,
     409,   468,  3857,  2345,   167,   275,  1904,   378,  4625,   140,
     381,   652,   127,  2355,    16,    17,  1322,   347,  1324,    51,
    1326,   140,   637,   491,   253,   422,   237,   140,   226,   397,
     633,  1337,   160,  4038,   197,   264,   378,  1343,   606,   381,
      16,    17,    16,    17,   324,   280,  1936,   658,  1354,  1355,
     176,  1243,  2424,   130,  3793,  2714,    41,   417,   637,   652,
    3412,  2720,    12,   191,   286,  4179,   378,  4181,   424,   381,
     380,   112,   651,  3547,   115,    16,    17,  1383,   607,  1027,
    3261,  4474,  3434,  2712,  2713,  1391,   378,  2544,   286,   381,
     548,  1397,  2887,   633,   125,  3787,  2544,    16,    17,  2714,
    1406,    16,    17,   190,  3250,  2720,   378,   342,   139,   381,
    1416,  1417,  1523,   378,   633,   378,   381,    20,   381,    16,
      17,  1427,  1428,  1429,  1430,  1431,  1432,  2180,   243,   832,
    1078,  1437,   492,    25,  1326,   244,   530,  1443,  1444,   548,
    1446,   467,   650,   230,  1450,   381,     0,  1327,   133,    16,
      17,   120,   378,   383,   378,   381,   160,   381,   378,   268,
     237,   381,   378,  1355,   422,   381,   595,  1473,   378,   256,
     378,   381,   378,   381,   360,   381,   532,  1427,  1428,  1429,
    2637,  1431,  4187,   637,  4410,  4411,   445,   179,  3364,  2637,
     140,   191,    16,    17,  1444,   158,  4195,   100,   652,   378,
    1450,  3034,   381,    16,    17,   378,   656,  3026,   381,   479,
      16,    17,   644,   378,   156,   474,   381,  1523,   378,   651,
     418,   381,     8,  4016,   608,    16,    17,   621,  1534,   378,
     459,    52,   381,  1539,   445,  3068,  1542,  1543,  1430,   369,
    1432,  1421,    63,  3076,    30,   378,   409,  3080,   381,    16,
      17,   437,   221,   156,   404,    16,    17,   160,   652,    16,
      17,    16,    17,   474,   394,   215,   637,    16,    17,   194,
     378,   211,   378,   381,  1580,   381,  4131,  3969,   278,   378,
     651,  1473,   381,    16,    17,   474,   189,  3106,   191,   524,
      16,    17,   418,   324,  1600,   637,  1602,  1603,   409,  1605,
    1606,  3134,    16,    17,   207,   378,   207,   474,   381,   212,
     652,     8,  1618,   474,  1620,  4170,   256,   160,    16,    17,
     407,   378,   431,   226,   381,   637,   650,  3508,   360,  3803,
     548,   234,  3532,  3533,   658,   207,   378,    12,   241,   381,
     652,   233,   601,   378,   269,   637,   381,  1539,   235,  1529,
     253,  1543,  1602,  1603,   474,   483,  3015,   244,   327,   194,
     652,   264,   331,   244,  4015,   637,   269,  2923,   445,   338,
     184,   363,   637,   167,   637,   278,   378,    16,    17,   381,
     652,   253,    16,    17,   265,   548,   651,  1693,  1694,   652,
     601,   650,  3256,  2995,  1805,  2923,  3260,   474,   361,    16,
      17,  2759,   378,   514,   378,   381,   241,   381,  2853,    16,
      17,   637,   474,   637,    16,    17,   579,   637,    16,    17,
     452,   637,   233,   315,  2246,   555,   652,   637,   652,   637,
    3151,   637,   652,   222,  2349,   224,   652,   378,  2260,   650,
     381,   141,   652,   651,   347,   259,   652,   416,  1754,   492,
     482,  2908,  4451,  4452,   275,    16,    17,   620,   637,   378,
    2908,   650,   381,   378,   637,   140,   381,   370,   579,   361,
     127,  2293,   637,   652,  3892,  3893,   379,   637,   651,  3679,
     606,   378,    25,   650,   381,   122,   651,   184,   637,   650,
    1796,   651,  3151,    16,    17,  3278,  1802,   384,  1804,  1805,
    4372,  3279,   651,   472,   637,   658,   409,   379,  1919,   620,
    1816,   378,    16,    17,   381,  1821,  3311,   593,   651,   560,
    1826,  3150,   563,   558,   601,   270,   652,  3673,   273,   637,
     650,   637,    12,  1839,   577,    78,  3151,   567,   637,   361,
    2362,   269,   618,   651,   379,   651,   360,  3897,   211,   186,
     361,  1857,   651,   490,   378,  1861,   459,   381,   508,   509,
     194,   511,    17,   513,   637,   378,  2481,   530,   381,  3586,
      16,    17,   378,   650,   650,   381,   225,   214,   651,   482,
     637,   531,  1888,  1889,  1890,  1891,   207,   378,   650,   581,
     381,   650,    17,   256,   651,   637,  1902,   545,  1904,   658,
     548,   158,   637,    19,   548,   597,    17,   122,   153,   651,
    1916,   378,  2506,  1919,   381,   158,  2506,   378,    34,   164,
     381,   378,   552,   378,   381,   269,   381,   122,   531,   378,
    1936,    12,   381,   194,   177,   637,    21,   337,   530,   230,
      16,    17,   596,    59,  1950,   378,   283,  3828,   381,   651,
     644,   379,   378,   158,   623,   381,   604,   651,   621,    39,
     140,   637,   599,   637,   378,  1857,    46,   381,    69,  1861,
     639,   186,   100,   122,   419,   651,   233,   651,    25,   225,
     378,   230,  1988,   381,  3884,  3885,   122,  3887,  3888,   125,
     233,   141,   595,   230,  2000,  1875,   637,   207,  1890,  1891,
    3366,  2007,   135,   640,   607,   608,  1886,   222,   530,   224,
     651,   373,   608,    78,    34,   241,   141,   615,   637,   530,
     618,  2615,   637,   626,   191,   628,   191,   364,   233,   621,
     141,    78,   651,    47,     6,   379,   651,   186,  2920,   378,
     637,    61,   381,    11,   378,   613,   131,   381,   651,   652,
     186,  2961,   655,   656,   651,  2954,   652,  2967,   482,   140,
     194,   378,   658,   141,   381,  1945,  1014,  1015,   283,   651,
     637,   378,   315,   656,   381,  2961,   378,  3379,   214,   381,
     378,  2967,   658,   381,   651,    57,  2197,    83,   283,    25,
    2201,   160,   112,   158,  2993,   115,  1988,  3185,   286,   621,
     602,   558,   375,   123,   361,  2111,   234,  1055,  2969,   205,
     621,   158,   355,   637,   650,  2007,   190,   378,   361,  2125,
     381,  3209,  3210,   514,   637,   253,     6,   651,  2239,   125,
     177,   637,   377,  2244,   283,   445,   264,   652,   651,    11,
     108,  2021,    78,   650,  3232,   651,   637,   283,   555,   364,
    2030,  2031,   148,   293,   294,   378,   361,   650,   381,   127,
     651,  2041,  2042,  2043,  2044,   650,  2046,  2047,   233,   364,
     637,   650,   144,   650,   378,   650,   637,   381,   650,  3336,
     637,   650,   637,   171,   651,  2859,   233,   337,   637,   185,
     651,  2197,   308,   658,  4074,  2201,   651,  2203,   357,   358,
    2206,   370,   651,  2509,   637,   651,   652,  2213,  2214,  2215,
    2216,   637,   337,  2219,   650,   364,   312,   313,   651,   347,
    3950,   317,   318,   637,  2923,   651,   337,  2338,   364,   197,
      75,   608,   378,  2239,  3391,   381,   226,   651,  2244,   637,
     650,   177,   179,  3391,   650,   645,   646,   647,   648,   586,
      49,   293,   294,   651,   650,  4149,  2206,  2368,   226,   337,
    4141,  4142,  4143,  4144,   650,   108,   650,  3424,   315,  4113,
     650,  2151,   650,   530,  2154,  2155,  3424,  2157,   651,   652,
    2160,  2161,  2162,  2163,  2164,  2165,  2166,   530,   497,  2169,
     355,  2171,   608,    29,   434,   435,   361,   233,   637,   650,
      78,  2607,   378,   637,  4150,   381,   474,  2905,   355,   554,
     650,   279,   651,  4157,   361,    29,  4160,  4161,  4162,  4163,
     637,  2213,  2214,  2215,   650,   530,  2848,  2633,  2634,   349,
     637,   459,  2338,    78,   651,   637,   652,  4067,  4068,   637,
     651,   652,   658,    30,   651,   190,    63,    60,    61,   651,
     651,   652,    69,   651,    12,   608,  4237,  2363,    75,    72,
     485,   486,  2368,   428,   621,   505,   506,   507,   650,  3407,
    3408,   586,    89,   216,   485,   486,   637,   280,   621,   315,
     158,  2387,   629,   630,    42,   230,   358,  2393,  2394,    49,
    2396,   586,   434,   435,  3793,   652,   650,    32,   651,   652,
     651,   652,   650,   531,   280,   652,  3494,   485,   486,   652,
     650,   256,  1840,   652,   637,  1843,   621,  2423,  1846,   355,
     357,   358,  4266,  4267,  4270,   361,   363,  3683,   651,   650,
    3329,  4275,   751,   637,   651,   652,    94,   586,   651,   652,
      98,   409,  2553,  2554,   612,   613,   468,   651,  2454,   421,
     586,   423,  2458,   650,   773,   233,   650,  2463,  2464,  2465,
    4177,    12,   645,  3620,   650,   530,   650,   786,   787,  2475,
     490,  2477,  3620,   190,   650,  3731,  3534,   651,   652,   196,
      16,    17,   650,   530,   650,  4215,  4216,   650,   233,  3975,
    3976,   637,   650,   643,   644,   645,   646,   647,   648,   650,
    2506,  2393,  2394,   650,  2396,   651,   141,  2513,  2514,   650,
    4029,  4030,   480,   230,   658,  2626,   641,   642,   643,   644,
     645,   646,   647,   648,   651,   652,   591,   655,   122,   141,
     641,   642,   643,   644,   645,   646,   647,   648,  2544,   256,
      60,    61,   385,   563,   650,   141,   391,  2553,  2554,   658,
     122,   394,  4238,   125,   595,  4148,   621,  4243,   401,  4245,
     650,   637,   407,  3558,   642,   643,   644,   645,   646,   647,
     648,  2463,  2464,  2465,   621,   651,    20,   355,   546,   599,
     548,   482,  4312,   361,   650,   100,   650,   652,  2594,   140,
     248,   650,   186,  2599,   530,  2475,   650,  4327,  2604,  2605,
     651,   652,  2595,  2609,   650,  2611,   650,  2597,   166,   244,
     355,  4341,   650,  2606,   186,  2621,   361,  2623,  2624,  2612,
    2626,  2627,   651,   652,    78,   650,  2632,   651,   652,  2635,
     462,  2637,   244,   268,   651,   652,   604,  4123,   650,    93,
    2646,  4127,   214,  2636,   581,   122,   651,   652,  2641,   650,
     428,  2657,   650,   496,  2647,  2648,   100,   650,  2664,  2665,
     597,   650,   618,   619,   215,   621,   324,   623,  4398,   650,
    2676,   651,   652,   650,   391,  1094,  1095,  1096,   651,   652,
    4410,  4411,   269,   428,   650,   621,   650,  1106,  3446,   283,
     407,  3449,  3450,    78,   191,    78,   651,   652,  3220,   651,
     652,   650,   337,  4189,  4190,   651,   652,   650,  3466,   186,
      93,   283,   156,   524,   546,   650,   160,   650,  1137,   234,
     552,  1140,   357,   358,   650,   337,   111,  4457,   650,   387,
      31,   141,  4626,  2613,  2614,  2741,  2742,  4467,   253,   651,
     652,   337,  1161,  1162,   651,   652,  1165,   191,    26,   264,
    3272,   134,   530,   650,  2646,   651,   652,   651,   652,   650,
    2640,   604,   650,   207,  1183,  1184,   651,   652,   212,   650,
     364,  3365,   604,   158,  4504,  3365,  4506,   651,   652,    80,
     122,   651,   652,   500,   650,   530,  4516,   650,   620,    63,
     234,    69,   364,   650,    72,    69,   431,   241,    76,   650,
      78,    75,   650,  4533,   258,  4535,   283,  4537,   650,   253,
     651,   652,   650,   591,  4544,    89,   651,   652,   651,   652,
     264,   650,   122,   545,  4554,   269,    36,   651,   652,   474,
    2710,   166,   347,   524,   278,   651,   652,   482,  4568,  4569,
     280,   499,  3516,   621,   186,   230,   591,   125,   157,  2741,
     485,   486,   652,   154,  4584,  4585,    88,   122,   652,  4589,
     125,   651,   652,   498,  2870,  3706,  3707,   652,  2874,   651,
     652,   371,   214,   485,   486,   258,   621,   541,  3719,   596,
    2886,   335,   651,   652,   542,  3726,   186,   364,   651,   485,
     486,   651,   652,   651,   652,   651,   652,   156,  2904,  2905,
     651,   652,  2908,   347,  4216,   115,   360,   125,   122,   111,
    3751,   125,   122,  3754,   214,   657,   190,  2923,  3913,  2925,
       6,   186,   196,   650,  3919,   110,   370,   337,     4,   314,
     651,   652,   652,  2939,  4006,   379,  3047,  4268,  4269,  4268,
    4269,   283,   651,   652,   459,    58,   394,   332,   473,   214,
    3544,   620,   335,   651,   652,   244,   230,   508,   509,   510,
     511,   512,   513,   651,   652,   409,   420,   612,   613,   179,
     355,   652,   186,   391,   357,   358,   186,   360,   256,   141,
     531,    56,   256,   283,   651,   652,   150,   151,   651,   652,
    4147,   437,   586,   171,  2886,  3829,  3830,  1169,  1170,  4147,
     214,  3349,  3350,   650,   214,   650,   641,   642,   643,   644,
     645,   646,   647,   648,   586,   459,   531,   111,   283,  3025,
      26,    27,   364,  3029,  3030,  2394,   223,  2396,  3034,   641,
     642,   643,   644,   645,   646,   647,   648,   420,   482,  3601,
    3602,  3047,  3839,  3840,  3050,   641,   642,   643,   644,   645,
     646,   647,   648,   652,    60,    61,    62,   652,   658,  2939,
     514,    72,  3068,   176,   364,    12,    72,   180,   625,   283,
    3076,   651,    78,   283,  3080,   485,   486,   651,   191,   357,
     358,    87,   244,   140,     9,   363,  4398,   531,   652,   658,
    2970,  2971,   370,  2973,  2463,  2464,  2465,   651,   651,   364,
      69,   651,   658,   404,    36,   111,   650,   268,  3114,   586,
     658,  3117,   652,   158,   100,    84,  3122,   652,   657,   125,
     280,   280,  3128,   129,   280,   426,  3132,   280,  3134,   407,
      49,   514,   280,   407,   280,   544,   545,   546,   348,   108,
     549,   550,   652,  3149,   553,   530,   555,   652,   160,   359,
     364,   595,   158,   363,   364,   408,  3162,   462,   545,   460,
     376,   546,   370,  3169,   608,   370,   652,   275,  3048,   652,
     392,  3845,   652,   567,  3180,   337,   652,  3057,  3128,   567,
     391,    12,   626,   115,   628,   652,   160,   370,    16,    17,
     122,   370,  4504,   652,  4506,  4352,    72,   652,   244,   247,
     478,   181,  4197,   503,  4352,   543,  1625,   651,   652,   645,
     323,   655,   656,   191,   652,   160,   600,  4099,   519,   495,
     395,  4533,   136,   174,   230,  3117,   500,   196,   370,  4111,
     652,   651,   238,   643,   644,   645,   646,   647,   648,   184,
     652,  3352,   160,   160,   586,   160,   652,   179,   234,   255,
     160,   160,   530,   198,   186,   160,  4568,  4569,   160,   160,
    3266,   230,   160,   160,   209,   160,  3860,   253,  3274,   160,
     160,   160,   160,   160,  3154,   160,  1695,  3169,   264,   160,
    1699,   160,   214,   160,   602,   160,   586,   160,   116,   117,
     118,   119,   120,  3299,   160,   160,  3302,  3303,  3304,  3305,
     632,   607,   370,   197,  1723,   418,   370,   370,   314,   652,
     279,  3317,   194,   652,   259,   260,   645,   651,   596,   644,
     651,   586,   596,   485,   486,   651,   332,   651,   651,   651,
    3336,  3337,   651,   194,  3340,   651,   650,   652,  3344,  3345,
    3346,   651,   287,   651,    84,   555,  3352,   651,   651,   651,
     560,   283,  3358,   563,   100,  4427,   652,   651,  4257,  3365,
    3366,   347,   595,   651,   651,   483,   650,   650,   108,   648,
     650,   581,   586,   555,   651,   555,   586,   652,   555,   589,
     386,   650,   545,   626,   370,  3391,   232,   650,   394,    11,
     218,   219,   220,   221,  3274,   650,  3402,   537,   652,   650,
     658,   650,   266,   194,   652,    81,  3412,    83,  3414,   354,
     652,   658,   658,  4010,   658,   651,   348,   417,  3424,   194,
     604,   482,   652,   652,  3430,   191,  3432,   167,  3434,    47,
     839,   363,   364,   643,   644,   514,  3547,   345,   473,   394,
     514,  4598,   514,  4438,  4439,   514,  4441,   514,  4520,   125,
    4598,    75,   391,   391,   391,  4612,   567,   197,   464,   136,
    4617,   406,   254,   546,  4612,  4622,   254,   391,   546,  4617,
     136,   391,   148,   459,  4622,    47,  4093,   393,   391,   641,
     642,   643,   644,   645,   646,   647,   648,   391,   234,   555,
     230,   391,   391,  4488,  3374,  4490,  4491,   440,   650,   327,
    3506,   329,   330,   331,   651,   160,   161,   253,   279,   185,
     338,   480,   650,   650,   658,   521,   522,   523,   264,   608,
     651,   154,   651,   240,   530,  3531,  3532,  3533,   240,  3640,
     658,   500,   651,   160,   651,   651,   651,   542,   652,   279,
     546,  3547,   651,   198,   550,   531,   651,    34,    35,   651,
     378,   652,   567,   381,   209,   652,   555,  4231,   116,   117,
     118,   119,   120,  4229,   275,    47,   571,   160,  4165,   650,
    4565,   633,   567,    60,    61,  4312,   160,   546,   194,   548,
      67,   241,   205,   552,  4580,   650,    73,   194,   416,   595,
    4327,   650,   650,   555,   249,   555,   250,   422,   652,   364,
     160,   347,   652,   160,  4341,   260,   160,   394,   479,  3615,
      97,   253,    99,   253,  3620,   382,   111,  3728,   328,  3499,
     111,   174,   109,   555,   370,  3631,   256,   596,   560,   658,
     256,   563,   287,   567,  3640,   604,   650,   650,   375,   207,
      20,   455,  3522,   471,   472,   242,   652,   650,   555,   581,
     391,   658,   645,   650,   586,   242,   650,   589,   650,   650,
     218,   219,   220,   221,   404,   652,   651,   651,   651,   409,
     157,   158,   651,  3679,   567,   652,   163,   658,   651,   166,
     651,   651,  3688,   651,   567,   650,   658,   567,   370,   226,
     651,  3697,  3803,   698,   658,   652,   351,  3690,   703,   270,
     391,   376,   652,   651,   658,   194,   194,   651,   195,   194,
     197,   643,   644,   459,   244,   601,   651,   204,   422,   206,
    4457,  4620,  3728,   160,   126,   253,   253,   370,   650,   734,
    4467,   652,   256,   256,   405,   370,   628,    78,   650,   370,
     480,   652,   229,   230,   231,   750,   652,    20,   651,  3755,
     370,  3862,   497,   429,   474,   651,  3762,   370,   379,   364,
    4354,    47,   476,   266,   457,   628,   278,   254,   652,   327,
    3650,   329,   330,   331,  3780,    11,   422,   147,   652,  4516,
     338,   650,   262,   651,   651,   531,   645,  3793,   275,   794,
     795,   796,   797,   650,   650,   623,  3688,  3803,  4535,   650,
    4537,   651,   807,   651,   651,   194,   546,  4544,  4474,   637,
     638,   639,   552,   651,   207,   652,   484,  4554,   160,  2154,
    2155,   308,  2157,   396,   253,  2160,  2161,  2162,  2163,  2164,
    2165,  2166,   253,   652,  2169,   650,  2171,   125,   125,   579,
     548,   650,   403,   650,    82,   658,   143,  4584,  4585,   651,
    3730,   492,  4589,   497,   469,   651,  3862,   652,   416,    20,
     269,   651,   651,    34,   604,   651,   651,   651,   651,  3875,
      34,   651,   651,   651,   651,   334,   258,   417,  3884,  3885,
     620,  3887,  3888,   651,   175,  4482,   373,   278,   652,  3769,
     205,   241,   568,   569,   570,   571,   572,   573,   574,   575,
     650,   652,   651,   658,    47,  4016,    55,   212,  4574,   652,
     334,   398,   160,   471,   472,   650,    65,   650,   608,   608,
     650,   408,   409,   650,   650,   412,   413,   651,    77,   650,
     311,   618,   618,   125,  4600,   650,   601,   256,   256,    34,
     363,    90,    91,    92,   364,   651,   433,   652,   650,  4623,
     364,   334,   173,   651,  3960,  3961,   628,   106,   376,   548,
     256,   612,   650,   608,   241,   370,  3972,   628,   652,   608,
     518,   359,   628,   651,   455,   613,    55,   364,   652,   555,
     555,   651,   601,   650,   536,  3865,    65,   650,   555,   155,
      84,   650,   479,   625,    31,   659,   191,   389,    77,  4005,
     376,   651,  4008,   651,   651,   492,   557,   136,   136,   409,
    4016,    90,    91,    92,   650,    74,   158,   191,   430,   625,
      31,   194,   651,    63,   376,    63,   651,   106,   537,  1034,
      14,   271,     5,   370,   370,   652,   650,   524,   241,   154,
     143,  4047,   376,   530,   656,   376,   134,   650,    47,    47,
      47,   153,    47,    47,   650,   650,   601,   130,  4064,   625,
     225,   548,   549,  4069,   154,   623,   285,   659,   656,  3961,
     124,   149,   559,   650,    53,    47,    47,    47,   143,   558,
     638,   639,   656,   652,   463,  1090,  1091,   465,   364,   651,
     154,   558,   210,   652,  1099,  1100,  1101,  1102,  1103,  1104,
    1105,   656,   652,   223,   651,   651,    53,   154,  1113,  1114,
     652,  1116,  1117,  4005,   191,   191,  1121,  1122,   605,   191,
    1125,  1126,  1127,  1128,    47,  1130,  1131,   558,   444,   616,
     627,   364,   125,  1138,  1139,   622,  1141,  1142,  1143,  1144,
    1145,  4147,   226,  1148,  1149,  1150,  1151,  1152,  1153,  1154,
    1155,  1156,  1157,  1158,   650,  1160,   482,   193,  1163,  1164,
    4271,  2375,   652,  1168,  2173,  3508,  2582,  1172,  1173,  1174,
    3509,   679,  3778,  4179,  4232,  4181,  4104,   326,  4417,  1011,
    1185,  1186,  1187,  4418,  3776,  3780,  3959,  4562,  4600,  1194,
      46,   604,  1826,  4199,   343,  1901,  1201,  1202,  1203,  2870,
    1205,  3950,  4208,  4570,  3950,  4454,  3950,  1212,  1213,  1214,
    4305,  1216,  1217,  1218,  1219,  1220,  3950,  1222,  1223,  1224,
    1225,  1226,  1227,  1228,  1229,  3950,  4454,  3950,  1233,  1234,
    3950,  3950,  4112,  3950,  3950,  3950,  4411,     6,  3950,  3950,
    4331,  4330,    11,  1053,    13,  2124,    15,   326,  2899,  3074,
    1532,  1536,  3614,  3317,  4262,  3968,  4262,    26,    27,  2904,
    1340,  4372,  4356,  4006,   343,  4271,  3617,  4520,  4435,  4482,
    4165,   533,  3155,  3525,  1595,  3434,  2742,  2117,  2125,  2667,
    3457,  3412,  3457,  3490,  3911,  3689,  3738,  4354,    57,  3728,
    2553,  3257,  2826,    62,    63,  3252,  3260,   538,  4186,    11,
     537,    70,    11,  4189,  4115,   454,  4190,  4123,  4127,    78,
    1609,  2211,  3972,  2660,  3919,  2124,  1487,   607,    87,  2449,
    3694,   470,  4433,  3413,  1590,  1483,  1543,    96,  1890,  2886,
    2416,  3312,   625,  1910,    34,  2466,  2331,  3274,  1132,   904,
    2859,  2245,   111,  2545,  3381,  2330,  4352,  4184,  4032,  4449,
    3506,  4450,  1106,  2356,  3424,  3876,   125,  1502,  4551,    59,
     129,    12,    13,  3862,  2471,  1355,  4372,    67,   137,   138,
    2216,  2411,  1244,  1326,  2453,   144,  3620,  3331,  3330,  4352,
    3391,  1618,   614,   152,   533,  4265,  1391,   156,   997,   158,
     694,   470,  1982,   997,  1435,   997,   997,   603,  1983,  1404,
     169,  1815,   551,  3432,  1464,  4518,  1362,  4547,  3315,  4379,
    4445,  4617,  4622,  1594,  3731,  3336,  1391,  1422,  3365,   602,
     189,    13,  2504,  1751,   602,  1939,  2497,  4433,  2496,  2490,
    1861,    34,  1905,   133,   889,  1848,  1378,  4139,  4145,   596,
    3299,   891,   529,  4449,  4450,  1600,   529,    -1,    99,  4094,
    3764,   679,   679,  4459,   533,   679,    59,    -1,   158,   228,
    4466,   230,   162,    -1,    67,    -1,    -1,    -1,    -1,   238,
      -1,    -1,   551,    -1,    -1,    -1,    -1,    -1,    -1,   130,
      -1,    -1,    -1,  4363,  4364,    -1,   255,    -1,    -1,    -1,
      13,    -1,    15,   144,    -1,    -1,    -1,  4608,    -1,   199,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    31,   278,
      -1,    -1,    35,    -1,    -1,    -1,   167,   217,    -1,   170,
      -1,    -1,    -1,    -1,    -1,    -1,    49,    50,  4534,    -1,
     133,   231,   183,  4539,    57,    -1,    -1,    -1,   130,    62,
      63,    -1,    -1,    -1,    -1,   314,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,   205,   158,    -1,    80,    -1,   162,
      -1,    -1,    -1,   332,    -1,    -1,    -1,   336,  4574,    -1,
      -1,    -1,    -1,    -1,    -1,   167,    99,    -1,   170,   230,
     280,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   183,  4598,    -1,  4600,    -1,   199,    -1,   121,    -1,
      -1,    -1,  4608,    -1,    -1,   374,  4612,   130,   131,   132,
     379,  4617,    -1,   205,   217,    -1,  4622,   386,    -1,    -1,
     143,   144,   391,    -1,    -1,   394,  1631,   278,   231,    -1,
      -1,    -1,    -1,   156,    -1,    -1,    -1,    -1,   230,    -1,
      -1,    -1,    -1,    -1,    -1,   237,    -1,   170,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   425,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,
     439,   440,   441,   442,    -1,    -1,    -1,   280,    -1,    -1,
     203,    -1,   205,    -1,    -1,    -1,   278,   210,    -1,    -1,
     213,    -1,    -1,    -1,    -1,   464,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,
      -1,    -1,    26,    27,   237,    -1,   239,   417,    -1,    -1,
      -1,    -1,    -1,    -1,  1729,  1730,  1731,    -1,    -1,    -1,
      -1,    -1,   432,    -1,   257,    -1,    -1,    -1,    -1,  1744,
      -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    -1,
     450,   274,   521,   522,   523,   278,    -1,    -1,    72,   410,
      -1,   530,    -1,   414,    78,  1770,    -1,    -1,    -1,    -1,
      -1,  1776,    -1,    87,  1779,    -1,  1781,   546,    -1,   430,
      -1,   550,  1787,    -1,  1789,  1790,    -1,   438,    -1,    -1,
      -1,    -1,    -1,   493,    -1,   446,    -1,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   408,    -1,    -1,    -1,    -1,
      -1,   125,    -1,   582,   417,   129,    -1,    -1,   410,    -1,
      -1,    -1,    -1,   474,   524,    -1,   595,    -1,    -1,   432,
      -1,    -1,    -1,    -1,    -1,    -1,   487,   488,   430,    -1,
      -1,    -1,    -1,    -1,   158,   545,   438,   450,   548,   549,
      -1,   374,    -1,    -1,   446,    -1,    -1,    -1,    -1,   559,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,  1874,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1885,   404,   474,    -1,    -1,    -1,    -1,   656,    -1,   540,
     493,    -1,   415,    -1,    -1,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,    -1,    -1,
      -1,    -1,  1917,    -1,   437,    -1,   230,   440,    -1,   442,
      -1,   524,   445,    -1,   238,   448,   449,    -1,   579,    -1,
      -1,    -1,  1937,    -1,    -1,   458,    13,   460,    15,  1944,
      -1,   255,    -1,    -1,    -1,   468,   549,    -1,   540,    -1,
     601,   474,   603,    -1,   268,    -1,   559,    -1,    35,   482,
      -1,    -1,    26,    27,   487,    -1,   489,    -1,    -1,    -1,
      -1,    -1,    49,    50,    -1,    -1,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    -1,    62,    63,   579,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   519,    -1,    62,    -1,
     314,    -1,   605,    80,    -1,    -1,   529,    -1,    -1,   601,
      -1,   603,    -1,    -1,    78,    -1,    -1,    -1,   332,    -1,
      -1,    -1,    99,    87,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   571,   121,    -1,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   130,   131,   132,    -1,    -1,    -1,   582,
      -1,   125,    -1,    -1,    -1,   129,   143,   144,    -1,    -1,
      -1,   594,   386,    -1,    -1,   598,    -1,    -1,   601,    -1,
     394,    -1,    -1,    -1,   607,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   170,   158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   188,   635,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   203,   650,   205,    -1,
      -1,    -1,    -1,   210,    -1,    -1,   213,    -1,    -1,    -1,
      -1,    -1,    -1,  2148,    -1,    -1,    -1,    -1,    -1,    -1,
     464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     237,    -1,   239,    -1,    -1,    -1,   230,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   238,   703,    -1,    -1,    -1,    -1,
     257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   255,    -1,    -1,    -1,    -1,    -1,   274,    -1,    -1,
      -1,   278,    -1,    -1,    -1,    -1,   734,   521,   522,   523,
      -1,    -1,    -1,    -1,    -1,    -1,   530,    -1,    -1,    -1,
    2225,    -1,   750,    -1,  2229,    -1,    -1,    -1,    -1,  2234,
    2235,    -1,   546,    -1,    -1,    -1,   550,    -1,  2243,    -1,
      -1,  2246,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     314,  2256,  2257,    -1,  2259,  2260,    -1,  2262,  2263,  2264,
    2265,  2266,    12,    13,  2269,    -1,    -1,    -1,   332,   797,
      -1,    -1,    -1,  2278,    -1,    -1,    -1,    -1,    -1,    -1,
    2285,   595,  2287,    -1,  2289,  2290,    -1,  2292,  2293,    -1,
      -1,    -1,  2297,  2298,  2299,    -1,    -1,   374,  2303,  2304,
    2305,    -1,  2307,    -1,  2309,    -1,  2311,    -1,  2313,    -1,
    2315,    -1,    -1,    -1,   391,  2320,    -1,    -1,    -1,    -1,
      -1,    -1,   386,    -1,    -1,    -1,    -1,   404,    -1,    -1,
     394,    -1,    -1,    -1,  2339,    -1,   650,    -1,   415,    -1,
      -1,  2346,    -1,    -1,  2349,    -1,    -1,    -1,    -1,    99,
    2355,    -1,    -1,  2358,    -1,    -1,    -1,  2362,    -1,    -1,
     437,    -1,    -1,   440,    -1,   442,    -1,    -1,   445,    -1,
      -1,   448,   449,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     130,   458,    -1,   460,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   468,    -1,    -1,   144,    -1,    -1,   474,    -1,    -1,
     464,    -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,    -1,    -1,   167,    -1,  2424,
     170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   183,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   519,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   529,    -1,    -1,   205,    -1,   521,   522,   523,
      -1,    -1,    -1,    -1,    -1,    -1,   530,    -1,    -1,    -1,
      -1,   227,    -1,    -1,    -1,    -1,  2481,    -1,    -1,    -1,
     230,    -1,   546,    -1,    -1,    -1,   550,   237,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   582,  1034,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   594,    -1,    -1,
      -1,   598,    -1,    -1,   601,    -1,    -1,    -1,   278,    -1,
     607,   595,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,   635,    -1,
    2565,    -1,  1090,  1091,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1099,  1100,   650,    -1,  1103,  1104,  1105,  2583,  2584,
      -1,    -1,    -1,    -1,    -1,  1113,  1114,    -1,  1116,  1117,
      -1,    -1,    -1,  1121,    -1,    -1,    -1,  1125,  1126,  1127,
    1128,    -1,  1130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1138,  1139,    -1,  1141,  1142,    -1,    -1,    -1,    -1,    -1,
    1148,  1149,  1150,    -1,    -1,  1153,  1154,  1155,  1156,  1157,
    1158,    -1,  1160,    -1,    -1,  1163,  1164,    -1,    -1,    -1,
    1168,    33,    34,    -1,  1172,  1173,  1174,    39,    -1,    41,
      -1,    43,    44,    -1,    -1,    -1,    -1,  1185,  1186,  1187,
     410,    -1,    -1,    -1,   414,    -1,  1194,    -1,    -1,    61,
      -1,    -1,    -1,  1201,  1202,  1203,    -1,    -1,   434,   435,
     430,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   438,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   446,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1234,  2712,  2713,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     112,    -1,    -1,   115,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   123,    -1,    -1,    -1,    -1,    -1,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2763,    -1,
      -1,    -1,  2767,    -1,    -1,    -1,    -1,   159,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2787,  2788,    -1,    -1,    -1,    -1,    -1,    -1,
     540,    -1,    -1,   185,    -1,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2808,    -1,    -1,    -1,    -1,   200,   201,
      -1,    -1,  2817,    -1,  2819,    -1,  2821,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   579,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2848,    -1,    -1,    -1,    -1,  2853,    -1,
     242,   601,    -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1391,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1404,  2882,    -1,    -1,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,
     282,    -1,   284,    -1,  1422,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     6,   339,   340,   341,
      -1,    11,    -1,    13,   346,    -1,    -1,   349,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    26,    27,    -1,    -1,
      -1,  2976,    -1,    -1,   366,   367,    26,    27,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3000,    -1,    57,    -1,    -1,
      -1,    -1,    62,    -1,    -1,    -1,    -1,   399,   400,    -1,
      60,    61,    62,    -1,    -1,    -1,    -1,    -1,    78,    -1,
      -1,    -1,    72,    -1,    -1,    -1,    -1,    87,    78,    -1,
      -1,    -1,   424,    -1,    -1,    -1,    96,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   125,    -1,   137,    -1,   129,
      -1,    -1,    -1,    -1,   144,    -1,   478,    -1,    -1,    -1,
     482,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,
      -1,    -1,   494,  1631,    -1,    -1,    -1,    -1,   158,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3125,  3126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3150,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   556,    -1,    -1,    -1,   560,    -1,
     230,   563,   564,   565,   566,    -1,    -1,    -1,   238,    -1,
     230,    -1,    -1,  3188,    -1,    -1,    -1,    -1,   238,    -1,
      -1,    -1,    -1,    -1,    -1,   255,    -1,    -1,    -1,    -1,
      -1,  1729,  1730,  1731,    -1,   255,    -1,    -1,  3213,    -1,
      -1,    -1,  3217,  3218,    -1,  3220,    -1,    -1,   278,    -1,
      -1,    -1,   614,   615,  3229,    -1,    -1,    -1,    -1,  3234,
      -1,    -1,  3237,    -1,  3239,  3240,    -1,    -1,    -1,    -1,
      -1,    -1,  1770,    -1,    -1,    -1,    -1,   639,    -1,    -1,
      -1,  1779,    -1,  1781,   314,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   314,    -1,    -1,  3272,    -1,    -1,
      -1,    -1,   332,    -1,    -1,    -1,   336,    -1,    -1,    -1,
      -1,    -1,   332,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
      -1,    -1,    -1,    -1,    -1,  3330,   386,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,   386,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,  1874,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1885,    -1,  3364,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     440,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3393,  1917,
      -1,    -1,    -1,    -1,    -1,    -1,  3401,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   464,    -1,    -1,    -1,    -1,  1937,
      -1,    -1,    -1,    -1,   464,    -1,  1944,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,    -1,    -1,    -1,    -1,    -1,
     530,   521,   522,   523,    -1,    -1,    -1,    -1,    -1,    -1,
     530,    -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,
     550,    -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,
     550,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   595,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   595,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3621,    -1,    -1,    -1,
    2148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3662,  3663,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3671,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2225,    -1,    -1,
      -1,  2229,    -1,    -1,    -1,    -1,  2234,  2235,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2243,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2256,  2257,
      -1,  2259,    -1,    -1,  2262,  2263,  2264,  2265,  2266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2278,    -1,    -1,    -1,    -1,    -1,    -1,  2285,    -1,  2287,
      -1,  2289,  2290,    -1,  2292,    -1,    -1,    -1,    -1,  2297,
    2298,  2299,    -1,    -1,    -1,  2303,  2304,  2305,    -1,  2307,
      -1,  2309,    -1,  2311,    -1,  2313,    -1,  2315,    -1,    -1,
      -1,    -1,  2320,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3811,    -1,    -1,    -1,
    3815,  2339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2355,    -1,    -1,
    2358,    -1,    -1,    -1,    -1,    -1,    -1,  3842,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3857,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3950,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4006,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4014,
      -1,    -1,    -1,    -1,    -1,    -1,  4021,    -1,  4023,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4061,    -1,    -1,    -1,
      -1,    -1,  4067,  4068,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4131,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4170,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4201,    -1,  4203,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4213,    -1,
    4215,  4216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2763,    -1,  4242,    -1,  2767,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2787,
    2788,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2808,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2817,
      -1,  2819,    -1,  2821,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4310,    -1,  4312,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4327,  4328,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4341,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4353,    -1,
      -1,    -1,    -1,    -1,  2882,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4397,  4398,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4410,  4411,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2976,    -1,
      -1,    -1,  4457,    -1,    -1,    -1,    -1,    -1,    -1,  4464,
      -1,    -1,  4467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3000,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4497,    -1,    -1,    -1,    -1,    -1,    -1,  4504,
      -1,  4506,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4516,    -1,    -1,    -1,  4520,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4533,    -1,
    4535,    -1,  4537,    -1,    -1,    -1,    -1,    -1,    -1,  4544,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4554,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4568,  4569,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4584,
    4585,    -1,    -1,    -1,  4589,    -1,    -1,    -1,    -1,    -1,
    4595,    -1,    -1,    -1,    -1,    -1,    -1,  3125,  3126,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4625,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3188,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3213,    -1,    -1,    -1,  3217,
    3218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3229,    -1,    -1,    -1,    -1,  3234,    -1,    -1,  3237,
      -1,  3239,  3240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3306,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3364,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3393,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3401,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3621,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3662,  3663,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3671,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3811,    -1,    -1,    -1,  3815,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3842,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3857,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4014,    -1,    -1,    -1,
      -1,    -1,    -1,  4021,    -1,  4023,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4061,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4131,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4201,    -1,  4203,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4213,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4328,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4353,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,  4397,
      -1,    34,    35,    36,    37,    38,    39,    40,    -1,    42,
      43,    44,    45,    46,    -1,    48,    49,    -1,    -1,    52,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,  4464,    -1,   101,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,  4497,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,   208,    -1,   210,   211,    -1,
     213,   214,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,   225,    -1,   227,   228,   229,  4595,   231,    -1,
     233,    -1,    -1,    -1,   237,   238,   239,   240,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,  4625,   261,   262,
      -1,   264,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
     283,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,   348,   349,   350,    -1,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,   527,   528,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,   555,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,    -1,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,   609,   610,   611,   612,
     613,    -1,    -1,   616,   617,    -1,   619,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,    -1,   639,    -1,    -1,    -1,
     643,   644,    -1,    -1,    -1,    -1,   649,   650,    -1,    -1,
     653,   654,    -1,    -1,   657,   658,     5,    -1,     7,     8,
       9,    10,    11,    12,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    34,    35,    36,    37,    38,
      39,    40,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,   101,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
      -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,   208,
      -1,   210,   211,    -1,   213,   214,    -1,   216,   217,    -1,
      -1,    -1,   221,   222,   223,   224,   225,    -1,   227,   228,
     229,    -1,   231,    -1,   233,    -1,    -1,    -1,   237,   238,
     239,   240,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,
      -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,
     259,    -1,    -1,   262,    -1,   264,   265,   266,    -1,    -1,
      -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,
     279,   280,    -1,    -1,   283,    -1,    -1,    -1,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,    -1,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,   328,
      -1,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
     349,   350,    -1,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,    -1,   408,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,
      -1,   490,   491,   492,   493,    -1,   495,   496,   497,   498,
     499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
     509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,   524,    -1,    -1,   527,   528,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,    -1,   555,   556,   557,    -1,
     559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,   577,   578,
      -1,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,
      -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,
     609,   610,   611,   612,   613,    -1,    -1,   616,   617,    -1,
     619,   620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,
      -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,    -1,
     639,    -1,    -1,    -1,   643,   644,    -1,    -1,    -1,    -1,
     649,   650,    -1,    -1,   653,   654,    -1,    -1,   657,   658,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    34,
      35,    36,    37,    38,    39,    40,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,    -1,    -1,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,   208,    -1,   210,   211,    -1,   213,   214,
      -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,   224,
     225,    -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,
      -1,    -1,   237,   238,   239,   240,    -1,    -1,   243,    -1,
      -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,
     255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,   264,
     265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,    -1,   279,   280,    -1,    -1,   283,    -1,
      -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,    -1,    -1,    -1,   323,   324,
     325,   326,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
      -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,
      -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,
     495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,
     505,   506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,   524,
      -1,    -1,   527,   528,   529,   530,    -1,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,    -1,
     555,   556,   557,    -1,   559,   560,   561,   562,   563,    -1,
      -1,    -1,    -1,   568,   569,   570,   571,   572,   573,   574,
     575,    -1,   577,   578,    -1,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,    -1,   593,   594,
      -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,
     605,   606,    -1,    -1,   609,   610,   611,   612,   613,    -1,
      -1,   616,   617,    -1,   619,   620,   621,   622,   623,   624,
      -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,
     635,   636,    -1,    -1,   639,    -1,    -1,    -1,   643,   644,
      -1,    -1,    -1,    -1,   649,   650,    -1,    -1,   653,   654,
      -1,    -1,   657,   658,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    34,    35,    36,    37,    38,    39,    40,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,    -1,    -1,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,   208,    -1,   210,
     211,    -1,   213,   214,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,   225,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,   237,   238,   239,   240,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,   264,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,   283,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
      -1,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,   527,   528,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,   555,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,   609,   610,
     611,   612,   613,    -1,    -1,   616,   617,    -1,   619,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,    -1,   639,    -1,
      -1,    -1,   643,   644,    -1,    -1,    -1,    -1,   649,   650,
      -1,    -1,   653,   654,    -1,    -1,   657,   658,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    34,    35,    36,
      37,    38,    39,    40,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,    -1,    -1,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,   208,    -1,   210,   211,    -1,   213,   214,    -1,   216,
     217,    -1,    -1,    -1,   221,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
     237,   238,   239,   240,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,    -1,   262,    -1,   264,   265,   266,
      -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,   283,    -1,    -1,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,
     477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,   490,   491,   492,   493,    -1,   495,   496,
     497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,   524,    -1,    -1,
     527,   528,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,   555,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,    -1,   593,   594,    -1,    -1,
     597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,
      -1,    -1,   609,   610,   611,   612,   613,    -1,    -1,   616,
     617,    -1,   619,   620,   621,   622,   623,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,
      -1,    -1,   639,    -1,    -1,    -1,   643,   644,    -1,    -1,
      -1,    -1,   649,   650,    -1,    -1,   653,   654,    -1,    -1,
     657,   658,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    34,    35,    36,    37,    38,    39,    40,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,   101,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,   208,    -1,   210,   211,    -1,
     213,   214,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,   225,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,   237,   238,   239,   240,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,   264,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
     283,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,   348,   349,   350,    -1,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,   527,   528,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,   555,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,   609,   610,   611,   612,
     613,    -1,    -1,   616,   617,    -1,   619,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,    -1,   639,    -1,    -1,    -1,
     643,   644,    -1,    -1,    -1,    -1,   649,   650,    -1,    -1,
     653,   654,    -1,    -1,   657,   658,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    34,    35,    36,    37,    38,
      39,    40,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,   101,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
      -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,   208,
      -1,   210,   211,    -1,   213,   214,    -1,   216,   217,    -1,
      -1,    -1,   221,   222,   223,   224,   225,    -1,   227,   228,
     229,    -1,   231,    -1,   233,    -1,    -1,    -1,   237,   238,
     239,   240,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,
      -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,
     259,    -1,    -1,   262,    -1,   264,   265,   266,    -1,    -1,
      -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,
     279,   280,    -1,    -1,   283,    -1,    -1,    -1,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,    -1,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,   328,
      -1,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
     349,   350,    -1,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,    -1,   408,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,
      -1,   490,   491,   492,   493,    -1,   495,   496,   497,   498,
     499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
     509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,   524,    -1,    -1,   527,   528,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,    -1,   555,   556,   557,    -1,
     559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,   577,   578,
      -1,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,
      -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,
     609,   610,   611,   612,   613,    -1,    -1,   616,   617,    -1,
     619,   620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,
      -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,    -1,
     639,    -1,    -1,    -1,   643,   644,    -1,    -1,    -1,    -1,
     649,   650,    -1,    -1,   653,   654,    -1,    -1,   657,   658,
       5,    -1,     7,     8,     9,    10,    11,    12,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    34,
      35,    36,    37,    38,    39,    40,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,
     195,    -1,   197,    -1,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,   208,    -1,   210,   211,    -1,   213,   214,
      -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,   224,
     225,    -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,
      -1,    -1,   237,   238,   239,   240,    -1,    -1,   243,    -1,
      -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,
     255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,   264,
     265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,    -1,   279,   280,    -1,    -1,   283,    -1,
      -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,    -1,    -1,    -1,   323,   324,
     325,   326,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
      -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,
      -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,
     495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,
     505,   506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,   524,
      -1,    -1,   527,   528,   529,   530,    -1,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,    -1,
     555,   556,   557,    -1,   559,   560,   561,   562,   563,    -1,
      -1,    -1,    -1,   568,   569,   570,   571,   572,   573,   574,
     575,    -1,   577,   578,    -1,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,    -1,   593,   594,
      -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,
     605,   606,    -1,    -1,   609,   610,   611,   612,   613,    -1,
      -1,   616,   617,    -1,   619,   620,   621,   622,   623,   624,
      -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,
     635,   636,    -1,    -1,   639,    -1,    -1,    -1,   643,   644,
      -1,    -1,    -1,    -1,   649,   650,    -1,    -1,   653,   654,
      -1,    -1,   657,   658,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    34,    35,    36,    37,    38,    39,    40,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,   208,    -1,   210,
     211,    -1,   213,   214,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,   225,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,   237,   238,   239,   240,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,   264,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,   283,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
      -1,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,   527,   528,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,   555,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,   609,   610,
     611,   612,   613,    -1,    -1,   616,   617,    -1,   619,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,    -1,   639,    -1,
      -1,    -1,   643,   644,    -1,    -1,    -1,    -1,   649,   650,
      -1,    -1,   653,   654,    -1,    -1,   657,   658,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    34,    35,    36,
      37,    38,    39,    40,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,   208,    -1,   210,   211,    -1,   213,   214,    -1,   216,
     217,    -1,    -1,    -1,   221,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
     237,   238,   239,   240,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,    -1,   262,    -1,   264,   265,   266,
      -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,   283,    -1,    -1,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,
     477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,   490,   491,   492,   493,    -1,   495,   496,
     497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,   524,    -1,    -1,
     527,   528,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,   555,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,    -1,   593,   594,    -1,    -1,
     597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,
      -1,    -1,   609,   610,   611,   612,   613,    -1,    -1,   616,
     617,    -1,   619,   620,   621,   622,   623,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,
      -1,    -1,   639,    -1,    -1,    -1,   643,   644,    -1,    -1,
      -1,    -1,   649,   650,    -1,    -1,   653,   654,    -1,    -1,
     657,   658,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    34,    35,    36,    37,    38,    39,    40,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,   101,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,   208,    -1,   210,   211,    -1,
     213,   214,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,   225,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,   237,   238,   239,   240,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,   264,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
     283,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,   348,   349,   350,    -1,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,   527,   528,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,   555,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,   609,   610,   611,   612,
     613,    -1,    -1,   616,   617,    -1,   619,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,    -1,   639,    -1,    -1,    -1,
     643,   644,    -1,    -1,    -1,    -1,   649,   650,    -1,    -1,
     653,   654,    -1,    -1,   657,   658,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    34,    35,    36,    37,    38,
      39,    40,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,   101,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
      -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,   208,
      -1,   210,   211,    -1,   213,   214,    -1,   216,   217,    -1,
      -1,    -1,   221,   222,   223,   224,   225,    -1,   227,   228,
     229,    -1,   231,    -1,   233,    -1,    -1,    -1,   237,   238,
     239,   240,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,
      -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,
     259,    -1,    -1,   262,    -1,   264,   265,   266,    -1,    -1,
      -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,
     279,   280,    -1,    -1,   283,    -1,    -1,    -1,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,    -1,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,    -1,    -1,   323,   324,   325,   326,   327,   328,
      -1,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
     349,   350,    -1,    -1,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,    -1,   408,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,
      -1,   490,   491,   492,   493,    -1,   495,   496,   497,   498,
     499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
     509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,   524,    -1,    -1,   527,   528,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,    -1,   555,   556,   557,    -1,
     559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,   577,   578,
      -1,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,
      -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,
     609,   610,   611,   612,   613,    -1,    -1,   616,   617,    -1,
     619,   620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,
      -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,    -1,
     639,    -1,    -1,    -1,   643,   644,    -1,    -1,    -1,    -1,
     649,   650,    -1,    -1,   653,   654,    -1,    -1,   657,   658,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    34,
      35,    36,    37,    38,    39,    40,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,
     195,    -1,   197,    -1,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,   208,    -1,   210,   211,    -1,   213,   214,
      -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,   224,
     225,    -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,
      -1,    -1,   237,   238,   239,   240,    -1,    -1,   243,    -1,
      -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,
     255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,   264,
     265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,    -1,   279,   280,    -1,    -1,   283,    -1,
      -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,    -1,    -1,    -1,   323,   324,
     325,   326,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
      -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,
      -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,
     495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,
     505,   506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,   524,
      -1,    -1,   527,   528,   529,   530,    -1,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,    -1,
     555,   556,   557,    -1,   559,   560,   561,   562,   563,    -1,
      -1,    -1,    -1,   568,   569,   570,   571,   572,   573,   574,
     575,    -1,   577,   578,    -1,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,    -1,   593,   594,
      -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,
     605,   606,    -1,    -1,   609,   610,   611,   612,   613,    -1,
      -1,   616,   617,    -1,   619,   620,   621,   622,   623,   624,
      -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,
     635,   636,    -1,    -1,   639,    -1,    -1,    -1,   643,   644,
      -1,    -1,    -1,    -1,   649,   650,    -1,    -1,   653,   654,
      -1,    -1,   657,   658,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    34,    35,    36,    37,    38,    39,    40,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,   208,    -1,   210,
     211,    -1,   213,   214,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,   225,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,   237,   238,   239,   240,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,   264,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,   283,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
      -1,    -1,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,   527,   528,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,   555,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,   609,   610,
     611,   612,   613,    -1,    -1,   616,   617,    -1,   619,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,    -1,   639,    -1,
      -1,    -1,   643,   644,    -1,    -1,    -1,    -1,   649,   650,
      -1,    -1,   653,   654,    -1,    -1,   657,   658,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    34,    35,    36,
      37,    38,    39,    40,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,   208,    -1,   210,   211,    -1,   213,   214,    -1,   216,
     217,    -1,    -1,    -1,   221,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
     237,   238,   239,   240,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,    -1,   262,    -1,   264,   265,   266,
      -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,   283,    -1,    -1,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,
     477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,   490,   491,   492,   493,    -1,   495,   496,
     497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,   524,    -1,    -1,
     527,   528,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,   555,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,    -1,   593,   594,    -1,    -1,
     597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,
      -1,    -1,   609,   610,   611,   612,   613,    -1,    -1,   616,
     617,    -1,   619,   620,   621,   622,   623,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,
      -1,    -1,   639,    -1,    -1,    -1,   643,   644,    -1,    -1,
      -1,    -1,   649,   650,    -1,    -1,   653,   654,    -1,    -1,
     657,   658,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    36,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,
     213,   214,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
     283,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,   348,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,
     363,   364,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,   555,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,    -1,   639,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,   657,   658,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
      -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,
     196,   197,    -1,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,
     216,   217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,   231,    -1,   233,    -1,    -1,
      -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,
      -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,
     256,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,
     266,    -1,   268,    -1,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,   308,   309,   310,    -1,   312,   313,   314,   315,
      -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,
     326,   327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,
     356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,    -1,   408,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,
     446,    -1,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,   473,   474,    -1,
      -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,
      -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,   495,
     496,   497,   498,   499,   500,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,   524,    -1,
      -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,   535,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,
     556,   557,    -1,   559,   560,   561,   562,   563,    -1,    -1,
      -1,    -1,   568,   569,   570,   571,   572,   573,   574,   575,
      -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,   585,
      -1,   587,   588,    -1,   590,   591,    -1,   593,   594,    -1,
      -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,
     606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     616,    -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,
      -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,
     636,    -1,    -1,   639,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,   658,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,   196,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,
     211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,   256,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,   500,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,    -1,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,   582,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,    -1,   639,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,   658,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
      -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,
      -1,   197,    -1,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,
     216,   217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,
      -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,
      -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,
      -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,   308,   309,   310,    -1,   312,   313,   314,   315,
      -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,
     326,   327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,
     356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,   387,    -1,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,    -1,   408,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,
     446,    -1,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,   473,   474,    -1,
      -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,
      -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,   495,
     496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,   524,    -1,
      -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,   535,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,
     556,   557,    -1,   559,   560,   561,   562,   563,    -1,    -1,
      -1,    -1,   568,   569,   570,   571,   572,   573,   574,   575,
      -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,   585,
      -1,   587,   588,    -1,   590,   591,    -1,   593,   594,    -1,
      -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,
     606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     616,    -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,
      -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,
     636,    -1,    -1,   639,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,   651,    -1,    18,    19,    -1,
      -1,    22,   658,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,
     211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,    -1,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,   582,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,    -1,   639,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,
     651,     7,     8,     9,    10,    11,   657,   658,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
      -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,
      -1,   197,    -1,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,
     216,   217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,
      -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,
      -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,
      -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,   308,   309,   310,    -1,   312,   313,   314,   315,
      -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,
     326,   327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,
     356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,   387,    -1,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,    -1,   408,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,
     446,    -1,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,   473,    -1,    -1,
      -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,
      -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,   495,
     496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,   524,    -1,
      -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,   535,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,
     556,   557,    -1,   559,   560,   561,   562,   563,    -1,    -1,
      -1,    -1,   568,   569,   570,   571,   572,   573,   574,   575,
      -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,   585,
      -1,   587,   588,    -1,   590,   591,    -1,   593,   594,    -1,
      -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,
     606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     616,    -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,
      -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,
     636,    -1,    -1,   639,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,   650,    -1,    -1,    18,    19,    -1,
      -1,    22,   658,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,
     211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,
     241,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,    -1,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,   582,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,    -1,   639,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,   658,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
      -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,
      -1,   197,    -1,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,
     216,   217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,
      -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,
      -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,
      -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,   308,   309,   310,    -1,   312,   313,   314,   315,
      -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,
     326,   327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,
     356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,   387,    -1,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,    -1,   408,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,
     446,    -1,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,   473,    -1,    -1,
      -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,
      -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,   495,
     496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,   524,    -1,
      -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,   535,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,
     556,   557,    -1,   559,   560,   561,   562,   563,    -1,    -1,
      -1,    -1,   568,   569,   570,   571,   572,   573,   574,   575,
      -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,   585,
      -1,   587,   588,    -1,   590,   591,    -1,   593,   594,    -1,
      -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,
     606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     616,    -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,
      -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,
     636,    -1,    -1,   639,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,   650,    -1,    -1,    18,    19,    -1,
      -1,    22,   658,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,
     211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,    -1,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,   582,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,    -1,   639,    -1,
      -1,    -1,    -1,    -1,   645,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,   658,    18,    19,
      -1,    -1,    22,    -1,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,
      -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,
     210,   211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,
      -1,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
      -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,
      -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,
     250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,
      -1,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,   308,   309,
     310,    -1,   312,   313,   314,   315,    -1,   317,   318,    -1,
      -1,    -1,    -1,   323,   324,   325,   326,   327,   328,    -1,
      -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,
     360,   361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,
     410,   411,   412,   413,   414,    -1,   416,   417,   418,    -1,
      -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,
     450,   451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,
     490,   491,   492,   493,    -1,   495,   496,   497,   498,   499,
      -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,
     510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,
     520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,
     530,    -1,   532,   533,   534,   535,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,    -1,    -1,   556,   557,    -1,   559,
     560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,
     570,   571,   572,   573,   574,   575,    -1,   577,   578,    -1,
      -1,    -1,   582,   583,   584,   585,    -1,   587,   588,    -1,
     590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,
     600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,
      -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,
     620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,
      -1,   631,   632,    -1,   634,   635,   636,    -1,    -1,   639,
      -1,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,   657,   658,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,
     213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,
      -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,    -1,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,
     583,   584,   585,    -1,   587,   588,    -1,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,    -1,   639,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    22,   658,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,
     188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,
      -1,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,
      -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,
     238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,
     248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,
     258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
      -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
     308,   309,   310,    -1,   312,   313,   314,   315,    -1,   317,
     318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,
     328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,    -1,    -1,   353,   354,   355,   356,    -1,
      -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,
      -1,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,    -1,
     408,    -1,   410,   411,   412,   413,   414,    -1,   416,   417,
     418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,
     448,    -1,   450,   451,    -1,   453,   454,   455,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,
     478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,
     488,    -1,   490,   491,   492,   493,    -1,   495,   496,   497,
     498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,
      -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,
     518,   519,   520,   521,   522,   523,   524,    -1,    -1,    -1,
      -1,   529,   530,    -1,   532,   533,   534,   535,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,    -1,    -1,   556,   557,
      -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,
     568,   569,   570,   571,   572,   573,   574,   575,    -1,   577,
     578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,
     588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,
      -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,
      -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,
      -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,
      -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,
      -1,   639,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
     658,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,
     213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,
      -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,    -1,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,
     583,   584,   585,    -1,   587,   588,    -1,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,    -1,   639,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    22,   658,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,
     188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,
      -1,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,
      -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,
     238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,
     248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,
     258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
      -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
     308,   309,   310,    -1,   312,   313,   314,   315,    -1,   317,
     318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,
     328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,    -1,    -1,   353,   354,   355,   356,    -1,
      -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,
      -1,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,    -1,
     408,    -1,   410,   411,   412,   413,   414,    -1,   416,   417,
     418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,
     448,    -1,   450,   451,    -1,   453,   454,   455,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,
     478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,
     488,    -1,   490,   491,   492,   493,    -1,   495,   496,   497,
     498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,
      -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,
     518,   519,   520,   521,   522,   523,   524,    -1,    -1,    -1,
      -1,   529,   530,    -1,   532,   533,   534,   535,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,    -1,    -1,   556,   557,
      -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,
     568,   569,   570,   571,   572,   573,   574,   575,    -1,   577,
     578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,
     588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,
      -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,
      -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,
      -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,
      -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,
      -1,   639,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
     658,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,
     213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,
      -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,    -1,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,
     583,   584,   585,    -1,   587,   588,    -1,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,    -1,   639,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,   657,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,
      -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,
     217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
      -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,
     267,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,    -1,   312,   313,   314,   315,    -1,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,   356,
      -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,   446,
      -1,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,
     477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,   490,   491,   492,   493,    -1,   495,   496,
     497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,   524,    -1,    -1,
      -1,    -1,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,   555,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,
     587,   588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,
     597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,
      -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,
      -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,
      -1,    -1,   639,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
     657,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,
     211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,   265,   266,   267,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,   555,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,   582,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,    -1,   639,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,   657,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,    -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,
     195,    -1,   197,    -1,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,
      -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,   224,
      -1,    -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,
      -1,    -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,
      -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,
     255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,    -1,   308,   309,   310,    -1,   312,   313,   314,
     315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,
     325,   326,   327,   328,    -1,    -1,   331,   332,    -1,   334,
      -1,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,
     355,   356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
      -1,   446,    -1,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
      -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,
      -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,
     495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,
     505,   506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,   524,
      -1,    -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,
     535,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,    -1,
      -1,   556,   557,    -1,   559,   560,   561,   562,   563,    -1,
      -1,    -1,    -1,   568,   569,   570,   571,   572,   573,   574,
     575,    -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,
     585,    -1,   587,   588,    -1,   590,   591,    -1,   593,   594,
      -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,
     605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,
      -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,   624,
      -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,
     635,   636,    -1,    -1,   639,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,   657,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,   188,
      -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,
      -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,    -1,
      -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,   228,
     229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,
     239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,
      -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,
     259,    -1,    -1,   262,    -1,    -1,   265,   266,   267,    -1,
      -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,    -1,   308,
     309,   310,    -1,   312,   313,   314,   315,    -1,   317,   318,
      -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,   328,
      -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,
      -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,    -1,
     389,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,    -1,   408,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,   438,
     439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,
      -1,   490,   491,   492,   493,    -1,   495,   496,   497,   498,
     499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
     509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,    -1,   555,   556,   557,    -1,
     559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,   577,   578,
      -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,   588,
      -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,
      -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,
      -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,
      -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,
      -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,    -1,
     639,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,   657,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,
     213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,
      -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,    -1,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,
     583,   584,   585,    -1,   587,   588,    -1,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,    -1,   639,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,   657,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,
      -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,
     217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
      -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,    -1,   312,   313,   314,   315,    -1,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,   356,
      -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,   446,
      -1,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,
     477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,   490,   491,   492,   493,    -1,   495,   496,
     497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,   524,    -1,    -1,
      -1,    -1,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,
     587,   588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,
     597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,
      -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,
      -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,
      -1,    -1,   639,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
     657,    -1,    24,    25,    26,    27,    28,    -1,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    -1,    -1,    -1,    -1,
      52,    53,    -1,    55,    56,    -1,    58,    59,    -1,    -1,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    -1,    79,    -1,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   193,    -1,   195,    -1,   197,    -1,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,    -1,    -1,   211,
      -1,    -1,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
     222,   223,   224,   225,    -1,   227,   228,   229,    -1,   231,
      -1,   233,    -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,
      -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,
     252,    -1,    -1,   255,    -1,    -1,    -1,   259,    -1,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,
      -1,    -1,    -1,   285,    -1,    -1,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,    -1,   308,   309,   310,    -1,
     312,   313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,
      -1,   323,   324,   325,   326,   327,   328,    -1,    -1,   331,
     332,    -1,   334,    -1,   336,    -1,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,    -1,
      -1,   353,   354,   355,   356,    -1,    -1,    -1,    -1,   361,
      -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   386,   387,    -1,    -1,   390,    -1,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,    -1,    -1,   405,   406,    -1,   408,    -1,   410,   411,
     412,   413,   414,    -1,   416,   417,   418,    -1,    -1,   421,
      -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,   438,    -1,    -1,   441,
      -1,   443,   444,    -1,   446,    -1,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,    -1,    -1,    -1,   461,
     462,   463,   464,   465,   466,   467,    -1,   469,   470,    -1,
     472,    -1,    -1,    -1,    -1,   477,   478,   479,    -1,    -1,
      -1,    -1,   484,    -1,    -1,    -1,   488,    -1,    -1,   491,
      -1,   493,    -1,   495,    -1,    -1,   498,   499,    -1,    -1,
      -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,
     512,    -1,    -1,   515,    -1,    -1,   518,    -1,   520,   521,
     522,   523,   524,    -1,    -1,    -1,    -1,    -1,   530,    -1,
     532,   533,   534,   535,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,    -1,    -1,   556,   557,    -1,   559,   560,   561,
     562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,
     572,   573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,
      -1,   583,   584,   585,    -1,   587,   588,    -1,   590,   591,
      -1,    -1,    -1,    -1,    -1,   597,    -1,    -1,   600,    -1,
      -1,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,
      -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,
     622,   623,   624,    -1,    -1,   627,    -1,    -1,    -1,   631,
      -1,    -1,   634,    -1,   636,    -1,    -1,   639,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
     652,    18,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,
      -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,
     217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
      -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,    -1,   312,   313,   314,   315,    -1,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,   356,
      -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,   446,
      -1,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,
     477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,   490,   491,   492,   493,    -1,   495,   496,
     497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,   524,    -1,    -1,
      -1,    -1,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,
     587,   588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,
     597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,
      -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,
      -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,
      -1,     5,   639,     7,     8,     9,    10,    11,   645,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,
      24,    25,    26,    27,    28,    29,    -1,    31,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,
      -1,    55,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,   193,
      -1,   195,    -1,   197,    -1,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,   213,
      -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,
     224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,   233,
      -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,   243,
      -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,
      -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,
      -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,    -1,   308,   309,   310,    -1,   312,   313,
     314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,
     324,   325,   326,   327,   328,    -1,    -1,   331,   332,    -1,
     334,    -1,   336,    -1,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,
     354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,    -1,
      -1,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   385,   386,   387,    -1,   389,   390,    -1,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,    -1,   408,    -1,   410,   411,   412,   413,
     414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,
      -1,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,   453,
     454,   455,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    -1,   472,   473,
      -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,
     484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,
      -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,
      -1,   505,   506,   507,    -1,   509,   510,    -1,   512,    -1,
      -1,   515,    -1,    -1,   518,   519,   520,   521,   522,   523,
     524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,   533,
     534,   535,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
      -1,    -1,   556,   557,    -1,   559,   560,   561,   562,   563,
      -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,   583,
     584,   585,    -1,   587,   588,    -1,   590,   591,    -1,   593,
     594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,
     604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,
      -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,
     624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,
     634,   635,   636,    -1,     5,   639,     7,     8,     9,    10,
      11,   645,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,
     211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,    -1,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,   582,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,     5,   639,     7,
       8,     9,    10,    11,   645,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,
     188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,
      -1,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,
      -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,
     238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,
     248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,
     258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
      -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
     308,   309,   310,    -1,   312,   313,   314,   315,    -1,   317,
     318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,
     328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,    -1,    -1,   353,   354,   355,   356,    -1,
      -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,
      -1,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,    -1,
     408,    -1,   410,   411,   412,   413,   414,    -1,   416,   417,
     418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,
     448,    -1,   450,   451,    -1,   453,   454,   455,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,
     478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,
     488,    -1,   490,   491,   492,   493,    -1,   495,   496,   497,
     498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,
      -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,
     518,   519,   520,   521,   522,   523,   524,    -1,    -1,    -1,
      -1,   529,   530,    -1,   532,   533,   534,   535,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,    -1,    -1,   556,   557,
      -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,
     568,   569,   570,   571,   572,   573,   574,   575,    -1,   577,
     578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,
     588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,
      -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,
      -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,
      -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,
      -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,
       5,   639,     7,     8,     9,    10,    11,   645,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,
      55,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,
     195,    -1,   197,    -1,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,    -1,   210,   211,    -1,   213,   214,
      -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,   224,
      -1,    -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,
      -1,    -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,
      -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,
     255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,    -1,   279,   280,    -1,    -1,   283,    -1,
      -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,    -1,   308,   309,   310,    -1,   312,   313,   314,
     315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,
     325,   326,   327,   328,    -1,    -1,   331,   332,    -1,   334,
      -1,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,    -1,    -1,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
      -1,   446,    -1,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
      -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,
      -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,
     495,   496,   497,   498,   499,    -1,    -1,   502,   503,   504,
     505,   506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,   524,
      -1,    -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,
     535,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,    -1,
      -1,   556,   557,    -1,   559,   560,   561,   562,   563,    -1,
      -1,    -1,    -1,   568,   569,   570,   571,   572,   573,   574,
     575,    -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,
     585,   586,   587,   588,    -1,   590,   591,    -1,   593,   594,
      -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,
     605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,
      -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,   624,
      -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,
     635,   636,    -1,     5,   639,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    34,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,
     192,   193,    -1,   195,    -1,   197,    -1,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,
      -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,
     222,   223,   224,    -1,    -1,   227,   228,   229,    -1,   231,
      -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,
      -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,
      -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,
     262,    -1,    -1,   265,   266,   267,    -1,    -1,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,    -1,   308,   309,   310,    -1,
     312,   313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,
      -1,   323,   324,   325,   326,   327,   328,    -1,    -1,   331,
     332,    -1,   334,    -1,   336,    -1,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,    -1,
      -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,   361,
      -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,   411,
     412,   413,   414,    -1,   416,   417,   418,    -1,    -1,   421,
      -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,
      -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
     472,   473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,
      -1,   483,   484,    -1,    -1,    -1,   488,    -1,   490,   491,
     492,   493,    -1,   495,   496,   497,   498,   499,    -1,    -1,
      -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,
     512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,
     522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,
     532,   533,   534,   535,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,    -1,   555,   556,   557,    -1,   559,   560,   561,
     562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,
     572,   573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,
     582,   583,   584,   585,    -1,   587,   588,    -1,   590,   591,
      -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,
     602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,
      -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,
     622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,
     632,    -1,   634,   635,   636,    -1,     5,   639,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    34,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,   188,
      -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,
      -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,    -1,
      -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,   228,
     229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,
     239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,
      -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,
     259,    -1,    -1,   262,    -1,    -1,   265,   266,   267,    -1,
      -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,    -1,   308,
     309,   310,    -1,   312,   313,   314,   315,    -1,   317,   318,
      -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,   328,
      -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,
      -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,    -1,
     389,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,    -1,   408,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,   438,
     439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,
      -1,   490,   491,   492,   493,    -1,   495,   496,   497,   498,
     499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
     509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,    -1,   555,   556,   557,    -1,
     559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,   577,   578,
      -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,   588,
      -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,
      -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,
      -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,
      -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,
      -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,     5,
     639,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
      -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,
      -1,   197,    -1,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,
     216,   217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,
      -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,
      -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,
      -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,    -1,   279,   280,    -1,    -1,   283,    -1,    -1,
      -1,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,   308,   309,   310,    -1,   312,   313,   314,   315,
      -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,
     326,   327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,
     356,    -1,    -1,    -1,   360,   361,    -1,    -1,   364,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,    -1,   408,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,
     446,    -1,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,   473,    -1,    -1,
      -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,
      -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,   495,
     496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,   524,    -1,
      -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,   535,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,
     556,   557,    -1,   559,   560,   561,   562,   563,    -1,    -1,
      -1,    -1,   568,   569,   570,   571,   572,   573,   574,   575,
      -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,   585,
     586,   587,   588,    -1,   590,   591,    -1,   593,   594,    -1,
      -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,
     606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     616,    -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,
      -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,
     636,    -1,     5,   639,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    34,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,
     213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,   265,   266,   267,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,
      -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,   555,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,
     583,   584,   585,    -1,   587,   588,    -1,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,     5,   639,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,    -1,    22,    -1,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,   104,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,
      -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,
     210,   211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,
      -1,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
      -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,
      -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,
     250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,
      -1,    -1,   262,    -1,    -1,   265,   266,   267,    -1,    -1,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,   308,   309,
     310,    -1,   312,   313,   314,   315,    -1,   317,   318,    -1,
      -1,    -1,    -1,   323,   324,   325,   326,   327,   328,    -1,
      -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,
     360,   361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,
     410,   411,   412,   413,   414,    -1,   416,   417,   418,    -1,
      -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,
     450,   451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,
     490,   491,   492,   493,    -1,   495,   496,   497,   498,   499,
      -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,
     510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,
     520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,
     530,    -1,   532,   533,   534,   535,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,    -1,   555,   556,   557,    -1,   559,
     560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,
     570,   571,   572,   573,   574,   575,    -1,   577,   578,    -1,
      -1,    -1,   582,   583,   584,   585,    -1,   587,   588,    -1,
     590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,
     600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,
      -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,
     620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,
      -1,   631,   632,    -1,   634,   635,   636,    -1,     5,   639,
       7,     8,     9,    10,    11,    12,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,
      -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,
     217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
      -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,
     267,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,    -1,   312,   313,   314,   315,    -1,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,   356,
      -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,   446,
      -1,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,
     477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,   490,   491,   492,   493,    -1,   495,   496,
     497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,   524,    -1,    -1,
      -1,    -1,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,   555,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,
     587,   588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,
     597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,
      -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,
      -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,
      -1,     5,   639,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,
      24,    25,    26,    27,    28,    29,    -1,    31,    -1,    -1,
      -1,    35,    36,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,
      -1,    55,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,   193,
      -1,   195,    -1,   197,    -1,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,   213,
     214,    -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,
     224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,   233,
      -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,   243,
      -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,
      -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,
      -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,    -1,   308,   309,   310,    -1,   312,   313,
     314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,
     324,   325,   326,   327,   328,    -1,    -1,   331,   332,    -1,
     334,    -1,   336,    -1,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,
     354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,    -1,
      -1,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   385,   386,   387,    -1,   389,   390,    -1,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,    -1,   408,    -1,   410,   411,   412,   413,
     414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,
      -1,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,   453,
     454,   455,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    -1,   472,   473,
      -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,
     484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,
      -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,
      -1,   505,   506,   507,    -1,   509,   510,    -1,   512,    -1,
      -1,   515,    -1,    -1,   518,   519,   520,   521,   522,   523,
     524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,   533,
     534,   535,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
      -1,   555,   556,   557,    -1,   559,   560,   561,   562,   563,
      -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,   583,
     584,   585,    -1,   587,   588,    -1,   590,   591,    -1,   593,
     594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,
     604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,
      -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,
     624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,
     634,   635,   636,    -1,     5,   639,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,
     211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,   265,   266,   267,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,   555,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,   582,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,     5,   639,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    34,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,
     188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,
      -1,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,
      -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,
     238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,
     248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,
     258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,   267,
      -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
      -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
     308,   309,   310,    -1,   312,   313,   314,   315,    -1,   317,
     318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,
     328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,    -1,    -1,   353,   354,   355,   356,    -1,
      -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,
      -1,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,    -1,
     408,    -1,   410,   411,   412,   413,   414,    -1,   416,   417,
     418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,
     448,    -1,   450,   451,    -1,   453,   454,   455,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,
     478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,
     488,    -1,   490,   491,   492,   493,    -1,   495,   496,   497,
     498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,
      -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,
     518,   519,   520,   521,   522,   523,   524,    -1,    -1,    -1,
      -1,   529,   530,    -1,   532,   533,   534,   535,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,    -1,   555,   556,   557,
      -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,
     568,   569,   570,   571,   572,   573,   574,   575,    -1,   577,
     578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,
     588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,
      -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,
      -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,
      -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,
      -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,
       5,   639,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,
      55,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,    -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,
     195,    -1,   197,    -1,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,
      -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,   224,
      -1,    -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,
      -1,    -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,
      -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,
     255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,
     265,   266,   267,    -1,    -1,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,    -1,   308,   309,   310,    -1,   312,   313,   314,
     315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,
     325,   326,   327,   328,    -1,    -1,   331,   332,    -1,   334,
      -1,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,
     355,   356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
      -1,   446,    -1,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
      -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,
      -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,
     495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,
     505,   506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,   524,
      -1,    -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,
     535,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,    -1,
     555,   556,   557,    -1,   559,   560,   561,   562,   563,    -1,
      -1,    -1,    -1,   568,   569,   570,   571,   572,   573,   574,
     575,    -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,
     585,    -1,   587,   588,    -1,   590,   591,    -1,   593,   594,
      -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,
     605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,
      -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,   624,
      -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,
     635,   636,    -1,     5,   639,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    20,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,
     192,   193,    -1,   195,    -1,   197,    -1,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,
      -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,
     222,   223,   224,    -1,    -1,   227,   228,   229,    -1,   231,
      -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,
      -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,
      -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,    -1,   308,   309,   310,    -1,
     312,   313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,
      -1,   323,   324,   325,   326,   327,   328,    -1,    -1,   331,
     332,    -1,   334,    -1,   336,    -1,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,    -1,
      -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,   361,
      -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,   411,
     412,   413,   414,    -1,   416,   417,   418,    -1,    -1,   421,
      -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,
      -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
     472,   473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,
      -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,
     492,   493,    -1,   495,   496,   497,   498,   499,    -1,    -1,
      -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,
     512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,
     522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,
     532,   533,   534,   535,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,    -1,   555,   556,   557,    -1,   559,   560,   561,
     562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,
     572,   573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,
     582,   583,   584,   585,    -1,   587,   588,    -1,   590,   591,
      -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,
     602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,
      -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,
     622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,
     632,    -1,   634,   635,   636,    -1,     5,   639,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    95,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,   188,
      -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,
      -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,    -1,
      -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,   228,
     229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,
     239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,
      -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,
     259,    -1,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
      -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,    -1,   308,
     309,   310,    -1,   312,   313,   314,   315,    -1,   317,   318,
      -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,   328,
      -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,
      -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,    -1,
     389,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,    -1,   408,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,   438,
     439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,
      -1,   490,   491,   492,   493,    -1,   495,   496,   497,   498,
     499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
     509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,    -1,    -1,   556,   557,    -1,
     559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,   577,   578,
      -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,   588,
      -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,
      -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,
      -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,
      -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,
      -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,     5,
     639,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
      -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,
      -1,   197,    -1,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,
     216,   217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,
      -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,
      -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,
      -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,   308,   309,   310,    -1,   312,   313,   314,   315,
      -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,
     326,   327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,
     356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,   387,    -1,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,    -1,   408,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,
     446,    -1,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,   473,    -1,    -1,
      -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,
      -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,   495,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,   524,    -1,
      -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,   535,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,
     556,   557,    -1,   559,   560,   561,   562,   563,    -1,    -1,
      -1,    -1,   568,   569,   570,   571,   572,   573,   574,   575,
      -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,   585,
      -1,   587,   588,    -1,   590,   591,    -1,   593,   594,    -1,
      -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,
     606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     616,    -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,
      -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,
     636,    -1,     5,   639,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,
     213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,
      -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,    -1,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,
     583,   584,   585,    -1,   587,   588,    -1,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,     5,   639,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,    -1,    22,    -1,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,
      -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,
     210,   211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,
      -1,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
      -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,
      -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,
     250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,
      -1,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,   308,   309,
     310,    -1,   312,   313,   314,   315,    -1,   317,   318,    -1,
      -1,    -1,    -1,   323,   324,   325,   326,   327,   328,    -1,
      -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,
     360,   361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,
     410,   411,   412,   413,   414,    -1,   416,   417,   418,    -1,
      -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,
     450,   451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,
     490,   491,   492,   493,    -1,   495,   496,   497,   498,   499,
      -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,
     510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,
     520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,
     530,    -1,   532,   533,   534,   535,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,    -1,    -1,   556,   557,    -1,   559,
     560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,
     570,   571,   572,   573,   574,   575,    -1,   577,   578,    -1,
      -1,    -1,   582,   583,   584,   585,    -1,   587,   588,    -1,
     590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,
     600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,
      -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,
     620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,
      -1,   631,   632,    -1,   634,   635,   636,    -1,     5,   639,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,
      -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,
     217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
      -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,    -1,   312,   313,   314,   315,    -1,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,   356,
      -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,   446,
      -1,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,
     477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,   490,   491,   492,   493,    -1,   495,   496,
     497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,   524,    -1,    -1,
      -1,    -1,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,
     587,   588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,
     597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,
      -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,
      -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,
      -1,     5,   639,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,
      24,    25,    26,    27,    28,    29,    -1,    31,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,
      -1,    55,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,   193,
      -1,   195,    -1,   197,    -1,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,   213,
      -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,
     224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,   233,
      -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,   243,
      -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,
      -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,
      -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,    -1,   308,   309,   310,    -1,   312,   313,
     314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,
     324,   325,   326,   327,   328,    -1,    -1,   331,   332,    -1,
     334,    -1,   336,    -1,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,
     354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,    -1,
      -1,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   385,   386,   387,    -1,   389,   390,    -1,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,    -1,   408,    -1,   410,   411,   412,   413,
     414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,
      -1,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,   453,
     454,   455,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    -1,   472,   473,
      -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,
     484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,
      -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,
      -1,   505,   506,   507,    -1,   509,   510,    -1,   512,    -1,
      -1,   515,    -1,    -1,   518,   519,   520,   521,   522,   523,
     524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,   533,
     534,   535,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
      -1,    -1,   556,   557,    -1,   559,   560,   561,   562,   563,
      -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,   583,
     584,   585,    -1,   587,   588,    -1,   590,   591,    -1,   593,
     594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,
     604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,
      -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,
     624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,
     634,   635,   636,    -1,     5,   639,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,
      -1,   192,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,
     211,    -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,
     491,   492,   493,    -1,   495,   496,   497,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,    -1,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,   582,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,
      -1,   602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,
     631,   632,    -1,   634,   635,   636,    -1,     5,   639,     7,
       8,     9,    10,    11,    12,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,
     188,    -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,
      -1,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,    -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,
      -1,    -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,
     238,   239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,
     248,    -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,
     258,   259,    -1,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
      -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
     308,   309,   310,    -1,   312,   313,   314,   315,    -1,   317,
     318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,
     328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,    -1,    -1,   353,   354,   355,   356,    -1,
      -1,    -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,
      -1,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,    -1,
     408,    -1,   410,   411,   412,   413,   414,    -1,   416,   417,
     418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,
     448,    -1,   450,   451,    -1,   453,   454,   455,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,
     478,   479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,
     488,    -1,   490,   491,   492,   493,    -1,   495,   496,   497,
     498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,
      -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,
     518,   519,   520,   521,   522,   523,   524,    -1,    -1,    -1,
      -1,   529,   530,    -1,   532,   533,   534,   535,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,    -1,    -1,   556,   557,
      -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,
     568,   569,   570,   571,   572,   573,   574,   575,    -1,   577,
     578,    -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,
     588,    -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,
      -1,    -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,
      -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,
      -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,
      -1,    -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,
       5,   639,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,
      55,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,    -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,
     195,    -1,   197,    -1,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,
      -1,   216,   217,    -1,    -1,    -1,   221,   222,   223,   224,
      -1,    -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,
      -1,    -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,
      -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,
     255,    -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,    -1,   308,   309,   310,    -1,   312,   313,   314,
     315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,
     325,   326,   327,   328,    -1,    -1,   331,   332,    -1,   334,
      -1,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,
     355,   356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
      -1,   446,    -1,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
      -1,    -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,
      -1,    -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,
     495,   496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,
     505,   506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,   524,
      -1,    -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,
     535,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,    -1,
      -1,   556,   557,    -1,   559,   560,   561,   562,   563,    -1,
      -1,    -1,    -1,   568,   569,   570,   571,   572,   573,   574,
     575,    -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,
     585,    -1,   587,   588,    -1,   590,   591,    -1,   593,   594,
      -1,    -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,
     605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,
      -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,   624,
      -1,    -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,
     635,   636,    -1,     5,   639,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,
     192,   193,    -1,   195,    -1,   197,    -1,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,
      -1,   213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,
     222,   223,   224,    -1,    -1,   227,   228,   229,    -1,   231,
      -1,   233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,
      -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,
      -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,    -1,   308,   309,   310,    -1,
     312,   313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,
      -1,   323,   324,   325,   326,   327,   328,    -1,    -1,   331,
     332,    -1,   334,    -1,   336,    -1,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,    -1,
      -1,   353,   354,   355,   356,    -1,    -1,    -1,   360,   361,
      -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,   413,   414,    -1,   416,   417,   418,    -1,    -1,   421,
      -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,
      -1,   453,   454,   455,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
     472,   473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,
      -1,    -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,
     492,   493,    -1,   495,   496,   497,   498,   499,    -1,    -1,
      -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,
     512,    -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,
     522,   523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,
     532,   533,   534,   535,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,    -1,    -1,   556,   557,    -1,   559,   560,   561,
     562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,
     572,   573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,
     582,   583,   584,   585,    -1,   587,   588,    -1,   590,   591,
      -1,   593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,
     602,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,
      -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,
     622,   623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,
     632,    -1,   634,   635,   636,    -1,     5,   639,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,    -1,    -1,   188,
      -1,    -1,    -1,   192,   193,    -1,   195,    -1,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,
      -1,   210,   211,    -1,   213,    -1,    -1,   216,   217,    -1,
      -1,    -1,   221,   222,   223,   224,    -1,    -1,   227,   228,
     229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,
     239,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,
      -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,
     259,    -1,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
      -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,    -1,   308,
     309,   310,    -1,   312,   313,   314,   315,    -1,   317,   318,
      -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,   328,
      -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,
      -1,   360,   361,    -1,    -1,    -1,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,   387,    -1,
     389,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,    -1,   408,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,   438,
     439,    -1,   441,   442,   443,    -1,    -1,   446,    -1,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,
      -1,   490,   491,   492,   493,    -1,   495,   496,   497,   498,
     499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
     509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,    -1,   555,   556,   557,    -1,
     559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,   577,   578,
      -1,    -1,    -1,   582,   583,   584,   585,    -1,   587,   588,
      -1,   590,   591,    -1,   593,   594,    -1,    -1,   597,    -1,
      -1,   600,    -1,   602,    -1,   604,   605,   606,    -1,    -1,
      -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,
      -1,   620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,
      -1,    -1,   631,   632,    -1,   634,   635,   636,    -1,     5,
     639,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
      -1,    -1,   188,    -1,    -1,    -1,   192,   193,    -1,   195,
      -1,   197,    -1,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,    -1,   210,   211,    -1,   213,    -1,    -1,
     216,   217,    -1,    -1,    -1,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,
      -1,    -1,   238,   239,    -1,    -1,    -1,   243,    -1,    -1,
      -1,   247,   248,    -1,   250,   251,    -1,    -1,    -1,   255,
      -1,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,   308,   309,   310,    -1,   312,   313,   314,   315,
      -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,
     326,   327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,
     356,    -1,    -1,    -1,   360,   361,    -1,    -1,    -1,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,   387,    -1,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,    -1,   408,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,    -1,
     446,    -1,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,   473,    -1,    -1,
      -1,   477,   478,   479,   480,    -1,    -1,    -1,   484,    -1,
      -1,    -1,   488,    -1,   490,   491,   492,   493,    -1,   495,
     496,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,   524,    -1,
      -1,    -1,    -1,   529,   530,    -1,   532,   533,   534,   535,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,
     556,   557,    -1,   559,   560,   561,   562,   563,    -1,    -1,
      -1,    -1,   568,   569,   570,   571,   572,   573,   574,   575,
      -1,   577,   578,    -1,    -1,    -1,   582,   583,   584,   585,
      -1,   587,   588,    -1,   590,   591,    -1,   593,   594,    -1,
      -1,   597,    -1,    -1,   600,    -1,   602,    -1,   604,   605,
     606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     616,    -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,
      -1,    -1,    -1,    -1,    -1,   631,   632,    -1,   634,   635,
     636,    -1,     5,   639,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,    -1,    -1,   188,    -1,    -1,    -1,   192,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,   210,   211,    -1,
     213,    -1,    -1,   216,   217,    -1,    -1,    -1,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,   360,   361,    -1,
      -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,   387,    -1,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,    -1,   446,    -1,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,    -1,    -1,   477,   478,   479,   480,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,   490,   491,   492,
     493,    -1,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,    -1,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,   582,
     583,   584,   585,    -1,   587,   588,    -1,   590,   591,    -1,
     593,   594,    -1,    -1,   597,    -1,    -1,   600,    -1,   602,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,   632,
      -1,   634,   635,   636,    -1,     5,   639,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,    -1,    -1,    -1,    24,    25,    26,    27,    28,    -1,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    -1,    -1,
      -1,    -1,    52,    53,    -1,    55,    56,    -1,    58,    59,
      -1,    -1,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    -1,    79,
      -1,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
     150,   151,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   193,    -1,   195,    -1,   197,    -1,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,
      -1,   211,    -1,    -1,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,   222,   223,   224,   225,    -1,   227,   228,   229,
      -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,    -1,
      -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,
     250,   251,   252,    -1,    -1,   255,    -1,    -1,    -1,   259,
      -1,    -1,   262,   263,    -1,   265,   266,    -1,    -1,    -1,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,
     280,    -1,    -1,    -1,    -1,   285,    -1,    -1,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,   308,   309,
     310,    -1,   312,   313,   314,   315,    -1,   317,   318,    -1,
      -1,    -1,    -1,   323,   324,   325,   326,   327,   328,    -1,
      -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,
      -1,   361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   386,   387,    -1,    -1,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,    -1,    -1,   405,   406,    -1,   408,    -1,
     410,   411,   412,   413,   414,    -1,   416,   417,   418,    -1,
      -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,   438,    -1,
      -1,   441,    -1,   443,   444,    -1,   446,    -1,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,    -1,    -1,
      -1,   461,   462,   463,   464,   465,   466,   467,    -1,   469,
     470,    -1,   472,    -1,    -1,    -1,    -1,   477,   478,   479,
      -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,
      -1,   491,    -1,   493,    -1,   495,    -1,    -1,   498,   499,
      -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,
     510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,    -1,
     520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,    -1,
     530,    -1,   532,   533,   534,   535,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,    -1,    -1,   556,   557,    -1,   559,
     560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,
     570,   571,   572,   573,   574,   575,    -1,   577,   578,    -1,
      -1,    -1,    -1,   583,   584,   585,    -1,   587,   588,    -1,
     590,   591,    -1,    -1,    -1,    -1,    -1,   597,    -1,    -1,
     600,    -1,    -1,    -1,   604,   605,   606,    -1,    -1,    -1,
      -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,
     620,   621,   622,   623,   624,    -1,    -1,   627,    -1,    -1,
      -1,   631,    -1,    -1,   634,    -1,   636,    -1,     5,   639,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    -1,    -1,    24,    25,    26,
      27,    28,    -1,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    -1,    -1,    -1,    -1,    52,    53,    -1,    55,    56,
      -1,    58,    59,    -1,    -1,    -1,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    -1,    79,    -1,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,    -1,
     197,    -1,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,    -1,    -1,    -1,   211,    -1,    -1,    -1,    -1,    -1,
     217,    -1,    -1,    -1,   221,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,
      -1,   238,    -1,    -1,    -1,    -1,   243,    -1,    -1,    -1,
     247,   248,    -1,   250,   251,   252,    -1,    -1,   255,    -1,
      -1,    -1,   259,    -1,    -1,   262,   263,    -1,   265,   266,
      -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,    -1,   279,   280,    -1,    -1,    -1,    -1,   285,    -1,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
      -1,   308,   309,   310,    -1,   312,   313,   314,   315,    -1,
     317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,
     327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,   356,
      -1,    -1,    -1,    -1,   361,    -1,    -1,    -1,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   386,
     387,    -1,    -1,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,    -1,    -1,    -1,   405,   406,
      -1,   408,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,   438,    -1,    -1,   441,    -1,   443,   444,    -1,   446,
      -1,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,    -1,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,    -1,   469,   470,    -1,   472,    -1,    -1,    -1,    -1,
     477,   478,   479,    -1,    -1,    -1,    -1,   484,    -1,    -1,
      -1,   488,    -1,    -1,   491,    -1,   493,    -1,   495,    -1,
      -1,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,
      -1,   518,    -1,   520,   521,   522,   523,   524,    -1,    -1,
      -1,    -1,    -1,   530,    -1,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,   556,
     557,    -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,
      -1,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
     577,   578,    -1,    -1,    -1,    -1,   583,   584,   585,    -1,
     587,   588,    -1,   590,   591,    -1,    -1,    -1,    -1,    -1,
     597,    -1,    -1,   600,    -1,    -1,    -1,   604,   605,   606,
      -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,
      -1,    -1,    -1,   620,   621,   622,   623,   624,   625,    -1,
     627,    -1,    -1,    -1,   631,    -1,    -1,   634,    -1,   636,
      -1,     5,   639,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,
      24,    25,    26,    27,    28,    -1,    -1,    31,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    -1,    -1,    -1,    -1,    52,    53,
      -1,    55,    56,    -1,    58,    59,    -1,    -1,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    -1,    79,    -1,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,
      -1,   195,    -1,   197,    -1,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,    -1,    -1,   211,    -1,    -1,
      -1,    -1,    -1,   217,    -1,    -1,    -1,   221,   222,   223,
     224,   225,    -1,   227,   228,   229,    -1,   231,    -1,   233,
      -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,   243,
      -1,    -1,    -1,   247,   248,    -1,   250,   251,   252,    -1,
      -1,   255,    -1,    -1,    -1,   259,    -1,    -1,   262,   263,
      -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,
      -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,   285,    -1,    -1,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,    -1,   308,   309,   310,    -1,   312,   313,
     314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,
     324,   325,   326,   327,   328,    -1,    -1,   331,   332,    -1,
     334,    -1,   336,    -1,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,
     354,   355,   356,    -1,    -1,    -1,    -1,   361,    -1,    -1,
      -1,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   386,   387,    -1,    -1,   390,    -1,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,    -1,
      -1,   405,   406,    -1,   408,    -1,   410,   411,   412,   413,
     414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,
      -1,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,   438,    -1,    -1,   441,    -1,   443,
     444,    -1,   446,    -1,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,    -1,    -1,    -1,   461,   462,   463,
     464,   465,   466,   467,    -1,   469,   470,    -1,   472,    -1,
      -1,    -1,    -1,   477,   478,   479,    -1,    -1,    -1,    -1,
     484,    -1,    -1,    -1,   488,    -1,    -1,   491,    -1,   493,
      -1,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,    -1,
      -1,   505,   506,   507,    -1,   509,   510,    -1,   512,    -1,
      -1,   515,    -1,    -1,   518,    -1,   520,   521,   522,   523,
     524,    -1,    -1,    -1,    -1,    -1,   530,    -1,   532,   533,
     534,   535,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
      -1,    -1,   556,   557,    -1,   559,   560,   561,   562,   563,
      -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,   577,   578,    -1,    -1,    -1,    -1,   583,
     584,   585,    -1,   587,   588,    -1,   590,   591,    -1,    -1,
      -1,    -1,    -1,   597,    -1,    -1,   600,    -1,    -1,    -1,
     604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,
      -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,
     624,   625,    -1,   627,    -1,    -1,    -1,   631,    -1,    -1,
     634,    -1,   636,    -1,     5,   639,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    -1,    -1,    24,    25,    26,    27,    28,    -1,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    -1,    -1,    -1,
      -1,    52,    53,    -1,    55,    56,    -1,    58,    59,    -1,
      -1,    -1,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    -1,    79,    -1,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,   195,    -1,   197,    -1,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,    -1,
     211,    -1,    -1,    -1,    -1,    -1,   217,    -1,    -1,    -1,
     221,   222,   223,   224,   225,    -1,   227,   228,   229,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,   238,    -1,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,
     251,   252,    -1,    -1,   255,    -1,    -1,    -1,   259,    -1,
      -1,   262,   263,    -1,   265,   266,    -1,    -1,    -1,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,   280,
      -1,    -1,    -1,    -1,   285,    -1,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
      -1,   312,   313,   314,   315,    -1,   317,   318,    -1,    -1,
      -1,    -1,   323,   324,   325,   326,   327,   328,    -1,    -1,
     331,   332,    -1,   334,    -1,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,    -1,
     361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   386,   387,    -1,    -1,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,    -1,    -1,    -1,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,    -1,
     421,    -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,   438,    -1,    -1,
     441,    -1,   443,   444,    -1,   446,    -1,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,    -1,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,    -1,   469,   470,
      -1,   472,    -1,    -1,    -1,    -1,   477,   478,   479,    -1,
      -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,    -1,
     491,    -1,   493,    -1,   495,    -1,    -1,   498,   499,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,
      -1,   512,    -1,    -1,   515,    -1,    -1,   518,    -1,   520,
     521,   522,   523,   524,    -1,    -1,    -1,    -1,    -1,   530,
      -1,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,    -1,    -1,   556,   557,    -1,   559,   560,
     561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,
     571,   572,   573,   574,   575,    -1,   577,   578,    -1,    -1,
      -1,    -1,   583,   584,   585,    -1,   587,   588,    -1,   590,
     591,    -1,    -1,    -1,    -1,    -1,   597,    -1,    -1,   600,
      -1,    -1,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,
      -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,
     621,   622,   623,   624,    -1,    -1,   627,    -1,    -1,    -1,
     631,    -1,    -1,   634,    -1,   636,    -1,     5,   639,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    -1,    -1,    24,    25,    26,    27,
      28,    -1,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      -1,    -1,    -1,    -1,    52,    53,    -1,    55,    56,    -1,
      58,    59,    -1,    -1,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      -1,    79,    -1,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   193,    -1,   195,    -1,   197,
      -1,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,    -1,    -1,   211,    -1,    -1,    -1,    -1,    -1,   217,
      -1,    -1,    -1,   221,   222,   223,   224,   225,    -1,   227,
     228,   229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,
     238,    -1,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,
     248,    -1,   250,   251,   252,    -1,    -1,   255,    -1,    -1,
      -1,   259,    -1,    -1,   262,   263,    -1,   265,   266,    -1,
      -1,    -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
      -1,   279,   280,    -1,    -1,    -1,    -1,   285,    -1,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
     308,   309,   310,    -1,   312,   313,   314,   315,    -1,   317,
     318,    -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,
     328,    -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,    -1,    -1,   353,   354,   355,   356,    -1,
      -1,    -1,    -1,   361,    -1,    -1,    -1,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   386,   387,
      -1,    -1,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,    -1,    -1,    -1,   405,   406,    -1,
     408,    -1,   410,   411,   412,   413,   414,    -1,   416,   417,
     418,    -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
     438,    -1,    -1,   441,    -1,   443,   444,    -1,   446,    -1,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
      -1,    -1,    -1,   461,   462,   463,   464,   465,   466,   467,
      -1,   469,   470,    -1,   472,    -1,    -1,    -1,    -1,   477,
     478,   479,    -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,
     488,    -1,    -1,   491,    -1,   493,    -1,   495,    -1,    -1,
     498,   499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,
      -1,   509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,
     518,    -1,   520,   521,   522,   523,   524,    -1,    -1,    -1,
      -1,    -1,   530,    -1,   532,   533,   534,   535,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,    -1,    -1,   556,   557,
      -1,   559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,
     568,   569,   570,   571,   572,   573,   574,   575,    -1,   577,
     578,    -1,    -1,    -1,    -1,   583,   584,   585,    -1,   587,
     588,    -1,   590,   591,    -1,    -1,    -1,    -1,    -1,   597,
      -1,    -1,   600,    -1,    -1,    -1,   604,   605,   606,    -1,
      -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,
      -1,    -1,   620,   621,   622,   623,   624,    -1,    -1,   627,
      -1,    -1,    -1,   631,    -1,    -1,   634,    -1,   636,    -1,
       5,   639,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,    24,
      25,    26,    27,    28,    -1,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    -1,    -1,    -1,    -1,    52,    53,    -1,
      55,    56,    -1,    58,    59,    -1,    -1,    -1,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    -1,    79,    -1,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
     195,    -1,   197,    -1,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,    -1,    -1,   211,    -1,    -1,    -1,
      -1,    -1,   217,    -1,    -1,    -1,   221,   222,   223,   224,
     225,    -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,
      -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,   243,    -1,
      -1,    -1,   247,   248,    -1,   250,   251,   252,    -1,    -1,
     255,    -1,    -1,    -1,   259,    -1,    -1,   262,   263,    -1,
     265,   266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,
     285,    -1,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,    -1,   308,   309,   310,    -1,   312,   313,   314,
     315,    -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,
     325,   326,   327,   328,    -1,    -1,   331,   332,    -1,   334,
      -1,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,
     355,   356,    -1,    -1,    -1,    -1,   361,    -1,    -1,    -1,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   386,   387,    -1,    -1,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,    -1,    -1,    -1,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,   438,    -1,    -1,   441,    -1,   443,   444,
      -1,   446,    -1,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,    -1,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,    -1,   469,   470,    -1,   472,    -1,    -1,
      -1,    -1,   477,   478,   479,    -1,    -1,    -1,    -1,   484,
      -1,    -1,    -1,   488,    -1,    -1,   491,    -1,   493,    -1,
     495,    -1,    -1,   498,   499,    -1,    -1,    -1,    -1,    -1,
     505,   506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,
     515,    -1,    -1,   518,    -1,   520,   521,   522,   523,   524,
      -1,    -1,    -1,    -1,    -1,   530,    -1,   532,   533,   534,
     535,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,    -1,
      -1,   556,   557,    -1,   559,   560,   561,   562,   563,    -1,
      -1,    -1,    -1,   568,   569,   570,   571,   572,   573,   574,
     575,    -1,   577,   578,    -1,    -1,    -1,    -1,   583,   584,
     585,    -1,   587,   588,    -1,   590,   591,    -1,    -1,    -1,
      -1,    -1,   597,    -1,    -1,   600,    -1,    -1,    -1,   604,
     605,   606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,
      -1,   616,    -1,    -1,    -1,   620,   621,   622,   623,   624,
      -1,    -1,   627,    -1,    -1,    -1,   631,    -1,    -1,   634,
      -1,   636,    -1,     5,   639,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    -1,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    -1,    -1,    -1,    -1,
      52,    53,    -1,    55,    56,    -1,    58,    59,    -1,    -1,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    -1,    79,    -1,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   193,    -1,   195,    -1,   197,    -1,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,    -1,    -1,   211,
      -1,    -1,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
     222,   223,   224,   225,    -1,   227,   228,   229,    -1,   231,
      -1,   233,    -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,
      -1,   243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,
     252,    -1,    -1,   255,    -1,    -1,    -1,   259,    -1,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,
      -1,    -1,    -1,   285,    -1,    -1,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,    -1,   308,   309,   310,    -1,
     312,   313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,
      -1,   323,   324,   325,   326,   327,   328,    -1,    -1,   331,
     332,    -1,   334,    -1,   336,    -1,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,    -1,
      -1,   353,   354,   355,   356,    -1,    -1,    -1,    -1,   361,
      -1,    -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   386,   387,    -1,    -1,   390,    -1,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,    -1,    -1,   405,   406,    -1,   408,    -1,   410,   411,
     412,   413,   414,    -1,   416,   417,   418,    -1,    -1,   421,
      -1,    -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,   438,    -1,    -1,   441,
      -1,   443,   444,    -1,   446,    -1,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,    -1,    -1,    -1,   461,
     462,   463,   464,   465,   466,   467,    -1,   469,   470,    -1,
     472,    -1,    -1,    -1,    -1,   477,   478,   479,    -1,    -1,
      -1,    -1,   484,    -1,    -1,    -1,   488,    -1,    -1,   491,
      -1,   493,    -1,   495,    -1,    -1,   498,   499,    -1,    -1,
      -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,
     512,    -1,    -1,   515,    -1,    -1,   518,    -1,   520,   521,
     522,   523,   524,    -1,    -1,    -1,    -1,    -1,   530,    -1,
     532,   533,   534,   535,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,    -1,    -1,   556,   557,    -1,   559,   560,   561,
     562,   563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,
     572,   573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,
      -1,   583,   584,   585,    -1,   587,   588,    -1,   590,   591,
      -1,    -1,    -1,    -1,    -1,   597,    -1,    -1,   600,    -1,
      -1,    -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,
      -1,   613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,
     622,   623,   624,    -1,    -1,   627,    -1,    -1,    -1,   631,
      -1,    -1,   634,    -1,   636,    -1,     5,   639,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    -1,    -1,    24,    25,    26,    27,    28,
      -1,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    -1,
      -1,    -1,    -1,    52,    53,    -1,    55,    56,    -1,    58,
      59,    -1,    -1,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    -1,
      79,    -1,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,   195,    -1,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,
      -1,    -1,   211,    -1,    -1,    -1,    -1,    -1,   217,    -1,
      -1,    -1,   221,   222,   223,   224,   225,    -1,   227,   228,
     229,    -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,
      -1,    -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,
      -1,   250,   251,   252,    -1,    -1,   255,    -1,    -1,    -1,
     259,    -1,    -1,   262,   263,    -1,   265,   266,    -1,    -1,
      -1,    -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,   285,    -1,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,    -1,   308,
     309,   310,    -1,   312,   313,   314,   315,    -1,   317,   318,
      -1,    -1,    -1,    -1,   323,   324,   325,   326,   327,   328,
      -1,    -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,
      -1,    -1,   361,    -1,    -1,    -1,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   386,   387,    -1,
      -1,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,    -1,    -1,    -1,   405,   406,    -1,   408,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,    -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,   438,
      -1,    -1,   441,    -1,   443,   444,    -1,   446,    -1,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,    -1,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,    -1,
     469,   470,    -1,   472,    -1,    -1,    -1,    -1,   477,   478,
     479,    -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,
      -1,    -1,   491,    -1,   493,    -1,   495,    -1,    -1,   498,
     499,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
     509,   510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,
      -1,   520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,
      -1,   530,    -1,   532,   533,   534,   535,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,    -1,    -1,   556,   557,    -1,
     559,   560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,   577,   578,
      -1,    -1,    -1,    -1,   583,   584,   585,    -1,   587,   588,
      -1,   590,   591,    -1,    -1,    -1,    -1,    -1,   597,    -1,
      -1,   600,    -1,    -1,    -1,   604,   605,   606,    -1,    -1,
      -1,    -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,
      -1,   620,   621,   622,   623,   624,    -1,    -1,   627,    -1,
      -1,    -1,   631,    -1,    -1,   634,    -1,   636,    -1,     5,
     639,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    -1,    -1,    24,    25,
      26,    27,    28,    -1,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    -1,    -1,    -1,    -1,    52,    53,    -1,    55,
      56,    -1,    58,    59,    -1,    -1,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    -1,    79,    -1,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
      -1,   197,    -1,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,    -1,    -1,   211,    -1,    -1,    -1,    -1,
      -1,   217,    -1,    -1,    -1,   221,   222,   223,   224,   225,
      -1,   227,   228,   229,    -1,   231,    -1,   233,    -1,    -1,
      -1,    -1,   238,    -1,    -1,    -1,    -1,   243,    -1,    -1,
      -1,   247,   248,    -1,   250,   251,   252,    -1,    -1,   255,
      -1,    -1,    -1,   259,    -1,    -1,   262,   263,    -1,   265,
     266,    -1,    -1,    -1,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,    -1,   279,   280,    -1,    -1,    -1,    -1,   285,
      -1,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,   308,   309,   310,    -1,   312,   313,   314,   315,
      -1,   317,   318,    -1,    -1,    -1,    -1,   323,   324,   325,
     326,   327,   328,    -1,    -1,   331,   332,    -1,   334,    -1,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,    -1,   353,   354,   355,
     356,    -1,    -1,    -1,    -1,   361,    -1,    -1,    -1,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     386,   387,    -1,    -1,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,    -1,    -1,    -1,   405,
     406,    -1,   408,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,    -1,    -1,   421,    -1,    -1,    -1,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,   438,    -1,    -1,   441,    -1,   443,   444,    -1,
     446,    -1,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,    -1,    -1,    -1,   461,   462,   463,   464,   465,
     466,   467,    -1,   469,   470,    -1,   472,    -1,    -1,    -1,
      -1,   477,   478,   479,    -1,    -1,    -1,    -1,   484,    -1,
      -1,    -1,   488,    -1,    -1,   491,    -1,   493,    -1,   495,
      -1,    -1,   498,   499,    -1,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,   509,   510,    -1,   512,    -1,    -1,   515,
      -1,    -1,   518,    -1,   520,   521,   522,   523,   524,    -1,
      -1,    -1,    -1,    -1,   530,    -1,   532,   533,   534,   535,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,    -1,    -1,
     556,   557,    -1,   559,   560,   561,   562,   563,    -1,    -1,
      -1,    -1,   568,   569,   570,   571,   572,   573,   574,   575,
      -1,   577,   578,    -1,    -1,    -1,    -1,   583,   584,   585,
      -1,   587,   588,    -1,   590,   591,    -1,    -1,    -1,    -1,
      -1,   597,    -1,    -1,   600,    -1,    -1,    -1,   604,   605,
     606,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     616,    -1,    -1,    -1,   620,   621,   622,   623,   624,    -1,
      -1,   627,    -1,    -1,    -1,   631,    -1,    -1,   634,    -1,
     636,    -1,     5,   639,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    -1,
      -1,    24,    25,    26,    27,    28,    -1,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    -1,    -1,    -1,    -1,    52,
      53,    -1,    55,    56,    -1,    58,    59,    -1,    -1,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    -1,    79,    -1,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,   195,    -1,   197,    -1,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,    -1,    -1,   211,    -1,
      -1,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,   222,
     223,   224,   225,    -1,   227,   228,   229,    -1,   231,    -1,
     233,    -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,   252,
      -1,    -1,   255,    -1,    -1,    -1,   259,    -1,    -1,   262,
     263,    -1,   265,   266,    -1,    -1,    -1,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,    -1,   279,   280,    -1,    -1,
      -1,    -1,   285,    -1,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
     323,   324,   325,   326,   327,   328,    -1,    -1,   331,   332,
      -1,   334,    -1,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,    -1,
     353,   354,   355,   356,    -1,    -1,    -1,    -1,   361,    -1,
      -1,    -1,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   386,   387,    -1,    -1,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,    -1,
      -1,    -1,   405,   406,    -1,   408,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,    -1,   421,    -1,
      -1,    -1,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,   438,    -1,    -1,   441,    -1,
     443,   444,    -1,   446,    -1,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,    -1,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,    -1,   469,   470,    -1,   472,
      -1,    -1,    -1,    -1,   477,   478,   479,    -1,    -1,    -1,
      -1,   484,    -1,    -1,    -1,   488,    -1,    -1,   491,    -1,
     493,    -1,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,   509,   510,    -1,   512,
      -1,    -1,   515,    -1,    -1,   518,    -1,   520,   521,   522,
     523,   524,    -1,    -1,    -1,    -1,    -1,   530,    -1,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,    -1,    -1,   556,   557,    -1,   559,   560,   561,   562,
     563,    -1,    -1,    -1,    -1,   568,   569,   570,   571,   572,
     573,   574,   575,    -1,   577,   578,    -1,    -1,    -1,    -1,
     583,   584,   585,    -1,   587,   588,    -1,   590,   591,    -1,
      -1,    -1,    -1,    -1,   597,    -1,    -1,   600,    -1,    -1,
      -1,   604,   605,   606,    -1,    -1,    -1,    -1,    -1,    -1,
     613,    -1,    -1,   616,    -1,    -1,    -1,   620,   621,   622,
     623,   624,    -1,    -1,   627,    -1,    -1,    -1,   631,    -1,
      -1,   634,    -1,   636,    -1,     5,   639,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,    -1,    -1,    -1,    24,    25,    26,    27,    28,    -1,
      -1,    -1,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    -1,    -1,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      -1,    -1,    -1,    -1,    64,    65,    66,    67,    -1,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    -1,    79,
      -1,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   193,    -1,   195,    -1,   197,    -1,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,    -1,
      -1,   211,    -1,    -1,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
      -1,   231,    -1,   233,    -1,    -1,    -1,    -1,   238,    -1,
      -1,    -1,    -1,   243,    -1,    -1,    -1,   247,   248,    -1,
     250,   251,    -1,    -1,    -1,   255,    -1,    -1,    -1,   259,
      -1,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,    -1,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,    -1,   279,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,   308,   309,
     310,    -1,   312,   313,   314,   315,    -1,   317,   318,    -1,
      -1,    -1,    -1,   323,   324,   325,   326,   327,   328,    -1,
      -1,   331,   332,    -1,   334,    -1,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,    -1,    -1,   353,   354,   355,   356,    -1,    -1,    -1,
      -1,   361,    -1,    -1,    -1,   365,    -1,   367,   368,   369,
      -1,   371,   372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   386,   387,    -1,    -1,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,    -1,    -1,   405,   406,    -1,   408,    -1,
     410,   411,   412,   413,   414,    -1,   416,   417,   418,    -1,
      -1,   421,    -1,    -1,    -1,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,   438,    -1,
      -1,   441,    -1,   443,    -1,    -1,   446,    -1,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,    -1,   457,    -1,    -1,
      -1,   461,   462,   463,   464,   465,   466,   467,    -1,   469,
     470,    -1,   472,    -1,    -1,    -1,    -1,   477,   478,   479,
      -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,   488,    -1,
      -1,   491,    -1,   493,    -1,   495,    -1,    -1,   498,   499,
      -1,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,   509,
     510,    -1,   512,    -1,    -1,   515,    -1,    -1,   518,    -1,
     520,   521,   522,   523,   524,    -1,    -1,    -1,    -1,    -1,
     530,    -1,   532,   533,   534,   535,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,    -1,    -1,   556,   557,    -1,   559,
     560,   561,   562,   563,    -1,    -1,    -1,    -1,   568,   569,
     570,   571,   572,   573,   574,   575,    -1,   577,   578,    -1,
      -1,    -1,    -1,   583,   584,   585,    -1,   587,   588,    -1,
     590,   591,    -1,    -1,    -1,    -1,    -1,   597,    -1,    -1,
     600,    -1,    -1,    -1,   604,   605,   606,    -1,    -1,    -1,
      -1,    -1,    -1,   613,    -1,    -1,   616,    -1,    -1,    -1,
     620,   621,   622,   623,   624,    -1,    -1,    -1,    -1,    -1,
      -1,   631,    -1,    -1,   634,    -1,   636,    -1,    -1,   639
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    13,    15,    31,    35,    49,    50,    57,    62,    63,
      80,    99,   121,   130,   131,   132,   143,   144,   156,   170,
     188,   203,   205,   210,   213,   237,   239,   257,   274,   278,
     374,   391,   404,   415,   437,   440,   442,   445,   448,   449,
     458,   460,   468,   474,   482,   487,   489,   519,   529,   582,
     594,   598,   601,   607,   635,   650,   661,   664,   665,   666,
     667,   668,   670,   675,   677,   684,   718,   745,   752,   753,
     872,  1042,  1084,  1086,  1100,  1103,  1108,  1110,  1111,  1116,
    1119,  1124,  1131,  1143,  1144,  1302,  1304,  1319,  1322,  1347,
    1355,  1366,  1373,  1387,  1391,  1394,  1404,  1410,  1415,  1417,
    1418,  1470,  1501,  1508,  1510,  1517,  1520,  1547,  1553,  1554,
    1555,  1556,  1613,  1621,  1622,    11,   108,   127,   197,   226,
     279,   409,   480,   546,   604,  1080,  1578,  1579,  1580,  1583,
     275,   362,  1118,  1548,   555,  1461,   230,     5,     7,     8,
       9,    10,    11,    14,    18,    19,    22,    24,    25,    26,
      27,    28,    29,    31,    35,    39,    42,    43,    44,    46,
      48,    49,    52,    55,    56,    58,    59,    60,    62,    64,
      65,    66,    67,    68,    70,    71,    73,    74,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    87,    88,
      90,    91,    92,    93,    94,    98,   101,   103,   106,   110,
     111,   112,   115,   120,   121,   126,   127,   129,   133,   135,
     136,   137,   138,   139,   143,   146,   147,   148,   152,   154,
     155,   157,   158,   159,   162,   163,   165,   166,   167,   168,
     169,   170,   173,   174,   175,   176,   177,   180,   181,   183,
     184,   185,   188,   192,   193,   195,   197,   199,   200,   201,
     202,   204,   206,   210,   211,   213,   216,   217,   221,   222,
     223,   224,   227,   228,   229,   231,   233,   238,   239,   243,
     247,   248,   250,   251,   255,   258,   259,   262,   265,   266,
     272,   273,   275,   277,   279,   280,   288,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   308,   309,   310,   312,   313,   314,
     315,   317,   318,   323,   324,   325,   326,   327,   328,   331,
     332,   334,   336,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   349,   350,   353,   354,   355,   356,   360,   361,
     365,   367,   368,   369,   371,   372,   373,   375,   385,   386,
     387,   389,   390,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   404,   405,   406,   408,   410,   411,   412,
     413,   414,   416,   417,   418,   421,   425,   426,   427,   428,
     429,   432,   433,   434,   435,   436,   438,   439,   441,   442,
     443,   446,   448,   450,   451,   453,   454,   455,   457,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     472,   473,   477,   478,   479,   480,   484,   488,   490,   491,
     492,   493,   495,   496,   497,   498,   499,   505,   506,   507,
     509,   510,   512,   515,   518,   519,   520,   521,   522,   523,
     524,   529,   530,   532,   533,   534,   535,   536,   537,   540,
     541,   542,   543,   545,   546,   549,   550,   551,   552,   553,
     556,   557,   559,   560,   561,   562,   563,   568,   569,   570,
     571,   572,   573,   574,   575,   577,   578,   582,   583,   584,
     585,   587,   588,   590,   591,   593,   594,   597,   600,   602,
     604,   605,   606,   613,   616,   620,   621,   622,   623,   624,
     631,   632,   634,   635,   636,   639,   712,  1459,  1464,  1468,
    1469,   308,   545,   548,  1504,  1504,   631,  1549,    69,    84,
     108,   196,   279,   480,   500,   546,   552,   596,   604,   693,
     695,   924,   925,   926,  1016,  1017,  1018,  1019,  1020,  1021,
    1022,  1356,  1303,    84,   108,   167,   197,   230,   279,   409,
     480,   546,   552,   579,   604,   620,  1315,  1464,  1118,   103,
     754,   711,   658,  1456,  1458,  1464,   676,  1320,   397,    87,
     417,  1416,   111,   230,   636,  1423,    35,   545,  1502,  1504,
    1118,   873,  1464,  1411,   468,   604,  1504,  1118,  1323,  1405,
     503,   742,   746,   747,  1464,   711,  1549,  1464,  1147,  1149,
    1150,   520,  1471,  1374,   746,   492,   577,   492,   548,  1368,
     397,    35,  1504,  1509,  1348,  1464,    31,    80,   154,   404,
     426,   460,   519,  1615,   474,   650,  1145,     0,   156,   662,
     404,   176,   192,   392,  1392,  1456,  1464,   160,  1054,  1464,
     160,   712,   207,   712,   267,  1461,  1464,  1466,   820,   821,
     824,   847,  1464,   711,   548,   167,  1048,  1578,  1504,  1549,
    1125,   719,   658,   567,  1101,  1112,    17,  1550,   225,   927,
     927,   207,  1466,   822,   847,   711,   381,  1575,  1579,  1580,
    1581,  1582,  1583,   548,   925,   230,  1020,  1019,   230,   230,
     226,   286,   418,  1364,  1365,     7,    22,    28,    34,    36,
      37,    38,    40,    53,    54,    60,    61,    70,    73,    93,
      96,    97,   102,   104,   107,   108,   113,   114,   115,   120,
     122,   125,   171,   178,   179,   186,   192,   200,   202,   208,
     214,   221,   225,   237,   240,   264,   272,   283,   311,   316,
     327,   331,   333,   337,   338,   339,   340,   341,   348,   357,
     358,   359,   363,   364,   369,   388,   394,   399,   400,   402,
     416,   444,   445,   457,   459,   465,   466,   472,   527,   528,
     534,   538,   539,   544,   555,   560,   561,   562,   563,   580,
     581,   582,   586,   589,   604,   609,   610,   611,   612,   617,
     619,   623,   624,   639,   643,   644,   649,   650,   653,   654,
     657,   658,   977,  1164,  1165,  1166,  1167,  1171,  1174,  1175,
    1176,  1177,  1178,  1179,  1187,  1191,  1203,  1442,  1444,  1446,
    1447,  1448,  1452,  1454,  1459,  1464,   225,  1314,  1314,  1314,
    1314,  1464,   207,  1314,  1314,   847,  1314,   711,  1314,  1504,
     671,  1395,   135,  1521,  1464,   373,    68,   422,   658,  1466,
     128,   215,   286,  1325,  1464,  1164,   241,  1419,   191,   191,
    1503,  1504,    47,   874,   194,    19,    34,    59,   308,  1379,
    1412,  1464,   711,  1120,  1504,   128,   286,  1326,  1354,    59,
     308,   417,   492,  1406,  1407,   613,   743,   482,   748,  1518,
     567,  1550,  1148,    12,   140,   215,   508,   509,   510,   511,
     512,   513,   531,  1154,  1155,  1156,  1574,  1472,    60,    61,
     125,   204,   275,   344,   394,   479,   577,   657,   979,  1464,
    1474,  1486,  1490,  1493,    35,    60,    67,    73,    97,    99,
     109,   158,   163,   166,   195,   197,   204,   206,   229,   230,
     231,   254,   275,   308,   373,   398,   408,   409,   412,   413,
     433,   479,   492,   530,   548,   549,   559,   605,   622,   979,
    1015,  1375,  1379,  1380,  1382,  1487,   748,   436,   515,  1095,
    1096,  1097,   422,   628,  1087,  1088,  1089,  1095,  1367,  1464,
    1354,    36,   214,   555,  1443,  1462,  1614,  1614,  1614,  1614,
    1614,  1149,  1145,   651,   656,  1464,   160,  1389,  1388,   325,
     553,   588,  1044,   602,   104,  1466,  1467,  1046,   826,   848,
    1464,  1045,   375,     6,    57,   144,   358,   421,   423,   849,
    1050,  1467,  1456,   712,   514,  1584,  1585,  1047,  1109,  1126,
    1127,  1128,  1129,  1456,   650,   720,  1464,   678,  1309,  1310,
    1456,  1309,    56,   360,   360,   437,  1551,   357,   358,  1170,
    1464,  1464,   825,   848,   190,     6,  1467,  1537,  1538,   445,
      10,   409,   579,   698,  1160,  1577,  1585,  1597,  1601,  1602,
    1608,   698,  1160,  1576,  1585,  1597,  1602,  1608,  1578,  1583,
     927,  1464,  1464,  1464,   194,  1357,  1361,  1362,  1464,  1364,
     650,   650,   650,  1174,   650,   650,   650,  1164,  1206,   650,
     650,   650,   650,   650,   650,   650,   650,   650,  1163,  1163,
     650,   965,   650,   650,   650,   555,   650,   650,   650,   650,
     650,   650,   650,   650,   650,   650,   650,   650,   650,  1164,
     650,   650,   650,  1204,  1205,  1452,  1464,   650,   650,   650,
     650,   650,   650,   650,   650,   650,  1164,   965,   650,   650,
     650,   650,   650,   650,   650,   650,   650,   650,   650,   650,
     650,   650,   650,   650,   650,   650,   965,   555,   650,   650,
     650,   555,   650,   650,   650,    36,   214,   555,   650,  1163,
     965,   965,   650,   650,   650,   650,   650,   650,  1174,  1174,
    1174,  1164,  1569,  1570,  1464,  1192,  1464,    16,    17,   378,
     381,   637,  1168,  1169,   160,   161,   198,   209,   249,   260,
     287,   351,  1172,    32,   141,   244,   268,   337,   431,   485,
     486,   498,   641,   642,   643,   644,   645,   646,   647,   648,
    1170,  1174,    72,   380,   652,  1462,   650,   658,   171,  1464,
    1464,   712,  1464,   370,   848,   712,  1466,   361,   621,   858,
     859,  1316,  1317,  1318,  1380,   712,  1467,  1536,  1308,  1314,
     608,   672,    34,    59,    67,   133,   158,   162,   199,   217,
     231,   280,   408,   417,   432,   450,   493,   524,   549,   559,
     605,  1396,  1401,  1402,  1504,    86,   657,   755,   756,   757,
     758,  1464,    12,    13,    99,   130,   144,   167,   170,   183,
     205,   230,   237,   278,   410,   414,   430,   438,   446,   474,
     487,   488,   540,   579,   601,   603,  1522,  1524,  1526,  1527,
      20,   160,  1258,  1259,  1511,  1464,  1080,   497,    49,    85,
     286,  1425,    29,    29,  1456,  1505,  1506,  1117,   270,   273,
     419,   875,   877,   657,   669,  1461,   280,    30,   280,  1121,
    1467,  1122,  1123,  1456,  1104,   241,  1311,  1327,  1328,  1456,
      49,  1408,   652,  1462,    55,    65,    77,    90,    91,    92,
     106,   326,   343,   470,   533,   551,   749,   751,    12,   414,
    1519,  1524,   468,  1552,  1551,   595,  1557,  1558,   645,  1158,
    1159,  1160,  1156,  1473,  1489,  1493,   482,   658,    34,   125,
     160,   483,   980,   981,  1338,  1466,   191,  1338,  1476,   657,
    1466,    34,   125,   983,   984,  1466,   658,  1477,  1475,  1338,
     166,   268,   626,  1386,  1386,   650,   108,   167,   197,   409,
     548,   579,   620,  1386,    12,   936,  1466,   269,  1277,  1279,
     194,   244,  1381,  1383,    71,   524,   191,  1386,   524,   545,
      71,   524,    12,    42,    94,    98,   248,   324,   387,   499,
     542,  1369,  1370,  1371,   166,   217,   524,   524,  1386,  1386,
    1386,  1277,  1386,  1383,   280,   157,    74,   411,   545,   578,
     524,   616,  1085,   652,   372,   633,    88,   652,  1310,  1080,
     652,   371,  1617,   541,  1618,   253,   453,  1616,   651,  1558,
    1560,  1562,  1563,   156,   663,  1466,  1143,  1319,  1322,  1347,
    1355,  1390,  1393,  1443,  1464,   125,   922,   923,   933,   934,
     988,   111,  1163,   657,   713,     6,   827,   713,   650,   110,
     844,   844,   844,     4,   652,   394,  1043,  1049,   473,   620,
    1585,  1309,   244,   652,   391,  1137,  1139,  1140,   721,   722,
    1164,   227,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   309,   310,   434,   435,   679,   680,   683,   176,   418,
     652,  1102,    58,   176,   180,   191,   323,   418,  1113,  1114,
    1115,    56,   437,   171,   650,   692,   827,   111,   844,   223,
     652,  1160,  1160,  1160,   167,   197,   197,  1585,  1456,  1023,
    1024,  1023,  1023,  1312,  1313,  1456,  1457,  1464,   652,  1359,
     658,  1363,  1164,  1164,    12,   140,  1199,  1260,  1199,  1199,
    1199,   625,  1208,  1164,  1164,  1203,  1203,  1164,  1164,  1164,
     140,  1199,  1260,   651,   364,   651,   651,  1164,  1164,  1164,
    1164,  1452,  1569,   116,   117,   118,   119,   120,   218,   219,
     220,   221,   327,   329,   330,   331,   338,   416,   471,   472,
     623,   638,   639,  1255,  1256,  1164,  1203,   112,   115,   560,
     563,  1257,   140,  1194,  1164,  1164,  1164,  1164,  1255,  1164,
    1203,  1205,     9,   652,   658,   140,  1199,  1164,  1164,   140,
    1199,  1164,  1164,  1203,  1203,  1203,  1164,  1164,  1164,  1203,
    1167,  1164,  1164,  1164,  1164,  1164,  1164,   651,  1164,  1199,
    1199,  1164,  1164,   140,  1199,  1164,  1256,  1256,  1164,    45,
     261,   576,  1164,  1164,   651,  1453,  1454,  1464,  1199,  1199,
    1164,  1164,  1164,   651,   652,   651,   474,   650,  1566,  1567,
    1164,   657,  1193,  1466,   658,  1164,  1164,  1164,  1166,   179,
     363,   581,   597,  1170,    12,    18,  1166,  1173,  1167,  1167,
     650,  1174,  1167,  1167,  1167,  1167,   268,  1167,  1167,   240,
    1167,   240,  1167,  1167,  1167,  1167,  1167,    32,   244,   268,
     431,  1466,  1174,  1164,  1180,  1464,   658,  1456,  1316,   652,
    1318,   158,   652,  1309,  1305,   657,   673,   674,   280,   280,
     280,   280,    49,   280,   280,   652,  1397,   115,   560,   563,
     750,   760,  1191,  1446,  1452,  1466,   652,   160,   408,  1525,
     462,   462,   546,   552,   604,   620,   376,  1529,   545,   370,
    1531,    66,   492,  1528,   109,   620,  1530,   370,   652,  1464,
     184,   354,  1464,  1512,  1513,  1327,  1461,  1132,   275,  1424,
    1259,   652,  1309,    74,   650,   882,   883,   882,   883,   392,
     885,   211,   256,  1466,    30,   567,  1414,   122,   186,   283,
     364,   586,  1286,  1287,  1288,    30,   567,  1413,   652,   567,
     652,   567,  1309,  1328,  1324,   391,  1222,  1223,    12,  1409,
    1407,   652,   160,  1525,   370,   370,  1464,    12,   140,  1565,
     652,  1151,  1164,  1450,  1464,   191,   652,  1338,  1464,    72,
     986,  1164,  1467,   369,   394,   555,  1499,   250,   422,  1494,
    1495,  1496,  1497,   204,   275,   479,  1488,  1338,  1464,   577,
    1478,  1489,   652,  1480,  1491,   244,  1384,  1461,  1164,   645,
     927,   712,   712,   712,  1456,   712,  1456,   280,   342,   524,
    1378,  1378,   283,   364,   586,  1280,  1281,  1444,  1464,  1386,
    1464,   712,  1386,  1467,  1381,   712,  1386,   247,   543,   181,
     191,  1372,   652,  1384,   525,   526,  1381,  1456,  1383,  1381,
    1381,  1386,  1386,   600,  1098,  1097,   495,  1089,   474,   650,
     654,  1209,  1210,  1211,  1212,  1213,  1224,  1225,  1239,  1443,
     395,  1619,   379,  1273,  1279,  1564,   923,    72,   979,   136,
    1466,    78,    93,   258,   335,   360,   420,   514,   715,   717,
     427,   590,   845,   846,   233,   841,   842,   843,   850,   858,
     859,   108,   216,   385,   394,   401,   496,   604,   696,   697,
    1461,    25,   315,   835,   836,   837,   850,   851,   852,   858,
     859,   828,   829,   835,  1467,   174,     6,    11,    13,    15,
      26,    27,    57,    62,    63,    70,    78,    87,    96,   111,
     129,   137,   138,   144,   152,   158,   169,   189,   228,   230,
     238,   255,   278,   314,   332,   336,   374,   379,   386,   391,
     394,   425,   439,   440,   441,   442,   464,   521,   522,   523,
     530,   546,   550,   582,   595,   869,   929,   931,   933,   934,
    1055,  1059,  1061,  1064,  1070,  1071,  1072,  1077,  1078,  1269,
     370,   706,  1051,   127,   243,  1456,   125,  1130,  1464,  1128,
    1456,   871,  1139,   230,   256,  1013,  1141,   651,   652,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   652,  1310,   602,  1114,   589,   694,  1191,
    1442,   921,   922,    78,   355,   428,   591,   838,   839,   840,
     850,   854,   855,   856,   857,   858,   859,   632,   607,   823,
      47,   628,  1538,   197,   712,   712,   927,   712,  1464,   685,
     584,   608,  1031,   370,   370,   370,   652,  1360,  1222,   658,
    1363,  1362,   194,   645,  1464,   652,   651,  1199,   651,  1200,
     651,   651,   651,  1164,   150,   625,  1207,    20,   651,   608,
     651,   651,   651,   652,   608,   652,  1188,   651,   645,   651,
     652,   652,   651,   651,   651,   651,   194,   652,   651,   652,
    1190,   651,   652,   652,   652,   644,   652,   651,   651,   650,
    1452,  1464,  1199,   651,   651,   651,  1199,   651,   652,   651,
     651,   651,   651,   651,   651,   652,   651,   244,   651,   652,
     652,   651,   652,   652,   651,   651,   651,   652,   194,   652,
    1199,   651,   651,   652,   652,   652,   651,   194,  1164,   194,
    1164,   194,  1164,   194,   651,   652,   651,   651,   651,   651,
     652,    20,   266,   652,  1003,   651,  1203,  1229,  1230,  1231,
     474,   650,  1146,  1561,  1562,   595,  1571,   655,  1488,   483,
    1464,   179,   363,   581,   597,   650,    17,  1164,  1569,   165,
    1265,  1167,  1164,  1164,  1167,   650,  1174,  1167,  1160,  1184,
    1185,  1186,   650,   658,  1464,  1306,  1318,  1338,  1339,  1467,
      51,   452,  1081,  1309,  1466,   652,  1402,  1309,  1403,   758,
     761,   762,   757,   365,   466,   759,   545,   650,  1539,  1467,
    1539,  1539,  1539,   197,   409,   548,  1523,  1527,   160,   184,
     198,   209,   259,   260,   287,   354,   406,  1514,  1516,   626,
    1261,  1321,  1133,  1134,  1135,  1136,  1456,   232,   286,   422,
     633,  1507,  1506,   650,  1160,   214,   283,   364,   586,  1284,
    1287,   537,   886,   876,    11,   878,  1164,  1461,  1164,  1461,
    1467,  1467,  1123,  1456,   176,   418,   606,  1105,  1106,  1107,
     474,   482,   612,   613,   650,   917,  1329,  1332,   650,   751,
     750,   652,  1467,   197,   409,  1523,  1559,  1159,   194,   241,
    1152,  1153,  1272,  1273,  1297,  1161,  1161,   658,   665,  1489,
      12,    34,   125,   370,  1164,  1500,   125,   985,   987,  1466,
    1338,   650,   650,   266,   372,   633,   652,   652,   658,   658,
     658,  1493,  1164,  1494,  1479,  1481,  1482,  1500,  1461,   194,
    1385,   651,  1464,   368,   652,  1386,   417,  1277,  1371,  1385,
    1386,  1381,  1456,  1386,  1386,   505,   506,   507,   683,  1099,
     604,  1090,  1091,   194,  1238,  1464,   100,   234,   253,   264,
     347,   459,   531,  1221,   482,   652,  1456,  1238,   652,   191,
    1620,    47,  1277,  1339,  1339,   345,  1461,   514,   514,   514,
     514,   514,   473,  1461,  1461,  1339,   652,   843,  1461,  1461,
    1461,  1461,   122,   186,   214,   283,   364,   586,  1283,  1461,
    1461,   651,   652,  1339,  1339,   652,   837,   830,   831,   850,
     851,   852,   394,    75,    89,   391,   945,   948,   949,  1011,
    1013,  1021,  1022,  1079,  1339,  1079,   391,  1339,  1339,  1079,
    1339,   391,   391,  1339,  1339,   567,   136,  1339,   254,   546,
     190,   391,   407,  1013,  1079,   254,  1339,   391,   546,   136,
    1339,  1339,  1339,  1339,  1339,  1079,   391,    47,  1339,   871,
    1339,   391,   393,    20,   160,   567,  1083,   391,   391,  1339,
    1339,  1339,  1339,   139,   324,  1464,  1339,   391,  1339,   929,
     652,   868,   869,  1059,   650,   658,   944,   950,  1455,  1464,
      82,   469,   440,  1052,  1586,  1138,   650,  1164,   650,  1283,
    1460,  1461,  1283,  1283,  1460,  1460,   122,   186,   283,   364,
     586,  1285,  1460,  1283,  1283,  1460,  1460,  1460,  1460,  1460,
    1460,  1460,  1283,  1283,  1460,  1447,  1460,  1283,   680,   651,
    1339,  1339,  1339,  1339,   652,   840,  1466,   279,   177,   832,
     833,   834,   850,   851,   852,   853,   856,   857,   858,   859,
     394,   555,  1466,  1464,  1609,     8,    30,   818,   712,   650,
     455,   268,   650,   861,   928,   930,   931,    46,   211,   467,
    1036,  1036,  1456,  1456,  1456,  1313,  1464,   608,  1358,  1464,
    1210,   658,  1363,   240,  1164,   651,  1164,   558,  1164,  1164,
     154,    34,    61,   112,   115,   123,   349,   490,   563,   599,
    1201,   980,  1164,   980,  1201,  1203,   651,   240,   240,  1164,
    1164,  1164,  1203,  1164,  1164,  1164,  1164,  1164,  1167,   651,
     651,  1164,  1164,  1164,  1164,  1164,  1164,  1203,   240,  1164,
    1164,  1164,   651,  1164,  1164,  1164,  1164,   194,  1164,   194,
    1164,   194,  1164,  1164,  1164,    34,    61,   998,   999,  1000,
    1001,  1002,  1284,  1283,   651,   651,  1572,  1573,  1574,  1230,
    1146,   651,  1565,  1466,  1164,  1569,  1166,   651,   652,   651,
    1174,  1255,  1255,    17,  1164,  1569,  1265,  1164,   651,   652,
    1202,  1203,  1464,  1307,   935,  1466,  1081,   674,  1398,   160,
     652,  1464,  1540,  1541,   567,   645,  1456,  1464,  1535,  1535,
    1535,  1515,  1262,  1278,  1279,  1329,   652,  1137,  1139,   555,
    1463,   633,   275,   879,   880,   881,  1464,   891,  1167,    47,
     650,   893,   883,   160,   650,   567,  1106,   918,  1330,   650,
    1335,  1340,  1335,   651,   917,  1331,  1449,  1450,  1453,  1464,
    1333,  1254,  1464,   160,   205,   194,  1535,  1535,  1535,  1144,
     145,  1210,  1298,   191,   278,  1157,  1297,  1278,  1153,    20,
    1162,  1461,  1464,   645,  1464,  1499,   555,   555,   422,   443,
     477,  1498,  1496,  1495,  1492,  1480,   652,  1484,  1486,  1490,
    1285,  1376,   163,   622,  1281,  1281,   364,  1377,  1261,  1381,
     160,   160,   652,   160,   394,  1092,   479,  1226,  1233,  1238,
    1209,   253,   253,   382,  1240,   253,   264,   459,  1240,  1224,
    1209,  1350,  1351,  1453,  1211,  1222,  1235,  1236,  1283,   328,
    1274,   987,   981,   111,   111,   127,   243,   860,  1286,  1459,
     843,   697,   860,   860,   837,   652,   831,   174,  1039,  1455,
    1118,    63,   190,   407,   947,  1012,  1017,  1039,  1013,  1014,
    1014,   125,  1464,  1455,  1118,  1285,  1283,  1455,  1283,    12,
    1060,  1068,  1069,  1464,  1118,  1461,  1461,   979,  1339,  1283,
     256,  1068,   256,  1455,  1455,   935,  1069,  1339,   184,   259,
     360,   938,  1283,   125,  1464,  1285,  1285,  1455,  1118,  1270,
    1271,  1453,   125,  1283,   870,  1461,  1118,   871,  1456,  1118,
    1118,    81,    83,   125,   148,   185,   429,   568,   569,   570,
     571,   572,   573,   574,   575,   937,   125,  1283,   125,  1283,
     125,  1283,  1283,  1060,   932,     6,   144,  1072,   941,   942,
     943,   944,   945,  1464,     8,   184,  1082,   430,   946,   947,
    1005,   951,   658,   358,   405,    24,   168,   700,   567,   137,
     152,   702,   650,  1587,   650,   407,  1251,  1252,  1253,  1464,
     681,   682,  1283,  1461,  1284,   860,   860,   840,   375,   207,
    1339,   652,   834,   555,    20,   455,   650,   130,   237,   601,
     819,   699,  1603,   123,   242,   424,   532,   940,  1456,   268,
     862,   867,   868,   941,   867,   652,   930,   686,   688,   690,
     658,  1210,  1261,  1363,  1261,  1164,   651,  1164,   558,   650,
     969,   970,   970,   650,   964,   650,   962,   963,   969,   970,
     242,   964,   242,   651,   651,   651,   651,   651,  1189,  1164,
    1164,   651,   651,   652,   651,   379,  1196,   652,   652,   651,
     652,   651,   244,  1181,  1182,   651,   651,   651,   651,   652,
     651,   651,  1164,   651,   191,   651,   651,   652,   651,   652,
     652,   651,  1164,   651,  1164,   651,  1164,   651,   651,   651,
     650,   993,   993,    21,   131,   457,   643,   995,   996,   997,
     652,   652,  1158,  1574,   651,  1568,   658,  1040,   651,  1203,
    1166,   651,   652,   651,  1161,  1186,   651,  1076,  1077,  1078,
     191,   628,  1399,    55,    65,    77,    90,    91,    92,   106,
     326,   343,   454,   470,   533,   551,   763,   762,   651,   652,
    1537,   658,   658,   567,   567,   567,   650,  1164,   370,  1345,
    1135,  1456,  1139,   226,  1142,  1420,   651,   652,  1161,   877,
     391,   894,   895,  1284,   879,  1467,  1154,  1336,  1337,  1453,
    1341,   652,   650,  1332,   651,   651,   652,   658,  1557,   651,
     652,   750,   376,  1537,   194,   194,   194,  1261,  1261,   146,
     383,  1293,  1294,  1299,   601,   244,  1461,  1464,   658,   651,
     651,    79,   587,   422,  1338,  1483,  1485,  1277,  1277,  1386,
    1461,  1461,   683,  1461,   160,   126,  1093,  1164,   595,   651,
    1561,  1234,   655,   253,  1224,  1240,  1240,   253,   370,   370,
     608,   652,  1349,  1338,  1259,  1154,  1164,  1275,  1451,   831,
    1062,   650,   256,   256,  1039,  1014,  1024,  1039,  1039,   144,
     482,  1060,  1073,  1057,   652,  1284,   981,  1461,  1455,  1081,
     628,  1461,  1074,  1060,   652,    21,   131,  1276,   874,  1060,
    1065,  1060,   650,   651,   652,  1464,  1456,    33,    34,    39,
      41,    43,    44,    61,   112,   115,   123,   142,   159,   185,
     187,   200,   201,   242,   272,   281,   282,   284,   320,   321,
     322,   339,   340,   341,   346,   349,   366,   367,   399,   400,
     424,   478,   482,   494,   556,   560,   563,   564,   565,   566,
     614,   615,   639,   952,   955,   956,   957,   958,   959,   960,
     961,  1464,   405,  1164,  1164,   370,   706,   712,   370,    78,
     707,  1464,  1588,    20,  1060,   651,   652,   651,   652,   650,
    1464,   860,   834,  1461,   940,  1610,   370,   370,   723,   724,
     726,  1464,   497,  1456,   917,   651,   226,   445,   864,  1426,
     930,   650,   650,   650,  1464,  1261,  1272,  1255,  1164,   122,
     283,   364,   586,    22,    34,    48,   593,   979,   989,   990,
     991,   364,   364,   651,  1255,  1255,  1164,    47,   476,  1195,
    1164,  1164,  1203,    43,   347,   651,   628,  1183,  1164,  1255,
    1164,  1164,  1164,  1164,   651,   651,   651,  1284,   651,  1003,
     998,   996,   998,   999,  1283,  1232,  1566,  1464,   651,  1203,
    1162,  1078,  1077,  1400,   422,  1541,   628,  1544,   645,   645,
    1537,  1537,  1537,   125,  1164,  1343,  1344,   147,  1142,   262,
    1426,   881,   651,   211,   256,   896,   651,   652,   651,  1158,
     652,  1338,  1342,  1343,  1340,  1334,  1332,  1449,  1464,   871,
    1464,   194,  1537,  1537,  1537,  1278,   207,  1266,  1463,  1463,
     657,  1295,  1296,  1466,   484,   645,  1500,  1484,  1489,  1461,
     160,   396,  1094,  1565,  1259,  1212,  1209,  1224,   253,   253,
    1209,  1224,  1215,  1214,  1216,  1351,  1261,  1344,  1249,  1250,
    1158,   652,  1276,   392,   650,  1063,  1164,  1039,  1024,   650,
    1023,  1023,   125,   125,   950,  1113,  1069,   986,   548,   952,
    1056,  1271,  1066,  1068,  1058,  1403,   943,   650,  1006,   969,
     969,   970,   964,   962,   403,   953,   962,   962,   991,    61,
     614,   956,   958,   991,   991,    61,   615,   615,   618,   962,
     954,   970,   964,   964,   991,   969,   970,    26,    72,    76,
      78,   125,   363,   370,   407,   478,   530,   972,   973,   974,
    1004,  1017,  1170,   618,   969,   991,    34,   969,   992,   969,
     969,   970,   650,   963,   971,   658,  1255,   492,  1461,   143,
    1053,   651,   652,  1589,  1590,   651,  1252,   682,   696,   497,
     235,   244,   384,   727,   728,   729,   730,  1160,   469,   651,
     652,   725,  1461,   651,   651,   928,    20,   920,  1037,  1038,
    1464,  1037,  1037,   269,  1282,   651,   651,   651,   651,   651,
      34,    22,   593,   979,    34,   980,   651,   652,   651,   651,
     651,  1197,  1443,   651,   651,   652,   651,   334,   258,   417,
     651,   651,   651,   651,   651,   651,   994,   651,   652,   939,
    1153,  1278,  1561,   651,   175,   278,   205,   447,  1542,  1542,
    1542,   651,   652,  1346,   241,   650,   884,   878,   897,  1464,
     895,   919,  1337,  1344,   651,  1560,  1537,    47,   212,  1263,
    1300,  1466,   652,   334,  1461,   160,  1227,   370,  1218,  1224,
    1224,   370,  1220,  1164,  1164,   650,  1272,  1247,  1248,  1237,
    1451,  1284,   894,   651,   650,   650,  1037,   650,   650,   115,
     560,   563,   643,   644,  1445,  1446,  1082,  1456,   972,  1118,
    1067,  1105,   651,  1007,  1464,   311,  1008,   490,   599,   640,
     966,   967,   968,   650,   966,   966,   991,   618,   966,   650,
     991,   966,   985,    83,   125,   148,   185,  1461,   977,   978,
    1445,   601,   125,   125,   139,   324,   974,   256,   256,   363,
     991,   992,   991,   992,   966,   364,   966,  1464,   701,   708,
     709,  1464,   474,   650,  1591,  1594,   651,  1461,   651,   652,
     725,  1598,   700,  1604,   726,   952,   976,   863,   867,   650,
     917,   651,   652,  1276,   650,   651,   651,  1281,   980,   992,
     364,  1198,  1451,  1164,   334,   173,   651,  1283,  1157,  1157,
     376,    64,   251,   356,   516,   535,   634,  1533,  1534,   628,
    1543,  1543,  1543,  1344,   256,   548,  1160,   887,   650,   612,
     898,   939,  1267,  1451,  1264,  1272,   979,   982,  1296,  1461,
    1566,  1217,   608,  1219,   608,  1254,  1282,   189,   226,   607,
    1242,  1243,  1246,   939,  1276,   651,  1037,  1037,   651,  1037,
    1037,  1447,  1447,   871,  1075,   241,   651,   652,   195,   390,
     491,   370,  1009,   968,  1041,  1443,  1041,   628,   975,   977,
     613,   518,   703,    53,    68,   182,   225,   252,   263,   373,
     456,   710,   768,   770,   771,   772,   774,   775,   776,   777,
     778,   779,   781,   789,   790,   793,   804,   807,   809,   810,
    1459,  1465,  1469,  1595,   650,  1593,  1594,   628,  1596,  1592,
    1611,   729,  1464,  1456,   705,   706,   455,   986,  1560,   864,
     917,   865,    78,   255,  1025,  1028,  1031,  1032,  1033,  1038,
     364,   628,  1026,  1030,  1032,  1035,  1027,  1029,  1032,  1034,
     651,   652,  1276,   651,   651,   555,   555,   555,    17,  1532,
     205,   312,   313,   317,   318,  1545,  1546,   601,  1456,   891,
     536,   892,   889,   890,  1464,   244,   265,    78,   111,   230,
     314,   332,   355,   546,   914,   915,   916,  1380,   629,   630,
     652,  1268,  1276,  1164,  1278,   981,  1301,  1228,  1164,   650,
    1164,   650,   651,  1013,  1013,  1243,   651,   651,  1025,   651,
     651,  1082,   650,  1464,   130,   601,   651,   652,   651,    84,
    1164,   155,   704,   791,   794,  1464,   194,   354,   782,   769,
    1465,  1465,  1464,   773,   665,   285,   444,   627,   813,    31,
     811,   659,  1149,  1593,   651,    52,    63,   275,  1557,   714,
     976,   191,   702,  1605,   651,  1557,  1461,  1339,   687,  1033,
    1276,   651,   389,   689,  1035,   691,  1034,  1451,  1533,   376,
    1283,  1283,  1283,  1283,  1546,  1352,  1353,  1453,  1222,  1161,
    1284,   651,   652,   900,   557,  1339,   136,   136,  1339,  1339,
    1339,  1339,   650,   909,   916,   158,  1451,   409,  1289,    74,
    1427,  1561,  1254,  1254,   191,  1241,  1241,  1005,  1025,  1026,
    1027,   894,    51,   360,   452,   482,  1010,  1010,   991,  1443,
     991,  1464,  1164,  1164,   625,   796,   800,   194,  1464,   784,
     785,  1164,   732,   767,   768,   770,   772,   774,   776,   777,
     778,   779,   781,   789,   804,   807,   809,   732,   814,   812,
     805,   808,   651,  1560,    63,   376,    63,   134,   715,   716,
    1170,  1612,  1160,   707,   976,   866,  1283,  1076,  1459,  1076,
    1076,  1276,   652,  1338,  1421,   651,   888,   890,   650,   902,
     904,   899,  1461,  1339,  1339,  1286,  1286,  1284,  1466,   537,
     910,   911,  1339,  1276,    14,   153,   164,   377,   554,  1428,
    1429,   271,  1430,   651,   651,   207,   253,   379,  1245,  1244,
     651,     5,   125,   363,   370,   370,   792,   801,   150,   800,
     803,   241,   154,  1164,   154,   767,   656,   600,  1164,   733,
     813,   811,   376,   376,   134,   767,  1599,   143,  1606,  1560,
    1353,  1344,   982,   892,   650,   903,   904,   905,   319,   901,
     904,  1461,  1461,   912,   651,   652,   935,  1290,    47,    47,
     153,    47,  1429,   517,   554,  1431,  1432,    47,    47,   650,
     650,   601,   130,   625,   795,   797,  1164,   732,   154,   780,
     225,   786,   285,   656,   816,   815,   124,   731,   734,   806,
    1465,   806,   149,   708,   714,  1422,   651,   652,   319,   907,
     908,  1167,   913,  1466,   911,   650,  1443,  1443,    47,  1443,
      47,    47,  1432,  1251,  1253,  1010,  1010,   798,   797,   803,
     802,    53,   783,  1464,   558,  1164,   143,    95,   172,   738,
     764,  1464,   154,   767,   656,   465,  1607,   463,  1433,   904,
     652,   906,   914,   364,  1291,  1292,  1443,  1443,  1443,   651,
     651,  1164,   154,   558,   652,   732,   817,   732,   210,   652,
     735,    86,   105,   656,  1600,   767,   223,  1427,   908,   651,
     651,   652,   799,    53,   732,  1464,   787,   154,   154,   191,
    1464,   976,   191,   191,   767,    47,  1430,  1292,   558,   150,
     151,   788,   444,   627,   736,   125,   765,   741,   742,  1283,
     737,  1443,   226,  1434,   732,   732,   784,   502,   504,   739,
     740,   741,   744,  1170,  1464,   766,  1143,   364,   650,  1436,
     652,   767,   193,  1164,   271,   463,  1435,   651,   657,  1437,
    1438,  1453,   482,  1439,   740,  1466,   651,   652,  1440,  1441,
    1453,  1438,   652,  1338,  1441,  1160,  1344,  1161
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   660,   661,   662,   661,   661,   663,   663,   664,   664,
     665,   665,   665,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   665,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   665,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   665,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   665,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   666,   667,   667,   668,   669,   669,   671,   670,
     672,   672,   673,   673,   674,   676,   675,   678,   677,   679,
     679,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   681,   681,   681,   682,   683,   683,   683,   683,
     685,   684,   686,   687,   684,   688,   689,   684,   690,   691,
     684,   692,   684,   693,   684,   684,   684,   684,   684,   684,
     694,   694,   695,   696,   696,   697,   697,   697,   697,   697,
     697,   697,   699,   698,   701,   700,   700,   702,   702,   702,
     702,   703,   703,   704,   704,   705,   705,   706,   706,   707,
     707,   709,   708,   710,   710,   710,   710,   710,   710,   710,
     710,   710,   710,   710,   710,   710,   711,   712,   712,   713,
     713,   714,   714,   715,   715,   715,   715,   715,   715,   715,
     716,   716,   716,   717,   717,   719,   718,   720,   720,   721,
     721,   722,   722,   723,   723,   724,   724,   725,   726,   727,
     727,   728,   728,   729,   730,   730,   730,   730,   731,   731,
     732,   732,   733,   733,   735,   734,   734,   736,   734,   737,
     734,   738,   738,   739,   739,   740,   741,   741,   742,   743,
     743,   744,   744,   744,   744,   744,   745,   746,   746,   747,
     747,   748,   748,   749,   749,   750,   750,   750,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     752,   753,   754,   754,   755,   755,   756,   756,   757,   758,
     758,   759,   759,   760,   761,   761,   762,   763,   763,   763,
     763,   763,   763,   763,   763,   763,   763,   763,   763,   763,
     764,   764,   765,   766,   765,   767,   767,   767,   767,   767,
     767,   767,   767,   767,   767,   767,   767,   767,   769,   768,
     771,   770,   773,   772,   775,   774,   776,   777,   778,   780,
     779,   781,   782,   782,   782,   783,   783,   785,   786,   787,
     784,   788,   788,   788,   789,   789,   791,   792,   790,   794,
     793,   795,   795,   796,   796,   798,   799,   797,   801,   802,
     800,   803,   803,   805,   804,   806,   806,   808,   807,   810,
     809,   812,   811,   813,   814,   815,   813,   816,   817,   813,
     818,   818,   819,   819,   819,   820,   821,   822,   823,   823,
     824,   824,   825,   826,   827,   827,   829,   828,   830,   830,
     830,   831,   831,   831,   832,   832,   833,   833,   833,   834,
     834,   834,   834,   834,   834,   834,   834,   835,   835,   836,
     836,   836,   837,   837,   837,   837,   837,   838,   838,   839,
     839,   839,   840,   840,   840,   840,   840,   840,   840,   841,
     841,   842,   842,   842,   843,   843,   843,   844,   845,   846,
     847,   848,   849,   849,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   859,   860,   860,   861,   861,
     861,   861,   862,   863,   862,   864,   865,   864,   866,   864,
     867,   868,   868,   870,   869,   871,   873,   872,   874,   875,
     876,   875,   875,   875,   875,   875,   877,   877,   878,   878,
     879,   879,   880,   880,   881,   882,   883,   884,   885,   885,
     886,   887,   886,   888,   886,   889,   889,   890,   891,   892,
     892,   893,   893,   894,   894,   896,   895,   897,   898,   899,
     898,   900,   898,   901,   901,   902,   902,   903,   903,   905,
     906,   904,   907,   907,   908,   908,   909,   909,   910,   910,
     912,   911,   913,   914,   914,   915,   915,   916,   916,   916,
     916,   916,   916,   916,   916,   918,   919,   917,   920,   920,
     921,   921,   922,   922,   923,   923,   924,   924,   925,   925,
     926,   927,   927,   928,   928,   929,   929,   930,   930,   930,
     931,   931,   931,   931,   931,   931,   931,   931,   931,   931,
     931,   931,   931,   931,   931,   931,   931,   931,   931,   932,
     931,   931,   931,   931,   931,   931,   931,   931,   931,   931,
     931,   933,   934,   935,   936,   937,   937,   937,   937,   937,
     937,   937,   937,   937,   937,   937,   937,   937,   937,   938,
     938,   938,   939,   939,   940,   940,   940,   940,   941,   942,
     942,   943,   943,   944,   944,   945,   945,   945,   945,   945,
     945,   946,   946,   947,   948,   948,   949,   951,   950,   952,
     952,   952,   952,   952,   952,   952,   952,   952,   952,   952,
     952,   952,   952,   952,   952,   952,   952,   952,   952,   952,
     952,   952,   952,   952,   952,   952,   952,   952,   952,   952,
     952,   952,   952,   952,   953,   952,   954,   952,   952,   952,
     955,   955,   955,   955,   955,   955,   955,   955,   956,   957,
     957,   958,   958,   959,   959,   959,   959,   959,   960,   960,
     960,   960,   960,   961,   961,   961,   962,   962,   962,   963,
     964,   964,   965,   965,   965,   966,   966,   967,   967,   968,
     968,   968,   969,   969,   969,   969,   970,   970,   971,   971,
     972,   972,   973,   973,   974,   974,   974,   974,   974,   974,
     974,   974,   974,   974,   974,   974,   974,   974,   974,   974,
     974,   974,   975,   975,   976,   977,   978,   978,   979,   979,
     980,   980,   981,   981,   982,   982,   983,   983,   984,   984,
     985,   986,   986,   987,   987,   988,   988,   989,   989,   989,
     990,   990,   990,   991,   991,   991,   991,   991,   991,   991,
     992,   992,   994,   993,   995,   995,   996,   997,   997,   997,
     997,   998,   999,  1000,  1000,  1001,  1002,  1002,  1003,  1003,
    1004,  1004,  1005,  1006,  1006,  1007,  1007,  1008,  1008,  1008,
    1008,  1009,  1009,  1009,  1009,  1009,  1010,  1010,  1010,  1010,
    1010,  1011,  1012,  1012,  1013,  1013,  1014,  1014,  1015,  1015,
    1015,  1016,  1016,  1017,  1017,  1018,  1018,  1018,  1019,  1020,
    1021,  1022,  1023,  1024,  1024,  1025,  1025,  1026,  1026,  1027,
    1027,  1028,  1028,  1029,  1029,  1030,  1030,  1031,  1031,  1032,
    1032,  1033,  1033,  1034,  1035,  1035,  1036,  1036,  1036,  1037,
    1037,  1038,  1038,  1039,  1039,  1040,  1040,  1041,  1041,  1043,
    1042,  1044,  1042,  1042,  1045,  1042,  1046,  1042,  1047,  1042,
    1048,  1042,  1049,  1042,  1042,  1042,  1042,  1042,  1042,  1042,
    1050,  1050,  1051,  1051,  1051,  1051,  1052,  1052,  1053,  1053,
    1054,  1054,  1055,  1055,  1055,  1055,  1055,  1055,  1055,  1055,
    1055,  1055,  1056,  1055,  1055,  1057,  1055,  1058,  1055,  1055,
    1055,  1055,  1055,  1059,  1060,  1060,  1062,  1061,  1063,  1063,
    1063,  1065,  1064,  1066,  1067,  1066,  1068,  1068,  1069,  1070,
    1070,  1071,  1072,  1072,  1072,  1073,  1072,  1074,  1075,  1072,
    1072,  1072,  1072,  1072,  1072,  1072,  1072,  1072,  1072,  1072,
    1072,  1072,  1072,  1072,  1072,  1076,  1076,  1076,  1076,  1076,
    1077,  1077,  1078,  1078,  1079,  1079,  1080,  1080,  1081,  1081,
    1081,  1082,  1082,  1082,  1083,  1083,  1083,  1083,  1085,  1084,
    1084,  1086,  1087,  1087,  1088,  1088,  1089,  1089,  1089,  1089,
    1090,  1091,  1091,  1092,  1092,  1093,  1093,  1094,  1094,  1095,
    1095,  1096,  1096,  1097,  1097,  1098,  1098,  1099,  1099,  1099,
    1099,  1099,  1101,  1100,  1102,  1102,  1102,  1104,  1103,  1105,
    1105,  1106,  1106,  1107,  1107,  1107,  1109,  1108,  1110,  1112,
    1111,  1113,  1113,  1114,  1114,  1115,  1115,  1115,  1115,  1115,
    1115,  1117,  1116,  1118,  1118,  1118,  1120,  1119,  1119,  1121,
    1121,  1122,  1122,  1123,  1125,  1124,  1126,  1126,  1127,  1127,
    1128,  1129,  1130,  1130,  1132,  1131,  1133,  1133,  1134,  1134,
    1135,  1136,  1138,  1137,  1140,  1139,  1141,  1141,  1142,  1142,
    1143,  1144,  1144,  1145,  1145,  1146,  1146,  1148,  1147,  1150,
    1151,  1149,  1152,  1152,  1152,  1152,  1152,  1153,  1153,  1154,
    1154,  1155,  1155,  1156,  1156,  1156,  1157,  1157,  1157,  1158,
    1158,  1158,  1159,  1159,  1160,  1161,  1162,  1162,  1162,  1162,
    1162,  1163,  1163,  1164,  1164,  1164,  1164,  1164,  1164,  1164,
    1164,  1164,  1164,  1164,  1165,  1165,  1165,  1165,  1165,  1165,
    1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,
    1166,  1166,  1166,  1166,  1167,  1167,  1167,  1167,  1167,  1167,
    1167,  1167,  1167,  1167,  1167,  1167,  1167,  1167,  1167,  1168,
    1168,  1169,  1169,  1170,  1170,  1171,  1171,  1172,  1172,  1172,
    1172,  1172,  1172,  1173,  1173,  1174,  1174,  1174,  1174,  1174,
    1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,
    1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,
    1174,  1174,  1174,  1174,  1174,  1175,  1175,  1175,  1175,  1175,
    1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,
    1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,
    1175,  1175,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1176,  1176,  1176,  1177,  1177,  1177,  1177,  1177,  1177,
    1177,  1177,  1177,  1177,  1177,  1177,  1177,  1177,  1177,  1177,
    1177,  1177,  1177,  1177,  1177,  1177,  1177,  1177,  1177,  1178,
    1178,  1178,  1178,  1178,  1178,  1178,  1178,  1180,  1179,  1179,
    1181,  1181,  1182,  1182,  1183,  1183,  1184,  1184,  1185,  1185,
    1186,  1187,  1187,  1187,  1187,  1187,  1187,  1187,  1188,  1189,
    1187,  1187,  1187,  1187,  1187,  1187,  1187,  1187,  1187,  1187,
    1187,  1190,  1187,  1192,  1191,  1193,  1193,  1193,  1194,  1194,
    1195,  1195,  1196,  1197,  1196,  1198,  1198,  1200,  1199,  1201,
    1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1202,  1202,  1203,  1203,  1204,  1204,  1205,  1205,  1206,  1206,
    1207,  1207,  1208,  1208,  1209,  1209,  1210,  1211,  1211,  1212,
    1212,  1213,  1213,  1214,  1213,  1215,  1213,  1216,  1213,  1213,
    1217,  1213,  1218,  1213,  1213,  1219,  1213,  1220,  1213,  1213,
    1221,  1221,  1221,  1222,  1222,  1223,  1225,  1224,  1224,  1224,
    1226,  1227,  1228,  1226,  1229,  1231,  1232,  1230,  1234,  1233,
    1236,  1237,  1235,  1238,  1239,  1240,  1240,  1241,  1241,  1241,
    1241,  1242,  1242,  1244,  1243,  1245,  1243,  1246,  1246,  1247,
    1248,  1247,  1250,  1249,  1251,  1251,  1252,  1252,  1253,  1253,
    1254,  1254,  1255,  1255,  1255,  1255,  1255,  1255,  1255,  1255,
    1255,  1255,  1255,  1255,  1256,  1256,  1256,  1256,  1256,  1256,
    1256,  1256,  1256,  1257,  1257,  1257,  1257,  1258,  1258,  1258,
    1259,  1259,  1260,  1260,  1261,  1262,  1261,  1263,  1264,  1263,
    1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,  1268,  1269,
    1270,  1270,  1271,  1272,  1272,  1274,  1273,  1275,  1275,  1276,
    1276,  1276,  1277,  1277,  1278,  1278,  1279,  1280,  1280,  1280,
    1281,  1281,  1281,  1281,  1281,  1282,  1282,  1283,  1283,  1283,
    1283,  1283,  1283,  1284,  1284,  1284,  1284,  1284,  1285,  1285,
    1285,  1285,  1285,  1286,  1286,  1286,  1286,  1287,  1288,  1288,
    1289,  1290,  1289,  1291,  1291,  1291,  1292,  1294,  1293,  1295,
    1295,  1296,  1296,  1298,  1297,  1300,  1301,  1299,  1299,  1299,
    1303,  1302,  1305,  1304,  1306,  1307,  1304,  1304,  1304,  1304,
    1304,  1304,  1308,  1304,  1304,  1304,  1304,  1304,  1304,  1304,
    1309,  1309,  1310,  1311,  1312,  1312,  1313,  1314,  1314,  1315,
    1315,  1316,  1316,  1317,  1317,  1317,  1318,  1318,  1320,  1321,
    1319,  1323,  1324,  1322,  1325,  1325,  1325,  1325,  1326,  1326,
    1327,  1327,  1328,  1329,  1329,  1329,  1330,  1329,  1331,  1331,
    1332,  1332,  1333,  1332,  1334,  1332,  1335,  1335,  1336,  1336,
    1337,  1338,  1338,  1339,  1339,  1341,  1340,  1342,  1342,  1343,
    1343,  1344,  1344,  1345,  1346,  1345,  1348,  1349,  1347,  1350,
    1350,  1351,  1352,  1352,  1353,  1354,  1354,  1356,  1355,  1358,
    1357,  1359,  1357,  1360,  1357,  1361,  1361,  1362,  1362,  1363,
    1363,  1364,  1364,  1365,  1365,  1365,  1367,  1366,  1368,  1368,
    1369,  1369,  1370,  1370,  1371,  1371,  1371,  1371,  1371,  1371,
    1371,  1371,  1371,  1372,  1372,  1374,  1373,  1375,  1375,  1375,
    1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1376,
    1375,  1377,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,
    1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,
    1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,
    1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1378,
    1378,  1378,  1379,  1379,  1380,  1380,  1381,  1381,  1382,  1382,
    1383,  1383,  1384,  1384,  1385,  1385,  1386,  1386,  1386,  1388,
    1387,  1389,  1387,  1390,  1390,  1390,  1390,  1390,  1391,  1391,
    1392,  1392,  1392,  1392,  1393,  1393,  1393,  1395,  1394,  1397,
    1398,  1396,  1396,  1399,  1399,  1400,  1399,  1401,  1401,  1402,
    1402,  1402,  1402,  1402,  1402,  1402,  1402,  1402,  1402,  1402,
    1402,  1402,  1402,  1402,  1402,  1402,  1402,  1402,  1403,  1403,
    1405,  1404,  1406,  1406,  1408,  1407,  1407,  1407,  1407,  1409,
    1409,  1411,  1410,  1412,  1412,  1412,  1413,  1413,  1414,  1414,
    1415,  1416,  1416,  1416,  1417,  1419,  1420,  1421,  1422,  1418,
    1423,  1423,  1424,  1424,  1425,  1425,  1425,  1426,  1426,  1426,
    1427,  1427,  1428,  1428,  1429,  1429,  1429,  1429,  1430,  1430,
    1431,  1431,  1432,  1432,  1433,  1433,  1434,  1434,  1435,  1435,
    1436,  1436,  1436,  1437,  1437,  1438,  1438,  1439,  1439,  1440,
    1440,  1441,  1442,  1442,  1442,  1442,  1443,  1443,  1443,  1444,
    1445,  1445,  1445,  1446,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1446,  1446,  1447,  1447,  1447,  1447,  1447,  1448,  1448,
    1448,  1449,  1449,  1450,  1450,  1451,  1452,  1452,  1453,  1453,
    1454,  1454,  1454,  1455,  1455,  1455,  1455,  1456,  1456,  1456,
    1457,  1457,  1458,  1459,  1459,  1460,  1461,  1462,  1463,  1464,
    1464,  1465,  1465,  1466,  1466,  1466,  1467,  1467,  1467,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1471,  1470,  1472,
    1470,  1473,  1473,  1475,  1474,  1476,  1474,  1477,  1474,  1479,
    1478,  1478,  1480,  1480,  1482,  1481,  1483,  1481,  1485,  1484,
    1484,  1486,  1486,  1486,  1487,  1487,  1487,  1487,  1488,  1488,
    1488,  1488,  1489,  1491,  1490,  1490,  1492,  1490,  1490,  1490,
    1490,  1490,  1490,  1493,  1493,  1493,  1494,  1494,  1494,  1494,
    1495,  1496,  1497,  1497,  1498,  1498,  1498,  1498,  1499,  1499,
    1499,  1500,  1500,  1500,  1500,  1500,  1501,  1502,  1502,  1503,
    1502,  1504,  1504,  1505,  1505,  1506,  1507,  1507,  1507,  1507,
    1508,  1509,  1509,  1510,  1510,  1511,  1510,  1512,  1512,  1513,
    1513,  1514,  1514,  1514,  1514,  1515,  1514,  1516,  1516,  1516,
    1516,  1516,  1518,  1517,  1519,  1519,  1519,  1519,  1519,  1521,
    1520,  1522,  1522,  1522,  1522,  1523,  1523,  1524,  1524,  1525,
    1525,  1526,  1526,  1528,  1527,  1529,  1527,  1530,  1527,  1531,
    1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,
    1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,
    1527,  1527,  1527,  1527,  1527,  1527,  1527,  1532,  1532,  1533,
    1533,  1534,  1534,  1534,  1535,  1535,  1535,  1535,  1536,  1536,
    1537,  1537,  1538,  1538,  1538,  1538,  1538,  1539,  1539,  1540,
    1540,  1541,  1542,  1542,  1542,  1542,  1542,  1543,  1543,  1544,
    1544,  1545,  1545,  1546,  1546,  1546,  1546,  1546,  1548,  1547,
    1549,  1549,  1550,  1550,  1550,  1551,  1551,  1551,  1552,  1552,
    1553,  1554,  1554,  1555,  1556,  1557,  1557,  1559,  1558,  1560,
    1560,  1560,  1561,  1561,  1563,  1562,  1564,  1564,  1565,  1565,
    1565,  1566,  1566,  1567,  1568,  1567,  1569,  1570,  1571,  1572,
    1572,  1573,  1573,  1574,  1574,  1574,  1574,  1574,  1574,  1574,
    1574,  1575,  1575,  1575,  1576,  1576,  1576,  1576,  1576,  1577,
    1577,  1577,  1577,  1577,  1577,  1578,  1578,  1579,  1580,  1581,
    1581,  1581,  1582,  1583,  1583,  1583,  1584,  1584,  1584,  1586,
    1585,  1587,  1587,  1588,  1588,  1590,  1589,  1592,  1591,  1591,
    1593,  1593,  1595,  1594,  1596,  1596,  1596,  1596,  1598,  1599,
    1600,  1597,  1601,  1601,  1603,  1604,  1605,  1606,  1607,  1602,
    1609,  1610,  1611,  1612,  1608,  1613,  1613,  1613,  1613,  1613,
    1613,  1614,  1614,  1614,  1615,  1615,  1616,  1616,  1616,  1617,
    1617,  1618,  1619,  1618,  1620,  1620,  1621,  1622
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     5,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       3,     1,     0,     1,     3,     1,     3,     3,     3,     3,
       0,     7,     0,     0,    14,     0,     0,    14,     0,     0,
      14,     0,     6,     0,     3,     4,     4,     3,     2,     7,
       1,     1,    10,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     0,    13,     0,     6,     2,     0,     1,     3,
       1,     0,     2,     0,     2,     0,     1,     3,     4,     0,
       2,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     1,     0,
       2,     0,     2,     2,     2,     2,     2,     3,     3,     1,
       1,     1,     2,     3,     3,     0,     4,     0,     3,     0,
       1,     3,     1,     0,     1,     3,     1,     0,     3,     0,
       1,     3,     1,     4,     0,     1,     1,     1,     0,     3,
       2,     3,     0,     3,     0,     5,     5,     0,     7,     0,
       6,     1,     1,     1,     3,     1,     1,     1,     3,     0,
       1,     1,     1,     1,     2,     1,     3,     1,     1,     0,
       1,     0,     2,     3,     5,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     4,     0,     1,     1,     3,     1,     3,     3,     1,
       2,     1,     1,     1,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     0,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     5,
       0,     2,     0,     3,     0,     2,     2,     2,     2,     0,
       6,     2,     0,     2,     1,     1,     3,     0,     0,     0,
       7,     0,     2,     2,     1,     1,     0,     0,     8,     0,
       6,     1,     2,     1,     2,     0,     0,     6,     0,     0,
       6,     0,     2,     0,     5,     0,     1,     0,     5,     0,
       2,     0,     5,     4,     0,     0,     8,     0,     0,     8,
       1,     1,     1,     1,     1,     2,     4,     5,     0,     4,
       4,     4,     3,     3,     2,     2,     0,     2,     1,     2,
       3,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       2,     3,     1,     1,     1,     1,     1,     0,     1,     1,
       2,     3,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     2,     3,     1,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     4,     1,     1,     1,     1,     2,     3,
       2,     4,     5,     0,     5,     0,     0,     5,     0,     7,
       1,     0,     1,     0,     4,     0,     0,     3,     5,     6,
       0,     4,     2,     2,     2,     2,     0,     1,     0,     3,
       0,     1,     1,     3,     1,     4,     5,     5,     0,     2,
       0,     0,     7,     0,    10,     1,     3,     1,     1,     0,
       2,     0,     3,     1,     3,     0,     6,     1,     0,     0,
       5,     0,     4,     1,     1,     1,     3,     1,     3,     0,
       0,     5,     1,     3,     1,     1,     0,     3,     1,     3,
       0,     4,     1,     0,     1,     2,     1,     3,     4,     3,
       3,     3,     4,     4,     3,     0,     0,     6,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     1,     1,     2,
       1,     0,     3,     0,     1,     1,     2,     1,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     0,
       6,     1,     1,     3,     4,     4,     2,     2,     2,     3,
       3,     4,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     2,     2,     7,     8,     8,     8,     8,
       2,     0,     1,     4,     0,     1,     2,     0,     4,     3,
       3,     3,     1,     2,     1,     1,     3,     2,     3,     2,
       2,     1,     3,     3,     2,     3,     1,     2,     2,     2,
       1,     2,     1,     1,     1,     2,     3,     2,     3,     2,
       2,     3,     3,     3,     0,     6,     0,     6,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     2,     1,     2,     3,     2,     1,     1,
       1,     1,     1,     1,     1,     2,     0,     1,     1,     5,
       0,     3,     0,     2,     3,     0,     1,     2,     1,     1,
       1,     1,     3,     3,     3,     3,     0,     1,     0,     1,
       0,     1,     2,     1,     1,     2,     2,     3,     1,     3,
       2,     1,     2,     2,     2,     2,     2,     2,     3,     2,
       2,     2,     0,     3,     2,     2,     1,     1,     2,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     0,     1,     1,     2,     2,
       1,     2,     2,     0,     1,     1,     1,     3,     1,     3,
       0,     1,     0,     4,     1,     1,     1,     0,     1,     2,
       1,     1,     2,     1,     3,     3,     1,     1,     0,     2,
       0,     1,     5,     0,     3,     3,     1,     0,     2,     2,
       2,     0,     3,     3,     6,     6,     1,     1,     2,     2,
       2,     1,     2,     2,     1,     1,     0,     1,     1,     1,
       1,     0,     1,     1,     1,     1,     2,     2,     1,     1,
       1,     1,     0,     1,     2,     0,     1,     0,     1,     0,
       1,     1,     2,     1,     2,     1,     2,     2,     2,     3,
       2,     1,     1,     1,     1,     3,     1,     1,     1,     4,
       2,     1,     4,     0,     1,     0,     2,     1,     3,     0,
       6,     0,     5,     7,     0,     5,     0,     5,     0,     5,
       0,     4,     0,    10,     3,     4,     3,     3,     7,     4,
       3,     5,     0,     3,     1,     4,     0,     3,     0,     2,
       0,     1,     0,     2,     2,     2,     2,     1,     1,     1,
       3,     4,     0,     6,     4,     0,     5,     0,     6,     4,
       3,     1,     7,     3,     1,     1,     0,     5,     0,     3,
       2,     0,     5,     0,     0,     6,     1,     3,     1,     1,
       3,     2,     3,     2,     4,     0,     6,     0,     0,     8,
       4,     4,     3,     3,     2,     2,     6,     5,     3,     5,
       1,     1,     1,     1,     1,     0,     1,     1,     2,     2,
       3,     3,     3,     3,     0,     1,     0,     1,     0,     1,
       1,     0,     2,     1,     0,     1,     1,     1,     0,     6,
       3,     3,     0,     1,     1,     3,     3,     6,     2,     2,
       4,     0,     3,     0,     3,     0,     3,     0,     3,     0,
       1,     1,     3,     1,     1,     0,     2,     1,     3,     3,
       3,     1,     0,     5,     0,     1,     1,     0,     6,     0,
       1,     1,     2,     1,     1,     1,     0,     5,     2,     0,
       5,     0,     1,     1,     2,     1,     1,     1,     1,     1,
       2,     0,     5,     0,     1,     1,     0,     4,     4,     3,
       5,     1,     3,     3,     0,     6,     1,     1,     1,     3,
       2,     3,     1,     1,     0,     6,     1,     1,     1,     3,
       3,     4,     0,     6,     0,     2,     0,     4,     0,     2,
       1,     2,     4,     2,     3,     2,     3,     0,     3,     0,
       0,     6,     2,     1,     1,     2,     2,     8,     4,     0,
       1,     2,     1,     1,     1,     1,     0,     2,     4,     3,
       1,     1,     3,     4,     0,     0,     0,     2,     2,     1,
       1,     0,     2,     3,     3,     3,     2,     3,     4,     3,
       4,     3,     4,     1,     3,     4,     3,     3,     6,     1,
       5,     6,     5,     7,     6,     8,     5,     6,     4,     4,
       5,     3,     4,     1,     3,     3,     3,     3,     3,     3,
       5,     5,     3,     3,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     3,     2,     2,     2,     2,
       3,     3,     5,     6,     4,     4,     7,     2,     6,     5,
       6,     6,     4,     4,     5,     4,     6,     2,     4,     4,
       4,    10,     6,     8,     6,     4,     4,     6,     4,     4,
       4,     6,     4,     7,     7,     7,     6,     6,     6,     6,
       3,     4,     6,     8,     2,     2,     8,     8,     6,     6,
       1,     6,     6,     8,     8,     6,     8,     6,     2,     8,
       8,     2,     2,     2,     4,     4,     4,     4,     3,     8,
       6,     8,     4,     6,     4,     4,     4,     6,     8,     4,
       3,     6,     4,     6,     5,     8,     7,    10,     1,     6,
       4,     4,     4,     4,     4,     6,     4,     0,     5,     6,
       2,     3,     0,     4,     0,     3,     0,     1,     1,     3,
       4,     4,     5,     4,     4,     4,     5,     4,     0,     0,
       7,     4,     5,     4,     5,     4,     4,     4,     4,     4,
       5,     0,     8,     0,     3,     3,     1,     4,     0,     1,
       0,     2,     0,     0,     4,     4,     2,     0,     3,     2,
       3,     2,     1,     2,     1,     2,     1,     2,     2,     2,
       0,     1,     1,     3,     1,     3,     1,     3,     0,     1,
       0,     2,     4,     5,     1,     1,     1,     1,     4,     1,
       3,     3,     3,     0,     6,     0,     6,     0,     8,     4,
       0,     8,     0,    10,     6,     0,     8,     0,    10,     6,
       1,     2,     2,     0,     1,     5,     0,     5,     3,     5,
       2,     0,     0,     7,     1,     0,     0,     6,     0,     3,
       0,     0,     5,     0,     1,     0,     1,     0,     2,     3,
       3,     1,     1,     0,     7,     0,     7,     1,     2,     0,
       0,     2,     0,     2,     0,     1,     1,     1,     1,     3,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       0,     2,     0,     1,     0,     0,     3,     0,     0,     3,
       2,     0,     0,     4,     4,     2,     0,     1,     1,     3,
       3,     1,     2,     0,     1,     0,     4,     4,     2,     0,
       1,     1,     0,     1,     0,     1,     2,     1,     3,     3,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     0,     6,     0,     1,     3,     1,     0,     2,     3,
       1,     2,     1,     0,     3,     0,     0,     7,     2,     1,
       0,     3,     0,     7,     0,     0,     8,     4,     6,     4,
       4,     4,     0,     6,     4,     4,     4,     5,     4,     4,
       1,     3,     1,     2,     1,     3,     1,     0,     2,     0,
       1,     0,     1,     1,     2,     3,     1,     1,     0,     0,
       8,     0,     0,     6,     0,     1,     1,     1,     1,     1,
       2,     1,     1,     1,     3,     4,     0,     3,     3,     1,
       2,     2,     0,     3,     0,     5,     3,     1,     3,     1,
       3,     1,     1,     0,     1,     0,     4,     0,     1,     3,
       1,     1,     1,     0,     0,     6,     0,     0,    11,     3,
       1,     3,     3,     1,     3,     0,     1,     0,     4,     0,
       7,     0,     5,     0,     6,     1,     3,     2,     4,     0,
       2,     0,     2,     1,     1,     1,     0,     4,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     6,     2,     2,     0,
       6,     0,     6,     5,     2,     1,     5,     5,     2,     2,
       1,     4,     3,     2,     3,     2,     2,     1,     3,     4,
       3,     3,     2,     2,     3,     3,     2,     2,     2,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     0,     1,     0,     2,     0,     1,
       1,     1,     0,     2,     0,     2,     0,     2,     2,     0,
       4,     0,     4,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     0,     1,     1,     0,     4,     0,
       0,     5,     1,     0,     3,     0,     3,     3,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       0,     3,     3,     1,     0,     3,     1,     2,     1,     0,
       1,     0,     3,     3,     3,     3,     2,     2,     2,     2,
       3,     0,     1,     1,     2,     0,     0,     0,     0,    22,
       1,     1,     0,     1,     0,     1,     1,     0,     1,     1,
       0,     2,     2,     1,     3,     4,     3,     3,     0,     2,
       2,     1,     3,     3,     0,     4,     0,     3,     1,     1,
       0,     3,     2,     3,     1,     1,     2,     0,     2,     3,
       1,     5,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     2,     2,
       2,     1,     1,     3,     5,     1,     1,     1,     1,     1,
       3,     4,     5,     1,     5,     3,     2,     1,     3,     2,
       2,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     0,
       6,     1,     3,     0,     3,     0,     3,     0,     3,     0,
       3,     2,     0,     2,     0,     2,     0,     4,     0,     3,
       1,     1,     1,     1,     0,     1,     1,     1,     0,     2,
       2,     2,     3,     0,     4,     4,     0,     7,     2,     3,
       3,     3,     5,     1,     3,     3,     1,     1,     3,     3,
       1,     3,     2,     2,     2,     2,     2,     1,     1,     4,
       4,     1,     1,     1,     1,     1,     2,     3,     3,     0,
       3,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       2,     1,     1,     4,     3,     0,     7,     1,     2,     1,
       1,     1,     1,     1,     1,     0,     5,     1,     1,     1,
       1,     1,     0,     4,     6,     6,     6,     7,     5,     0,
       4,     8,     8,     8,     6,     0,     1,     1,     2,     0,
       1,     1,     3,     0,     3,     0,     3,     0,     3,     0,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     3,     2,     2,     2,     2,
       2,     2,     2,     2,     1,     1,     2,     0,     1,     3,
       1,     2,     2,     2,     1,     3,     3,     1,     1,     3,
       1,     3,     4,     5,     4,     6,     1,     0,     3,     3,
       1,     1,     0,     2,     2,     2,     2,     0,     2,     0,
       3,     2,     1,     2,     2,     2,     2,     2,     0,     3,
       0,     1,     0,     3,     2,     0,     1,     2,     0,     1,
       4,     4,     5,     2,     3,     0,     1,     0,     4,     0,
       1,     1,     0,     1,     0,     2,     2,     1,     0,     1,
       1,     2,     3,     2,     0,     6,     3,     0,     0,     0,
       1,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     1,
       2,     1,     2,     3,     3,     3,     0,     3,     3,     0,
       7,     0,     3,     1,     3,     0,     3,     0,     3,     4,
       1,     3,     0,     3,     0,     3,     4,     4,     0,     0,
       0,    16,     8,     7,     0,     0,     0,     0,     0,    15,
       0,     0,     0,     0,    12,     4,     4,     3,     4,     3,
       2,     1,     3,     5,     1,     1,     0,     1,     1,     0,
       2,     0,     0,     3,     0,     2,     5,     3
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (YYTHD, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, YYTHD); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, class THD *YYTHD)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (YYTHD);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, class THD *YYTHD)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, YYTHD);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, class THD *YYTHD)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , YYTHD);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, YYTHD); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, class THD *YYTHD)
{
  YYUSE (yyvaluep);
  YYUSE (YYTHD);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1996 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
              (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 17999 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 2008 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((YYTHD->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 18026 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2033 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 18035 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2107 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].lex_str);
          }
#line 18046 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2122 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].lex_str);
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 18067 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2142 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
#line 18078 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2149 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
#line 18089 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2159 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].lex_str);
          }
#line 18100 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2166 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18106 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2181 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 18117 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2193 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 18129 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2201 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 18139 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 2212 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is freed
              in THD::cleanup_after_query. So it is guaranteed to be
              uninitialized before here.
	      Its allocation is deferred till the option is parsed below.
            */
            lex->mi.set_unspecified();
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.elements == 0);
          }
#line 18156 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 2225 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18162 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2235 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 18170 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2239 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lex_str).str;
          }
#line 18178 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2243 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 18186 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 2247 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 18195 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2252 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 18203 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 18211 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2260 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 18220 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2265 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              Lex_input_stream *lip= YYLIP;
              const char *start= lip->get_tok_start();
              const char *msg= YYTHD->strmake(start, lip->get_ptr() - start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 18237 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2278 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 18246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2283 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 18254 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2287 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 18262 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2291 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 18270 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2295 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 18278 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 2299 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 18286 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2303 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 18295 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2308 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 18303 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 2312 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 18311 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2317 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 18346 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2348 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 18354 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 2353 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 18364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2370 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->mi.repl_ignore_server_ids.elements == 0)
            {
              my_init_dynamic_array2(&Lex->mi.repl_ignore_server_ids,
                                     sizeof(::server_id),
                                     Lex->mi.server_ids_buffer,
                                     array_elements(Lex->mi.server_ids_buffer),
                                     16);
            }
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 18380 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2384 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 18388 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2388 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 18408 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2404 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 18416 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2408 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 18427 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2420 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_WRITE, MDL_SHARED))
              MYSQL_YYABORT;
            /*
              Instruct open_table() to acquire SHARED lock to check the
              existance of table. If the table does not exist then
              it will be upgraded EXCLUSIVE MDL lock. If table exist
              then open_table() will return with an error or warning.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_FOR_CREATE;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(static_cast<void*>(&lex->create_info), 0,
                   sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[-3].num) | (yyvsp[-1].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 18458 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2447 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[-2].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 18481 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2466 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index_prepare(Lex, (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 18490 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2471 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index(Lex, (yyvsp[-10].key_type), (yyvsp[-8].lex_str)))
              MYSQL_YYABORT;
          }
#line 18499 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 114:
#line 2475 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 18505 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 115:
#line 2478 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index_prepare(Lex, (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 18514 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 116:
#line 2483 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index(Lex, (yyvsp[-10].key_type), (yyvsp[-8].lex_str)))
              MYSQL_YYABORT;
          }
#line 18523 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 117:
#line 2487 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 18529 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2490 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index_prepare(Lex, (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 18538 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2495 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index(Lex, (yyvsp[-10].key_type), (yyvsp[-8].lex_str)))
              MYSQL_YYABORT;
          }
#line 18547 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2499 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 18553 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2501 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 18562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2506 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lex_str);
            lex->create_info.options=(yyvsp[-3].num);
          }
#line 18573 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2513 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
#line 18583 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2519 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18589 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2521 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CREATE_USER;
          }
#line 18597 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2525 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 18605 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2529 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 18613 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2533 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
          }
#line 18621 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2538 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_COMPRESSION_DICTIONARY;
            Lex->create_info.options= (yyvsp[-4].num);
            Lex->ident= (yyvsp[-3].lex_str);
            Lex->default_value= (yyvsp[-1].item);
          }
#line 18632 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2551 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 18638 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2553 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    CREATE COMPRESSION_DICTIONARY <dict>(@foo := expr)
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 18659 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2577 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-8].lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.server_name= (yyvsp[-8].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[-8].lex_str).length;
            Lex->server_options.scheme= (yyvsp[-4].lex_str).str;
          }
#line 18674 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2596 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.username= (yyvsp[0].lex_str).str;
          }
#line 18682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2600 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.host= (yyvsp[0].lex_str).str;
          }
#line 18690 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2604 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.db= (yyvsp[0].lex_str).str;
          }
#line 18698 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.owner= (yyvsp[0].lex_str).str;
          }
#line 18706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2612 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.password= (yyvsp[0].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 18715 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2617 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.socket= (yyvsp[0].lex_str).str;
          }
#line 18723 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2621 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 18731 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2628 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-3].simple_string);
            lex->create_info.options= (yyvsp[-1].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 18751 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2648 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 18763 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2659 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 18772 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2666 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 18780 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 18786 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2674 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 18796 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2680 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 18806 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2686 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 18816 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2695 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 18827 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 18835 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 18843 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2716 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 18849 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2722 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 18859 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 18869 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 18875 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 18884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2745 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_PROCEDURE,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 18931 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2788 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
#line 18945 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2817 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= 0;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
#line 18961 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2832 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name((yyvsp[-2].lex_str), (yyvsp[0].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 18979 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2846 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[0].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(db, (yyvsp[0].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 18999 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2864 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19005 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2865 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19011 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2869 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19017 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2870 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19023 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2876 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 19029 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2878 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 19035 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2880 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 19041 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2882 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 19047 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 19053 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2886 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 19059 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2888 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19065 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2893 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 19071 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2894 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= TRUE; }
#line 19077 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2895 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= FALSE; }
#line 19083 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2900 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 19091 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2904 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 19099 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2911 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[0].spname);
            lex->value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[0].spname), SP_TYPE_PROCEDURE);
          }
#line 19112 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2919 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19118 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item));
          }
#line 19126 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2939 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item));
          }
#line 19134 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2957 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
#line 19155 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2977 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[-2].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lex_str),
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[0].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
#line 19186 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 3018 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[-1].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-1].lex_str),
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[0].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
#line 19216 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 3046 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 19222 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 3047 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 19228 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 3048 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 19234 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 3049 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 19240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 3053 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 3058 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19252 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3064 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 19260 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3068 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 19287 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3094 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[0].num));
          }
#line 19301 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3105 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[-1].num);
            Item *dflt_value_item= (yyvsp[0].item);
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              YY_TOKEN_END);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 19378 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3178 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 19398 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3194 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);
            
            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }
          }
#line 19442 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3234 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 19480 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3268 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(YY_TOKEN_END);
          }
#line 19493 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3277 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            YY_TOKEN_END);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 19558 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 19564 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3341 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 19570 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3347 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 19576 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3349 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 19582 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3354 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 19606 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3377 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19621 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3392 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lex_str)) || is_sqlstate_completion((yyvsp[0].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19644 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3413 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19650 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3414 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3419 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 19664 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3423 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 19681 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3436 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19691 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3442 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19701 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3448 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19711 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3457 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_signal((yyvsp[-1].spcondvalue), state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 19727 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3472 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 19757 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3498 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 19763 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 3503 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 19769 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3505 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 19775 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3510 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 19783 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3518 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 19795 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3527 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (info->m_item[index] != NULL)
            {
              my_error(ER_DUP_SIGNAL_SET, MYF(0),
                       Diag_condition_item_names[index].str);
              MYSQL_YYABORT;
            }
            info->m_item[index]= (yyvsp[0].item);
          }
#line 19812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3546 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 19818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3548 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 19840 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3566 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 19846 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3572 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 19852 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3574 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 19858 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3576 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 19864 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3578 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 19870 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3580 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 19876 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3582 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 19882 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3584 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 19888 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 19894 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3588 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 19900 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3590 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 19906 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3592 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 19912 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3594 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 19918 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3599 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_resignal((yyvsp[-1].spcondvalue),
                                                   state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 19935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3615 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 19951 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3630 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 19957 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3632 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 19963 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3637 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 19973 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3643 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 19983 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 19993 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3658 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 20003 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3667 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 20013 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3675 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[0].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                lip->get_tok_start(),
                lip->get_ptr());

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 20046 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3704 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 20056 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3713 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 20062 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3715 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 20068 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 20074 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3729 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 20084 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3735 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 20094 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 20104 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3752 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 20110 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3754 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 20116 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3756 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 20122 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3758 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 20128 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3760 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 20134 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3762 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 20140 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3764 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 20146 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3766 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 20152 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3768 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 20158 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3770 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 20164 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3772 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 20170 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3774 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 20176 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3776 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 20182 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3781 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 20206 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3801 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 20230 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3824 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 20236 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3826 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.push_expr_start_ptr(YY_TOKEN_END); }
#line 20242 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3828 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 20248 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3849 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 20254 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3851 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 20264 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3859 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(lip->get_tok_start());
          }
#line 20278 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3869 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            YY_TOKEN_END);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 20326 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3916 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3926 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20388 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3972 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
#line 20403 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3983 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 20416 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3995 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            uint n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20476 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 4054 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            uint n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20527 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 4104 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20552 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 4128 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20577 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 4149 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 20583 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 4154 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 4184 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 20630 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 4202 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 20652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 4222 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20665 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 4231 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20705 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 4267 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
#line 20728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 4286 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 20741 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4309 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20756 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4320 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20801 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 4364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, true);
          }
#line 20809 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 4371 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 20817 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 4378 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 20825 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4395 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20838 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4404 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20882 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4445 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 20891 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4453 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20904 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4462 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20943 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4498 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 20952 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4506 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20970 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4524 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 20992 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4542 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 21013 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4561 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 21019 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 21025 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4567 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 21045 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4583 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 21064 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4600 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 21079 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4611 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 21088 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4619 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 21105 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4634 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 21141 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4670 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 21160 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4685 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 21173 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4694 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 21213 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 21233 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4748 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 21246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4757 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 21287 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4798 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 21293 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4800 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 21299 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4805 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 21305 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4807 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 21311 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4809 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 21317 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4843 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21323 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4845 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].lex_str).str;
          }
#line 21332 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4855 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 21340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4861 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 21348 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 4884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21354 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4982 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 21363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4990 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 21372 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4998 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 21381 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 5006 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 21394 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5018 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 21407 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5030 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 21416 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 5035 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 21425 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5040 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 21434 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5048 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 21443 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5056 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 21452 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5064 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 21461 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5072 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 21470 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5080 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 21479 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5088 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 21488 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5096 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 21502 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5109 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 21516 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5122 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 21531 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 21540 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5141 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 21554 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5153 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 21560 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 5155 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[0].lex_str).str;
            uint str_len= (yyvsp[0].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // fallthrough
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // fallthrough
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 21610 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5207 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21616 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5210 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21622 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 5212 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
#line 21641 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5227 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
#line 21660 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21666 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 5249 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 21672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 5250 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21678 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5254 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21684 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(0);}
#line 21690 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 5257 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21696 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 5259 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 21702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 5260 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 5265 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 21722 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 5301 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 5307 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
#line 21746 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 5325 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_STRING partition_name={C_STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
            {
              my_error(ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                      "--skip-partition");
              MYSQL_YYABORT;
            }
#else
            my_error(ER_FEATURE_DISABLED, MYF(0), "partitioning",
                    "--with-plugin-partition");
            MYSQL_YYABORT;
#endif
          }
#line 21766 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 5344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_parse_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 21783 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 5356 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21789 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 5365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 21800 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 5372 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 21806 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 5373 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 5375 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 21818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 5377 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 21824 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 5379 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 21830 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 5381 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 21836 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 5385 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21842 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 5387 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 21848 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 5392 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 21854 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 5394 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 21872 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 5410 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21878 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 5411 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 5415 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21890 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 5416 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21896 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 5421 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[0].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
#line 21916 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 5440 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 21926 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 5450 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->set_part_expr((yyvsp[-3].simple_string)+1, (yyvsp[-2].item), (yyvsp[-1].simple_string), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 21938 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 5461 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_info->set_part_expr((yyvsp[-3].simple_string)+1, (yyvsp[-2].item), (yyvsp[-1].simple_string), TRUE))
            { MYSQL_YYABORT; }
          }
#line 21947 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 5469 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21953 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 5471 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 21970 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 5486 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21976 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 5488 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 21982 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 5489 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21988 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 5492 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 21998 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 5497 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22004 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 5501 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22010 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 5502 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22016 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 5507 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[0].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
#line 22035 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 5525 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 22052 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 5540 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22058 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5542 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 22074 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5557 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
#line 22094 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5573 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 22117 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5594 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22123 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5595 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22129 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5600 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 22149 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5619 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22155 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5624 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (check_string_char_length(&(yyvsp[0].lex_str), "", NAME_CHAR_LEN,
                                         system_charset_info, true))
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            p_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 22171 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5639 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (part_info->part_type == NOT_A_PARTITION)
              part_info->part_type= HASH_PARTITION;
            else if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                       "RANGE", "LESS THAN");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                       "LIST", "IN");
              MYSQL_YYABORT;
            }
          }
#line 22194 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5658 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (part_info->part_type == NOT_A_PARTITION)
              part_info->part_type= RANGE_PARTITION;
            else if (part_info->part_type != RANGE_PARTITION)
            {
              my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                       "RANGE", "LESS THAN");
              MYSQL_YYABORT;
            }
          }
#line 22211 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5670 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22217 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (part_info->part_type == NOT_A_PARTITION)
              part_info->part_type= LIST_PARTITION;
            else if (part_info->part_type != LIST_PARTITION)
            {
              my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                       "LIST", "IN");
              MYSQL_YYABORT;
            }
          }
#line 22234 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5684 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5689 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
#line 22266 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22272 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5715 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
#line 22305 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_parse_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 22318 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5755 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22324 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5756 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22330 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5761 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
#line 22346 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5772 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22352 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5774 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 22377 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5797 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22383 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5798 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22389 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5803 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_parse_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
#line 22406 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5816 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (!lex->safe_to_cache_query)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
#line 22426 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5836 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 22444 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5850 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 22471 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5875 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22477 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5876 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22483 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5881 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 22520 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5913 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5918 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_string_char_length(&(yyvsp[0].lex_str), "", NAME_CHAR_LEN,
                                         system_charset_info, true))
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 22540 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5930 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22546 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5931 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22552 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22558 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5936 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22564 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5941 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 22570 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5943 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 22580 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5949 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 22586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5951 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 22592 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5953 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 22598 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5955 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 22604 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5957 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 22610 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5959 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 22616 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5968 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 22635 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5983 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 22643 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5987 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 22655 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5997 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22661 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5998 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22667 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 6002 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22673 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 6003 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22679 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 6007 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22685 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 6008 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22691 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 6012 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22697 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 6013 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22703 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 6017 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 22709 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 6018 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[0].num);}
#line 22715 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 6022 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=(yyvsp[0].num); }
#line 22721 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 6023 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 22727 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 6027 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
#line 22733 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 6031 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 22739 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 6032 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
#line 22745 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 6053 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.db_type= (yyvsp[0].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 22754 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 6058 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 22763 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 6063 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 22772 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 6068 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 22781 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 6073 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 22790 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 6078 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 22799 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 6083 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 22808 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 6088 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 22827 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 6103 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 22837 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 6109 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 22856 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 6124 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 22865 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 6129 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 22884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 6144 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 22894 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 6150 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 22916 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 6168 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 22925 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 6173 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 22934 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 6178 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 22943 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 6183 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 22952 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 6188 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 22961 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 6193 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 22969 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 6197 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 22995 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 6221 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 23004 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6226 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 23013 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6231 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 23022 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6236 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].lex_str).str;}
#line 23028 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6238 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 23034 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 23040 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6242 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 23050 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 6248 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 23059 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[0].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[0].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[0].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 23078 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6274 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[0].charset) &&
                 !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[0].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 23096 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6291 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[0].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[0].lex_str).str);
            }
          }
#line 23123 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 6317 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[0].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 23142 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 6334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 23148 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6335 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 23154 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 6336 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 23160 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6337 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 23166 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6338 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 23172 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6339 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 23178 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_UNCOMPRESSED; }
#line 23184 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6341 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_ZLIB; }
#line 23190 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6342 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_SNAPPY; }
#line 23196 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6343 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_QUICKLZ; }
#line 23202 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_LZMA; }
#line 23208 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6345 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_FAST; }
#line 23214 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6346 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_SMALL; }
#line 23220 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6347 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_DEFAULT; }
#line 23226 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6351 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 23232 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6352 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 23238 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6353 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 23244 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6357 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23250 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6362 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 23256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 23262 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 23268 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 23274 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6371 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 23282 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6389 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
#line 23290 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6396 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index (Lex, (yyvsp[-6].key_type), (yyvsp[-5].lex_str)))
              MYSQL_YYABORT;
          }
#line 23299 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6402 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index (Lex, (yyvsp[-7].key_type), (yyvsp[-5].lex_str)))
              MYSQL_YYABORT;
          }
#line 23308 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6408 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index (Lex, (yyvsp[-7].key_type), (yyvsp[-5].lex_str)))
              MYSQL_YYABORT;
          }
#line 23317 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6414 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-7].lex_str).length != 0)
                 && ((enum Key::Keytype)(yyvsp[-6].key_type) == (Key::CLUSTERING | Key::MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (add_create_index (Lex, (yyvsp[-6].key_type), (yyvsp[-5].lex_str).str ? (yyvsp[-5].lex_str) : (yyvsp[-7].lex_str)))
              MYSQL_YYABORT;
          }
#line 23333 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6426 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[-4].lex_str).str ? (yyvsp[-4].lex_str) : (yyvsp[-7].lex_str), lex->col_list,
                                      (yyvsp[0].table)->db,
                                      (yyvsp[0].table)->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, Key::MULTIPLE, (yyvsp[-7].lex_str).str ? (yyvsp[-7].lex_str) : (yyvsp[-4].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
#line 23356 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6445 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
#line 23364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6460 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 23370 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6461 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 23376 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6465 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 23382 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6470 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
            lex->zip_dict_name=null_lex_cstr;
          }
#line 23396 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6480 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[-3].lex_str), (enum enum_field_types) (yyvsp[-1].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value, 
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type, &lex->zip_dict_name))
              MYSQL_YYABORT;
          }
#line 23411 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6493 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=(yyvsp[-2].num); }
#line 23417 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6494 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=(yyvsp[-2].num); }
#line 23423 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6495 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_FLOAT; }
#line 23429 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6497 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
#line 23438 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6502 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)=MYSQL_TYPE_BIT;
          }
#line 23446 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6506 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
#line 23455 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6511 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
#line 23464 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6516 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)=MYSQL_TYPE_STRING;
          }
#line 23472 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6520 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
          }
#line 23481 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6525 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
#line 23490 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6530 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
#line 23500 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6536 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
#line 23509 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6541 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
#line 23519 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6547 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
#line 23527 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6551 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
#line 23536 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6556 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
#line 23545 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6561 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                /* Reset unsupported positive column width to default value */
                Lex->length= NULL;
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_INVALID_YEAR_COLUMN_LENGTH,
                                    ER(ER_INVALID_YEAR_COLUMN_LENGTH),
                                    length);
              }
            }
            (yyval.num)=MYSQL_TYPE_YEAR;
          }
#line 23567 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6579 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_DATE; }
#line 23573 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6581 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= MYSQL_TYPE_TIME2; }
#line 23579 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6583 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;

              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
#line 23599 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6599 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= MYSQL_TYPE_DATETIME2; }
#line 23605 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6601 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
#line 23614 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6606 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
#line 23623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6611 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[0].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
#line 23639 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
#line 23648 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6628 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
#line 23657 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6633 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
#line 23666 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6638 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
#line 23672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6640 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_TINY_BLOB; }
#line 23678 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6642 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_BLOB; }
#line 23684 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6644 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
#line 23690 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6646 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_LONG_BLOB; }
#line 23696 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6648 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
#line 23702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6650 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
#line 23708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
#line 23714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6654 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->interval_list.empty();}
#line 23720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_ENUM; }
#line 23726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6658 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->interval_list.empty();}
#line 23732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6660 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_SET; }
#line 23738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
#line 23744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6664 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
#line 23754 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_GEOMETRY; }
#line 23760 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6673 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 23766 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6675 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= const_cast<char*>(STRINGIFY_ARG
                                           (MAX_LEN_GEOM_POINT_FIELD));
            (yyval.num)= Field::GEOM_POINT;
          }
#line 23776 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6680 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
#line 23782 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6681 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_LINESTRING; }
#line 23788 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
#line 23794 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6683 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_POLYGON; }
#line 23800 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6684 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
#line 23806 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6688 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6692 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6693 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23824 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6697 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23830 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6698 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23836 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23842 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6703 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23848 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6704 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23854 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6705 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23860 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23866 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_LONG; }
#line 23872 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6711 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_TINY; }
#line 23878 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6712 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_SHORT; }
#line 23884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6713 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_INT24; }
#line 23890 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
#line 23896 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6719 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
#line 23905 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
#line 23911 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
#line 23917 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6731 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->dec=Lex->length= (char*)0; }
#line 23923 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6733 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->dec= (char*)0; }
#line 23929 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6735 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6740 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->length=(yyvsp[-3].lex_str).str;
            lex->dec=(yyvsp[-1].lex_str).str;
          }
#line 23945 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6749 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->dec= (char *) 0; }
#line 23951 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6750 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->dec= (yyvsp[-1].lex_str).str; }
#line 23957 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6754 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 23963 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6755 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 23969 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6757 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lex_str).str, NULL, &error);
           }
#line 23978 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6764 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23984 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6765 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23990 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6769 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23996 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6770 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24002 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6774 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24008 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6775 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= UNSIGNED_FLAG;}
#line 24014 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6776 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 24020 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6780 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length= (yyvsp[-1].lex_str).str; }
#line 24026 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6781 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length= (yyvsp[-1].lex_str).str; }
#line 24032 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6782 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length= (yyvsp[-1].lex_str).str; }
#line 24038 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6783 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length= (yyvsp[-1].lex_str).str; }
#line 24044 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6786 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length=(char*) 0; /* use default length */ }
#line 24050 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6787 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24056 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6791 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24062 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6792 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24068 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6796 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24074 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6797 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24080 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6801 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24086 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6806 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type&= ~ NOT_NULL_FLAG; }
#line 24092 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6807 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= NOT_NULL_FLAG; }
#line 24098 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6808 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->default_value=(yyvsp[0].item); }
#line 24104 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6809 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->on_update_value= (yyvsp[0].item); }
#line 24110 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6810 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 24116 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 24126 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 24136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6824 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if ((yyvsp[0].key_type) & Key::UNIQUE)
              lex->type|= UNIQUE_FLAG; 
            if ((yyvsp[0].key_type) & Key::CLUSTERING)
              lex->type|= CLUSTERING_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 24149 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6833 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if ((yyvsp[-1].key_type) & Key::UNIQUE)
              lex->type|= UNIQUE_KEY_FLAG; 
            if ((yyvsp[-1].key_type) & Key::CLUSTERING)
              lex->type|= CLUSTERING_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX; 
          }
#line 24162 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6841 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->comment= (yyvsp[0].lex_str); }
#line 24168 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6843 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[0].charset);
            }
          }
#line 24185 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6856 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          }
#line 24195 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6862 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          }
#line 24205 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6868 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          }
#line 24215 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6874 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_COMPRESSED << FIELD_FLAGS_COLUMN_FORMAT);
            Lex->zip_dict_name= (yyvsp[0].lex_cstr);
          }
#line 24226 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6881 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          }
#line 24235 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6886 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          }
#line 24244 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6891 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          }
#line 24253 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6898 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= null_lex_cstr; }
#line 24259 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6900 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              no single assignment because of
              LEX_STRING -> LEX_CSTRING conversion
            */
            (yyval.lex_cstr).str= (yyvsp[0].lex_str).str;
            (yyval.lex_cstr).length= (yyvsp[0].lex_str).length;
          }
#line 24272 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6912 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.num)= (yyvsp[-1].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[0].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
#line 24293 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6933 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 24303 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6942 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 24309 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6946 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24315 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6947 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24321 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6952 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 24333 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6959 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 24339 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6963 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 24345 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6964 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 24351 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6968 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 24357 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6969 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 24363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6974 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 24376 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6982 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 24382 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6986 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 24388 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6987 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 24394 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6992 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str)))
              MYSQL_YYABORT;
          }
#line 24403 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6999 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 24409 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 7000 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 24415 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 7004 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 24421 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 7005 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 24427 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 7009 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24433 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 7010 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24439 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 7015 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= &my_charset_latin1; }
#line 24445 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 7017 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_latin1_bin;
          }
#line 24453 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 7021 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_latin1_bin;
          }
#line 24461 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 7028 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                     MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 24474 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 7037 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 24483 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 7042 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 24492 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 7049 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset=NULL; }
#line 24498 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 7052 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset=&my_charset_bin; }
#line 24504 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 7053 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset=(yyvsp[-1].charset); }
#line 24510 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 7055 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= NULL;
            Lex->type|= BINCMP_FLAG;
          }
#line 24519 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7060 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= (yyvsp[0].charset);
            Lex->type|= BINCMP_FLAG;
          }
#line 24528 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7067 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24534 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7068 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= BINCMP_FLAG; }
#line 24540 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7073 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            my_parse_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
#line 24552 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7081 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 24558 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 7085 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 24564 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 7086 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 24570 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7090 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 24576 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7093 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 24582 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7094 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24588 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7095 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 24594 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7096 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 24600 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7101 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 24609 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7109 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 24617 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7115 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7116 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 24629 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7121 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 24640 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7130 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24646 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7131 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7135 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 24658 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24664 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7150 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 24672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7157 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 24678 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7163 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[0].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
#line 24689 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7170 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[0].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
#line 24702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7182 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 24708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7184 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 24714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7186 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 24720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7188 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 24726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7193 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
#line 24736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7199 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
#line 24746 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7205 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 24756 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7212 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 24766 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7219 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 24776 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7227 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_RESTRICT; }
#line 24782 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7228 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_CASCADE; }
#line 24788 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7229 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_SET_NULL; }
#line 24794 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7230 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_NO_ACTION; }
#line 24800 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7231 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_DEFAULT;  }
#line 24806 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7235 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 24812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7239 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 24818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 24824 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7245 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24830 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24836 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7250 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24842 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7255 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24848 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24854 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7257 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24860 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7261 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 24866 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7267 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= (enum Key::Keytype)((yyvsp[0].key_type) | Key::MULTIPLE);
          }
#line 24874 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7271 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= (yyvsp[0].key_type);
          }
#line 24882 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7278 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.key_type)= (yyvsp[0].key_type); 
          }
#line 24890 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7282 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= (enum Key::Keytype)((yyvsp[-1].key_type) | (yyvsp[0].key_type));
          }
#line 24898 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7286 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= (enum Key::Keytype)((yyvsp[-1].key_type) | (yyvsp[0].key_type));
          }
#line 24906 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7292 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 24912 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7296 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::CLUSTERING; }
#line 24918 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7300 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 24924 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7305 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
#line 24938 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7317 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->key_create_info= default_key_create_info;
          }
#line 24946 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24952 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7339 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24958 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24964 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 24970 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 24976 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7370 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->key_create_info.block_size= (yyvsp[0].ulong_num); }
#line 24982 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7371 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->key_create_info.comment= (yyvsp[0].lex_str); }
#line 24988 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7386 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (plugin_is_ready(&(yyvsp[0].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[0].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 25002 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7398 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 25008 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7399 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 25014 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7400 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 25020 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7404 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
#line 25026 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7405 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
#line 25032 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7410 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[0].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 25042 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7416 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-3].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[-3].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 25057 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7429 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 25063 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7430 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 25069 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7434 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 25075 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7435 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 25081 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7439 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->interval_list.push_back((yyvsp[0].string)); }
#line 25087 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7440 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->interval_list.push_back((yyvsp[0].string)); }
#line 25093 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7448 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR; 
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex.init_order();
            lex->select_lex.db= (lex->select_lex.table_list.first)->db;
            memset(static_cast<void*>(&lex->create_info), 0,
                   sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (lex->ignore)
            {
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                                  ER(ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT),
                                  "IGNORE");
            }
          }
#line 25131 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7482 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
#line 25147 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7494 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 25156 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7499 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 25169 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7508 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].lex_str);
          }
#line 25184 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7519 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 25199 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7530 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 25210 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7537 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 25225 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7548 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 25236 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7555 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
#line 25251 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7566 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25257 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7573 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
#line 25273 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7585 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25279 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7587 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 25299 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7607 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 25316 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7620 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 25325 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7625 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 25334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7630 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 25343 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7635 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 25352 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7640 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.server_name= (yyvsp[-4].lex_str).str;
            lex->server_options.server_name_length= (yyvsp[-4].lex_str).length;
          }
#line 25363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7647 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 25371 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7654 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
        }
#line 25380 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7659 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
          }
#line 25389 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7666 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 25395 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7667 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25401 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25407 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7669 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25413 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7673 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 25419 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7675 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 25432 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7686 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 25438 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7687 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25444 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7691 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
#line 25450 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7692 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 25456 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7698 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25468 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25480 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
#line 25488 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7733 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 25498 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7740 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25514 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7754 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25530 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7766 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25545 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7779 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25561 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7792 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 25572 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7799 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25587 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[-1].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25615 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7839 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
#line 25623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7846 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
#line 25631 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7854 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 25647 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7866 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25653 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7872 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 25662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7877 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 25670 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 25685 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7899 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
#line 25693 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7903 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
#line 25701 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7907 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 25710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7914 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25716 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7915 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25722 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7920 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.partition_names.push_back((yyvsp[0].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
#line 25734 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7940 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
#line 25744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7949 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
#line 25752 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7953 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 25761 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7958 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN |
                                    Alter_info::ALTER_ADD_INDEX;
          }
#line 25770 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7963 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[0].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
#line 25780 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7969 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
#line 25788 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7973 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            lex->zip_dict_name= null_lex_cstr;
          }
#line 25802 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7983 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[-3].lex_str),
                                  (enum enum_field_types) (yyvsp[-1].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[-3].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type, &lex->zip_dict_name))
              MYSQL_YYABORT;
          }
#line 25818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7995 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
#line 25826 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7999 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
#line 25839 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 8008 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
#line 25852 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 8017 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
#line 25865 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 8026 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
#line 25878 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 8035 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
#line 25888 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 8041 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
#line 25898 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 8047 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[-3].lex_str).str,(yyvsp[0].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
#line 25911 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 8056 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[-2].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
#line 25924 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 8065 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[0].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].table)->table.str);
              MYSQL_YYABORT;
            }
            if ((yyvsp[0].table)->db.str &&
                (check_and_convert_db_name(&(yyvsp[0].table)->db, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
#line 25956 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 8093 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[0].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
          }
#line 25981 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 8114 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
#line 25995 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 8124 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
#line 26003 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 8128 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
#line 26012 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8145 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 26021 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8150 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[0].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26033 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 8161 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 26042 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8166 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[0].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26054 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 8176 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26060 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 8177 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26066 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8181 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 26072 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8182 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 26078 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8186 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 26084 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8187 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 26090 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8188 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 26096 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8192 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26102 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8194 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            store_position_for_column((yyvsp[0].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
#line 26111 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8199 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
#line 26120 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8206 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26126 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8207 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26132 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8208 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26138 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8209 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26144 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8214 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 26159 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8226 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 26180 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8243 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 26191 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8253 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 26208 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 8269 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 26216 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8273 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 26224 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8280 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 26232 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8284 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 26240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8291 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 26248 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8295 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->value_list.empty();
            Lex->value_list.push_front((yyvsp[0].item));
          }
#line 26258 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8301 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 26266 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8305 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 26274 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8316 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 26282 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8320 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lex_str).str;
          }
#line 26290 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8326 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 26298 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8330 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 26307 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8336 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 26315 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lex_str).str;
          }
#line 26323 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8346 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 26331 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8350 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lex_str).str;
          }
#line 26339 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8357 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 26347 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8361 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 26355 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8368 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 26363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8372 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 26371 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8379 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 26379 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8383 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 26387 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8389 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26393 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8391 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 26419 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8418 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 26428 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8423 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 26437 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8428 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 26445 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8435 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26456 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8442 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26462 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8446 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 26468 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8447 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 26474 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8448 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 26480 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8453 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26494 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8463 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26507 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8474 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 26513 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8475 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26519 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8479 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26525 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8480 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26531 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8484 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 26537 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8485 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 26543 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8486 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 26549 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8491 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26563 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8501 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26576 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8513 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
          }
#line 26585 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8521 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26604 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8536 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26617 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8547 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 26623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8548 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26629 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8552 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26635 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8553 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26641 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8557 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 26647 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8558 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 26653 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8559 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 26659 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8560 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 26665 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8561 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 26671 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 26677 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8567 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26691 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8577 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26704 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8588 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8589 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26716 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8590 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26722 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8595 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 26730 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8599 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8601 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 26744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 26753 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8613 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 26762 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8626 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 26776 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8639 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 26784 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8643 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 26794 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-1].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 26805 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 26816 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8681 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 26822 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 26828 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8687 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 26838 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8693 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26844 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 26855 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8718 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 26866 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
#line 26874 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8735 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.alloc_index_hints(YYTHD);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        old_mode ? 
                                        INDEX_HINT_MASK_JOIN : 
                                        INDEX_HINT_MASK_ALL);
          }
#line 26886 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8746 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26892 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8752 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26898 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8753 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 26904 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8763 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
          }
#line 26913 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8777 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
#line 26922 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8787 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
#line 26931 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8796 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 26951 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8815 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 26963 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8823 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 26971 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8830 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26977 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8840 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 26987 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8855 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              MYSQL_YYABORT;
            }
          }
#line 26999 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8872 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=0;
              Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
            }
          }
#line 27031 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8900 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }         
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=1;
              Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
          }
#line 27063 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8932 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->current_select->set_lock_for_tables(TL_WRITE);
              lex->safe_to_cache_query=0;
            }
          }
#line 27076 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8941 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->current_select->
                set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
              lex->safe_to_cache_query=0;
            }
          }
#line 27090 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8956 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root)
                          Item_field(&thd->lex->current_select->context,
                                     NULL, NULL, "*");
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 27106 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8971 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[-1].item)))
              MYSQL_YYABORT;
          }
#line 27117 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8978 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (add_item_to_list(thd, (yyvsp[-2].item)))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[0].lex_str).str))
              {
                my_error(ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyvsp[-2].item)->item_name.copy((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info, false);
            }
            else if (!(yyvsp[-2].item)->item_name.is_set())
            {
              (yyvsp[-2].item)->item_name.copy((yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 27143 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 9002 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 27151 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 9008 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end();
          }
#line 27159 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 9014 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_lex_str;}
#line 27165 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 9015 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 27171 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 9016 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 27177 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 9017 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 27183 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 9018 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 27189 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 9022 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27195 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 9023 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27201 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 9029 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item));
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item));
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_or((yyvsp[-2].item), (yyvsp[0].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 27256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 9080 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = new (YYTHD->mem_root) Item_func_xor((yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27267 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 9087 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item));
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item));
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_and((yyvsp[-2].item), (yyvsp[0].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 27314 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 9130 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27324 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 9136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_istrue((yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 9142 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnottrue((yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 9148 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isfalse((yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27354 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 9154 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotfalse((yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 9160 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27374 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 9166 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27384 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 9176 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27394 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9182 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27404 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9188 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_equal((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27414 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9194 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27424 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9200 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator((yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27434 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9210 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_in_subselect((yyvsp[-4].item), (yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27444 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9216 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root) Item_in_subselect((yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27458 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9226 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27468 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9232 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item));
            (yyval.item)= new (YYTHD->mem_root) Item_func_in(*(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27480 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27490 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item));
            Item_func_in *item = new (YYTHD->mem_root) Item_func_in(*(yyvsp[-1].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
#line 27504 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_between((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27514 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9262 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (YYTHD->mem_root) Item_func_between((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[0].item));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
#line 27527 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9271 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= new (YYTHD->mem_root) Item_func_soundex((yyvsp[-3].item));
            Item *item4= new (YYTHD->mem_root) Item_func_soundex((yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_eq(item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27541 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9281 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_like((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].item),Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27551 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9287 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_func_like((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_not(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27565 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9297 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_regex((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27575 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9303 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_func_regex((yyvsp[-3].item),(yyvsp[0].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(YYTHD, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27588 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9316 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_or((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27598 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9322 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_and((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9328 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_left((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27618 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_right((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27628 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_plus((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27638 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9346 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minus((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27648 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9352 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27658 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9358 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mul((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27678 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9370 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_div((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27688 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9376 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27698 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9382 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_int_div((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9388 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27718 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9394 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_xor((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9423 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 27734 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9424 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 27740 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9425 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 27746 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9426 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 27752 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9427 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 27758 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9428 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 27764 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9432 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 27770 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9433 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 27776 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9443 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_string((yyvsp[0].lex_str).str,
                                                      (yyvsp[0].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation((yyvsp[-2].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27792 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9459 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_concat((yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27802 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9465 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 27810 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9469 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_neg((yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27820 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9475 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_neg((yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27830 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9481 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27840 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9487 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.item)= new (YYTHD->mem_root) Item_singlerow_subselect((yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27850 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9493 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 27856 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9495 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27867 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9502 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27878 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9509 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_exists_subselect((yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27888 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9515 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *item;
            (yyval.item)= NULL;
            /*
              If "expr" is reasonably short pure ASCII string literal,
              try to parse known ODBC style date, time or timestamp literals,
              e.g:
              SELECT {d'2001-01-01'};
              SELECT {t'10:20:30'};
              SELECT {ts'2001-01-01 10:20:30'};
            */
            if ((yyvsp[-1].item)->type() == Item::STRING_ITEM &&
               (item= (Item_string *) (yyvsp[-1].item)) &&
                item->collation.repertoire == MY_REPERTOIRE_ASCII &&
                item->str_value.length() < MAX_DATE_STRING_REP_LENGTH * 4)
            {
              enum_field_types type= MYSQL_TYPE_STRING;
              ErrConvString str(&item->str_value);
              LEX_STRING *ls= &(yyvsp[-2].lex_str);
              if (ls->length == 1)
              {
                if (ls->str[0] == 'd')  /* {d'2001-01-01'} */
                  type= MYSQL_TYPE_DATE;
                else if (ls->str[0] == 't') /* {t'10:20:30'} */
                  type= MYSQL_TYPE_TIME;
              }
              else if (ls->length == 2) /* {ts'2001-01-01 10:20:30'} */
              {
                if (ls->str[0] == 't' && ls->str[1] == 's')
                  type= MYSQL_TYPE_DATETIME;
              }
              if (type != MYSQL_TYPE_STRING)
                (yyval.item)= create_temporal_literal(YYTHD,
                                            str.ptr(), str.length(),
                                            system_charset_info,
                                            type, false);
            }
            if ((yyval.item) == NULL)
              (yyval.item)= (yyvsp[-1].item);
          }
#line 27933 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9556 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item));
            Item_func_match *i1= new (YYTHD->mem_root) Item_func_match(*(yyvsp[-5].item_list), (yyvsp[-1].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(i1);
            (yyval.item)= i1;
          }
#line 27946 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9565 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[0].item), ITEM_CAST_CHAR, NULL, NULL,
                                 &my_charset_bin);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27957 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9572 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[-3].item), (yyvsp[-1].cast_type), lex->length, lex->dec,
                                 lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27969 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9580 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_case(* (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27979 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[-3].item), (yyvsp[-1].cast_type), Lex->length, Lex->dec,
                                 Lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27990 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9593 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_conv_charset((yyvsp[-3].item),(yyvsp[-1].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28000 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9599 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item)->is_splocal())
            {
              Item_splocal *il= static_cast<Item_splocal *>((yyvsp[-1].item));

              my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->m_name.ptr());
              MYSQL_YYABORT;
            }
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context(),
                                                         (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28018 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9613 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_insert_value(Lex->current_context(),
                                                        (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28029 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9621 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[0].item),(yyvsp[-3].item),(yyvsp[-2].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28039 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9636 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28049 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9642 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28059 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9648 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_current_user(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 28071 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_typecast((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28081 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_dayofmonth((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28091 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_hour((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28101 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9674 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_insert((yyvsp[-7].item),(yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28111 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9680 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[-1].item));
            list->push_front((yyvsp[-3].item));
            Item_row *item= new (thd->mem_root) Item_row(*list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28130 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9695 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item));
            Item_row *item= new (thd->mem_root) Item_row(*(yyvsp[-1].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28146 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9707 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_left((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28156 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9713 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minute((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28166 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9719 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_month((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28176 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9725 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_right((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28186 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9731 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_second((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28196 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9737 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_time_typecast((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28206 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9743 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_datetime_typecast((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28216 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9749 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_add_time((yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28226 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9755 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28236 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9761 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9767 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9773 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28266 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9779 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28276 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9785 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28286 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9791 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28296 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9797 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28306 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9803 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_user();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 28318 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9811 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_year((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28328 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9832 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28339 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9839 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28349 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9845 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28360 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9852 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28371 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9860 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[-1].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28381 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9867 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[-1].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28391 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9873 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (YYTHD->mem_root) Item_extract( (yyvsp[-3].interval), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28401 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9879 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_format((yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28411 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9885 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
            Lex->safe_to_cache_query= 0;
          }
#line 28420 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9890 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_locate((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28430 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9896 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28441 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9903 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28451 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9909 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28461 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9915 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28471 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9921 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28481 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9927 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28491 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9933 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local((yyvsp[0].ulong_num));
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28513 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9951 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-1].item),(yyvsp[-3].item),(yyvsp[-5].interval_time_st),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28523 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9957 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_timestamp_diff((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28533 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9963 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28544 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9970 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_utc((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28555 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9977 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_utc((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28566 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9992 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ascii((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28576 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9998 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_charset((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 10004 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_coalesce(* (yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28596 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 10010 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_collation((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28606 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 10016 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_database();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28617 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 10023 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_if((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28627 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 10029 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28637 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 10035 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28647 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 10041 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_microsecond((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28657 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 10047 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_mod((yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28667 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 10053 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            WARN_DEPRECATED(YYTHD, "OLD_PASSWORD", "PASSWORD");
            (yyval.item)=  new (YYTHD->mem_root) Item_func_old_password((yyvsp[-1].item));
            Lex->contains_plaintext_password= true;
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28679 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 10061 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item* i1;
            Lex->contains_plaintext_password= true;
            if (thd->variables.old_passwords == 1)
              i1= new (thd->mem_root) Item_func_old_password((yyvsp[-1].item));
            else
              i1= new (thd->mem_root) Item_func_password((yyvsp[-1].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 28696 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 10074 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_quarter((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 10080 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_repeat((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28716 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 10086 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_replace((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 10092 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_reverse((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 10098 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_row_count();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 28748 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 10106 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_round((yyvsp[-3].item),(yyvsp[-1].item),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28758 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 10112 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_int(NAME_STRING("0"),
                                           thd->variables.default_week_format,
                                                   1);
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_week((yyvsp[-1].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28774 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 10124 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_week((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28784 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 10130 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28794 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 10136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string((yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28806 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 10144 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_char_typecast((yyvsp[-4].item), (yyvsp[-1].ulong_num), &my_charset_bin);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string(item, 0, (yyvsp[-1].ulong_num), MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28820 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 10154 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28830 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 10160 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
#line 28847 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 10176 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_mbr_rel((yyvsp[-3].item), (yyvsp[-1].item),
                                               Item_func::SP_CONTAINS_FUNC));
          }
#line 28857 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 10182 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 28868 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 10189 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 28879 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 10196 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 28890 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 10203 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 28901 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 10210 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 28912 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 10217 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD, Item_func_point((yyvsp[-3].item),(yyvsp[-1].item)));
          }
#line 28920 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 10221 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 28931 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 10240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 28954 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 10259 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Create_func *builder;
            Item *item= NULL;

            if (sp_check_name(&(yyvsp[-4].lex_str)))
            {
              MYSQL_YYABORT;
            }

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, (yyvsp[-4].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, (yyvsp[-4].lex_str), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, (yyvsp[-4].lex_str), (yyvsp[-1].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
#line 29012 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 10313 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            if (!(yyvsp[-5].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-5].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[-3].lex_str)))
            {
              MYSQL_YYABORT;
            }

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create(thd, (yyvsp[-5].lex_str), (yyvsp[-3].lex_str), true, (yyvsp[-1].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
#line 29053 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 10353 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 29059 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 10355 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 29065 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 10359 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 29071 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 10360 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 29077 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 10364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 29083 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 10365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 29089 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 10369 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 29095 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 10370 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 29101 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 10375 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 29112 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 10382 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 29121 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 10390 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->item_name.copy((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info, false);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->item_name.copy((yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), YYTHD->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 29148 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 10416 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[-1].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29158 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 10422 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[-1].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29168 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 10428 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_and((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29178 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 10434 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_or((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29188 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 10440 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_xor((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29198 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 10446 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_int((int32) 0L,1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29211 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10455 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29221 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10461 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 29227 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10463 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 29233 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 10465 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(* (yyvsp[-2].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29243 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10471 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29253 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 10482 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29263 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10488 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29273 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10494 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29283 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10500 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[-1].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29293 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10506 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[-1].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29303 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10512 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[-1].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29313 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10518 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[-1].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29323 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10524 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[-1].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29333 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10530 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[-1].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29343 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10536 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 29349 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 10540 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (YYTHD->mem_root)
                  Item_func_group_concat(Lex->current_context(), (yyvsp[-5].num), (yyvsp[-3].item_list),
                                         sel->gorder_list, (yyvsp[-1].string));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            (yyvsp[-3].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 29365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10555 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 29377 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 10563 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 29385 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 10570 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item=
              new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[-2].lex_str), (yyvsp[0].item), false);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
            lex->set_var_list.push_back(item);
          }
#line 29400 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10581 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
#line 29412 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10589 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[-1].lex_str).str && (yyvsp[0].lex_str).str && check_reserved_words(&(yyvsp[-1].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[-2].var_type), (yyvsp[-1].lex_str), (yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
#line 29429 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10604 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 29435 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10605 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 29441 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10610 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 29451 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10615 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 29457 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10621 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
          }
#line 29474 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10638 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_gorder_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 29480 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10640 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_gorder_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 29486 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10645 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->current_select->inc_in_sum_expr())
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 29499 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10654 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 29508 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
#line 29514 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10664 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
#line 29520 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10666 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
#line 29526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
#line 29532 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10670 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
#line 29538 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
#line 29544 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10674 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
#line 29550 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10676 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)= ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec= Lex->length= (char *) 0; }
#line 29556 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10678 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)= ITEM_CAST_TIME; Lex->charset= NULL; Lex->length= (char *) 0; }
#line 29562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10680 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)= ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->length= (char *) 0; }
#line 29568 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
#line 29574 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10686 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 29580 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10687 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 29586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10692 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 29597 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10699 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 29606 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 29612 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10707 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 29618 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10712 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 29629 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10719 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 29638 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 29644 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10727 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 29650 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10731 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 29656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 29662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10737 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 29674 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10745 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 29684 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10755 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 29690 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10757 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              MYSQL_YYABORT;
          }
#line 29700 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10765 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 29706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10776 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 29712 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10777 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 29718 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10783 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 29724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10785 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 29732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10805 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); }
#line 29738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10807 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); (yyvsp[0].table_list)->straight=1; }
#line 29744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10810 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 29756 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 29766 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10825 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 29778 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10833 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].table_list)->straight=1;
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 29789 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10841 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 29797 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10845 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); (yyval.table_list)=(yyvsp[-5].table_list); }
#line 29803 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10847 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 29812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10855 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 29824 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10863 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 29836 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10871 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 29844 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10875 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 29854 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10881 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 29865 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10891 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 29877 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10899 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on((yyval.table_list), (yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 29890 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10908 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 29898 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10912 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 29909 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10919 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
          }
#line 29921 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10929 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29927 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10930 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29933 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10931 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29939 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10939 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 29945 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10945 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 29953 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10959 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 29962 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10964 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Select->add_table_to_list(YYTHD, (yyvsp[-3].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-2].string_list))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
#line 29977 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10975 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[-2].num))
            {
              if (sel->set_braces(1))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              /* select in braces, can't contain global parameters */
              if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[-1].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
#line 30003 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 11015 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-2].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-3].select_lex)->embedding &&
                !(yyvsp[-3].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-2].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                               ti, (yyvsp[0].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if ((yyvsp[0].lex_str_ptr) != NULL)
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-2].table_list);
            }
          }
#line 30057 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 11088 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].table_list) && (yyvsp[0].is_not_empty))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 30069 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 11098 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[0].num), FALSE))
              MYSQL_YYABORT;
          }
#line 30078 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 11103 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
             */
            Lex->pop_context();
          }
#line 30090 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 11111 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-6].table_list) != NULL)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 30102 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 11123 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 30122 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 11142 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 30134 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 11150 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 30142 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 11159 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
#line 30152 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 11165 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[-2].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[0].table_list) && (yyval.table_list))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 30170 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 11181 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 30191 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 11198 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 30199 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 11205 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= Select; }
#line 30205 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 11210 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              MYSQL_YYABORT;
            }

            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
            {
              /* we are not in parentheses */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 30232 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 11235 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30238 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 11236 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30244 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 11241 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 30252 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 11244 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 30258 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 11245 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 30264 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 11246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 30270 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 11250 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 30276 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 11251 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 30282 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 11256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 30290 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 11261 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 30298 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 11274 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(YYTHD); }
#line 30304 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 11278 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 30310 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 11283 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(YYTHD, NULL, 0); }
#line 30316 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 11284 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30322 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 11289 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
#line 30328 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 11291 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(YYTHD, (char *)"PRIMARY", 7); }
#line 30334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 11301 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[0].lex_str).str,
                                                    (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
#line 30349 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 11312 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[0].lex_str).str,
                                                    (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[-2].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 30363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 11324 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30369 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 11325 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 30375 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 11326 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 30381 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 11327 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 30387 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 11328 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 30393 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 11329 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 30399 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 11330 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 30405 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 11331 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 30411 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 11332 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 30417 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 11333 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 30423 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 11334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 30429 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 11335 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 30435 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 11339 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 30441 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 11340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 30447 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 11341 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 30453 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 11342 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 30459 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 11343 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 30465 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 11344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 30471 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 11345 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 30477 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 11346 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 30483 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 11347 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 30489 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 11351 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 30495 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 11352 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 30501 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 11353 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 30507 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 11354 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 30513 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 11364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 30519 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 11366 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[0].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
#line 30529 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 11379 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 30535 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 11381 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 30543 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 11385 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= (yyvsp[0].item);
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 30555 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 11397 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 30563 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 11401 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= (yyvsp[0].item);
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 30575 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 11412 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
#line 30584 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 11417 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string("", 0, &my_charset_latin1) :
                 new (thd->mem_root) Item_string("\\", 1, &my_charset_latin1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 30598 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 11439 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 30604 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 11441 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 30610 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 11445 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30616 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 11447 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= CUBE_TYPE;
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
            MYSQL_YYABORT;
          }
#line 30640 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 11467 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            if (lex->current_select->options & SELECT_DISTINCT)
            {
              // DISTINCT+ROLLUP does not work
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP", "DISTINCT");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 30668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 11507 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[-1].item), ascending))
              MYSQL_YYABORT;
          }
#line 30679 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 11526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_union() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(lex->thd))
                MYSQL_YYABORT;
            }
          }
#line 30714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 11561 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 30720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 11563 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 30726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 11567 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 30732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 11568 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 30738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 11569 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 30744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 11574 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            sel->offset_limit= 0;
            sel->select_limit= 0;
          }
#line 30755 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 11580 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30761 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 11584 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30767 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 11585 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30773 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 11590 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Select->select_limit->fixed &&
                Select->select_limit->val_int() != 0)
            {
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            }
          }
#line 30785 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 11601 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 30796 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 11608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 30807 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 11615 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 30818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 11625 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          THD *thd= YYTHD;
          LEX *lex= Lex;
          Lex_input_stream *lip= YYLIP;
          sp_head *sp= lex->sphead;
          const char *query_start_ptr=
            sp ? sp->m_parser_data.get_current_stmt_start_ptr() : NULL;

          Item_splocal *v= create_item_for_sp_var(thd, (yyvsp[0].lex_str), NULL,
                                                  query_start_ptr,
                                                  lip->get_tok_start(),
                                                  lip->get_ptr());
          if (!v)
            MYSQL_YYABORT;

          lex->safe_to_cache_query= false;

          if (v->type() != Item::INT_ITEM)
          {
            my_error(ER_WRONG_SPVAR_TYPE_IN_LIMIT, MYF(0));
            MYSQL_YYABORT;
          }

          v->limit_clause_param= true;
          (yyval.item)= v;
        }
#line 30849 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 11652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          ((Item_param *) (yyvsp[0].item))->limit_clause_param= TRUE;
        }
#line 30857 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 11656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 30867 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 11662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 30877 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 11668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 30887 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 11677 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 30896 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 11682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            if (Select->select_limit->fixed &&
                Select->select_limit->val_int() != 0)
            {
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            }
            sel->explicit_limit= 1;
          }
#line 30911 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 11695 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30917 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 11696 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 30923 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 11697 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30929 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 11698 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 11699 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30941 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11700 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30947 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11704 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30953 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11705 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 30959 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30965 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11707 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30971 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 30977 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11712 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30983 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11713 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30989 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30995 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11715 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 31001 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11716 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 31007 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 31013 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11721 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 31019 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11722 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 31025 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11723 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 31031 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { my_parse_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
#line 31037 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11739 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            
            if (!lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            if (&lex->select_lex != lex->current_select)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
              MYSQL_YYABORT;
            }

            if (lex->result != NULL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }

            if ((lex->proc_analyse= new Proc_analyse_params) == NULL)
            {
              my_error(ER_OUTOFMEMORY, MYF(ME_FATALERROR));
              MYSQL_YYABORT;
            }
            
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 31071 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11772 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31077 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11774 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->proc_analyse->max_tree_elements= (yyvsp[0].ulonglong_number);
          }
#line 31085 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11778 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->proc_analyse->max_tree_elements= (yyvsp[-2].ulonglong_number);
            Lex->proc_analyse->max_treemem= (yyvsp[0].ulonglong_number);
          }
#line 31094 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11786 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
#line 31108 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11798 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe && (!(lex->result= new select_dumpvar())))
              MYSQL_YYABORT;
          }
#line 31118 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11804 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31124 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11809 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31130 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11814 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->result) 
            {
              my_var *var= new my_var((yyvsp[0].lex_str),0,0,(enum_field_types)0);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
#line 31153 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11833 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
#ifndef DBUG_OFF
            sp_head *sp= lex->sphead;
#endif
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            if (lex->result)
            {
              my_var *var= new my_var((yyvsp[0].lex_str), 1, spv->offset, spv->type);

              if (var == NULL)
                MYSQL_YYABORT;

              ((select_dumpvar *) lex->result)->var_list.push_back(var);

#ifndef DBUG_OFF
              var->sp= sp;
#endif
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
#line 31193 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11872 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (! Lex->parsing_options.allows_select_into)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
              MYSQL_YYABORT;
            }
          }
#line 31205 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0)) ||
                !(lex->result= new select_export(lex->exchange)))
              MYSQL_YYABORT;
          }
#line 31217 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11892 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 31223 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11895 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result= new select_dump(lex->exchange)))
                MYSQL_YYABORT;
            }
          }
#line 31239 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11907 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 31247 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11918 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 31257 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11924 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
          }
#line 31265 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-2].num);
            lex->drop_if_exists= (yyvsp[0].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 31278 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11944 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31284 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11945 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31290 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11946 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[-3].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
#line 31310 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11961 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31316 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11963 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lex_str);
          }
#line 31327 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11970 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lex_str), FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new sp_name((yyvsp[-2].lex_str), (yyvsp[0].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 31352 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11991 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new sp_name(db, (yyvsp[0].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 31377 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 12012 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 31393 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 12024 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_USER;
          }
#line 31401 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 12028 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[0].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 31413 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 12036 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31419 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 12038 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 31429 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 12044 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 31440 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 12051 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 31449 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 12056 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 31458 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 12061 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->server_options.server_name= (yyvsp[0].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[0].lex_str).length;
          }
#line 31469 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 12068 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_DROP_COMPRESSION_DICTIONARY;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->ident= (yyvsp[0].lex_str);
          }
#line 31479 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 12082 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 31491 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 12093 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-1].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list)))
              MYSQL_YYABORT;
          }
#line 31505 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 12111 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 31517 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 12121 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 31523 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 12122 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31529 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 12126 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 31535 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 12127 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31541 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 12150 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 31552 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 12158 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
#line 31561 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 12163 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31567 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 12168 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 31578 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 12175 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
#line 31587 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 12180 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31593 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 12185 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
#line 31610 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 12197 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 31616 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 12199 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;

          push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                              ER_WARN_DEPRECATED_SYNTAX,
                              ER(ER_WARN_DEPRECATED_SYNTAX),
                              "INSERT DELAYED", "INSERT");
        }
#line 31633 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 12211 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 31639 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 12215 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 31645 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 12217 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;

          push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                              ER_WARN_DEPRECATED_SYNTAX,
                              ER(ER_WARN_DEPRECATED_SYNTAX),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 31662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 12232 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 12233 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31674 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 12238 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 31685 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 12246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31691 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 12247 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31697 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 12248 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31703 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 12250 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!(lex->insert_list = new List_item) ||
                lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
#line 31714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 12260 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item)); }
#line 31720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 12261 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item)); }
#line 31726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 12265 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 12266 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 12268 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(0);}
#line 31744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 12269 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31750 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 12271 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 31756 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 12272 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31762 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 12287 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[-2].item)) ||
                lex->insert_list->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31773 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 12296 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31779 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 12297 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31785 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 12301 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31791 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 12302 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31797 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 12307 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              if (!(Lex->insert_list = new List_item))
                MYSQL_YYABORT;
          }
#line 31806 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 12312 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
#line 31816 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 12320 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31822 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 12326 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->insert_list->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31831 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 12331 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->insert_list->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31840 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 12338 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 31846 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 12340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 31856 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 12349 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 31862 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 12357 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 31873 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 12365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->select_lex.table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex.get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex.get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[-4].lock_type));
          }
#line 31896 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 12383 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31902 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 12393 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_item_to_list(YYTHD, (yyvsp[-2].item)) || add_value_to_list(YYTHD, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31911 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 12406 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[-2].item)) || 
              lex->value_list.push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31922 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 12415 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 31928 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 12416 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 31934 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 12423 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 31949 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 12438 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list)))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 31964 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 12449 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31970 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 12451 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 31980 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 12457 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
#line 31989 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 12462 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 31999 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 12468 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
#line 32008 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 12481 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new Table_ident((yyvsp[-1].lex_str));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 32025 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 12494 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new Table_ident(YYTHD, (yyvsp[-3].lex_str), (yyvsp[-1].lex_str), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 32042 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 12509 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32048 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 12510 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32054 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 12514 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32060 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 12515 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32066 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 12519 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 32072 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 12520 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 32078 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 12521 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 32084 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 12526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 32099 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 12537 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 32112 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 12562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 32120 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 12566 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 32128 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 12570 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 32136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 12574 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 32144 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 12578 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 32152 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 12582 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 32160 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 12586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 32168 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 12590 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 32176 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 12594 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 32184 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 12601 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 32192 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 12605 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 32200 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 12614 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            memset(static_cast<void*>(&lex->create_info), 0,
                   sizeof(lex->create_info));
          }
#line 32213 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 12623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 32221 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 12630 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
#line 32232 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 12637 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 32244 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 12645 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 32256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 12653 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 32268 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 12661 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 32280 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 12669 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 32292 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 12677 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 32303 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 12684 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 32309 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12686 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 32315 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12688 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
#line 32328 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12697 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 32336 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12701 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 32344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12705 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 32353 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 32362 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12715 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
#line 32375 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 32386 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12731 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 32395 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (void) create_select_for_variable("warning_count"); }
#line 32401 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (void) create_select_for_variable("error_count"); }
#line 32407 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12740 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 32413 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12742 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 32419 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 32431 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12752 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILE", "Performance Schema");
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 32446 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12763 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              MYSQL_YYABORT;
          }
#line 32458 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12771 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 32464 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12773 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              MYSQL_YYABORT;
          }
#line 32476 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12781 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
#line 32487 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12788 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
#line 32498 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12795 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
#line 32512 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12805 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[0].lex_user);
            lex->grant_user->password=null_lex_str;
          }
#line 32523 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[-1].num);
            Lex->name= (yyvsp[0].lex_str);
          }
#line 32533 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 32546 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12827 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 32558 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12835 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 32566 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12839 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 32574 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12844 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_NOLOCK_STAT;
          }
#line 32582 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12848 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_NOLOCK_STAT;
          }
#line 32590 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12852 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SHOW_CLIENT_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_CLIENT_STATS))
             MYSQL_YYABORT;
          }
#line 32601 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12859 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_USER_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_USER_STATS))
             MYSQL_YYABORT;
          }
#line 32612 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12866 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SHOW_THREAD_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_THREAD_STATS))
             MYSQL_YYABORT;
          }
#line 32623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12873 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_TABLE_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_STATS))
             MYSQL_YYABORT;
          }
#line 32634 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12880 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_INDEX_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_INDEX_STATS))
             MYSQL_YYABORT;
          }
#line 32645 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12887 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 32656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12894 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 32667 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12901 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 32677 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12907 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
#line 32688 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12914 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
#line 32699 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12921 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 32708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12926 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 32717 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12931 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 32726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12939 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 32732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12941 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 32738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12943 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 32744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12957 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 32750 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12958 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
#line 32756 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12962 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 32762 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12963 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 32768 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12972 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 32774 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12973 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 32780 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12977 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 32786 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12978 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 32792 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12984 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
#line 32803 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12991 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->where= (yyvsp[0].item);
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 32813 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 13001 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= 0;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[0].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
#line 32828 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 13012 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 32836 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 13016 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 32842 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 13018 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->select_lex.options|= SELECT_DESCRIBE; }
#line 32848 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 13036 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
#line 32857 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 13041 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_EXTENDED;
          }
#line 32867 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 13047 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_PARTITIONS;
          }
#line 32877 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 13053 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
              Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_PARTITIONS;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32900 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 13074 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32906 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 13075 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 32912 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 13077 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                                    (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
#line 32924 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 13091 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 32935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 13098 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32941 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 13103 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 32955 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 13112 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32961 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 13113 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32967 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 13118 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32973 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 13120 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 32988 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 13131 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_parse_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            } 
          }
#line 33000 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 13139 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 33015 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 13154 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33021 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 13159 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 33027 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 13161 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 33033 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 13163 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 33039 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 13165 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 33045 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 13167 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 33051 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 13169 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 33057 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 13171 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 33063 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 13173 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 33069 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 13175 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 33075 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 13177 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 33081 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 13179 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 33087 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 13181 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 33093 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 13183 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 33099 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 13185 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 33105 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 13187 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 33111 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 13189 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 33117 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 13191 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 33123 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 13193 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 33129 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 13195 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 33135 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 13199 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33141 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 13200 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33147 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 13205 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 33156 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 13210 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33162 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 13219 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 33168 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 13220 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33174 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 13221 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 33180 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 13222 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 33186 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 13224 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 33192 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 13228 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 33198 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 13229 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 33204 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 13234 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 33214 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 13240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33220 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 13246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 33231 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 13257 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 33239 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 13261 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 33250 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 13271 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
            Lex->sql_command= SQLCOM_PURGE_ARCHIVE;
          }
#line 33259 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 13276 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_ARCHIVE_BEFORE;
          }
#line 33270 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 13288 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 33281 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 13297 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 33287 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 13298 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 33293 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 13299 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 33299 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 13306 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].lex_str).str;
          }
#line 33309 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 13317 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 33325 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 13329 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype))))
              MYSQL_YYABORT;
          }
#line 33339 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 13339 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[-9].lock_type), MDL_SHARED_WRITE, NULL, (yyvsp[0].string_list)))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
#line 33353 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 13349 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 33359 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 13353 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 13357 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 33371 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 13358 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 33377 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 13362 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 33383 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 13363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 33389 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 13367 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 33395 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 13369 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
              (yyval.lock_type)= TL_WRITE_DEFAULT;
            else
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
#line 33411 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 13380 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 33417 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 13384 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 33423 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 13385 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 33429 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 13386 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 33435 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 13401 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 33444 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 13406 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 33455 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 13413 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 33464 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 13418 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 33473 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13436 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 33482 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13441 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 33491 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13448 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33497 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13450 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 33503 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 13455 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 33512 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 13462 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33518 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 13464 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33524 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 13468 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33530 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 13469 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33536 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 13470 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33542 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13475 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item)); }
#line 33548 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13477 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item)); }
#line 33554 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13481 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 33560 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13483 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33570 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13491 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33576 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13492 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33582 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13502 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint length= (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string));
            String *val= new (YYTHD->mem_root) String((yyvsp[-2].simple_string),
                                                      length,
                                                      YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->update_list.push_back((yyvsp[-4].item)) ||
                lex->value_list.push_back((yyvsp[-1].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->item_name.copy((yyvsp[-2].simple_string), length, YYTHD->charset());
          }
#line 33601 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13522 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING tmp;
            THD *thd= YYTHD;
            const CHARSET_INFO *cs_con= thd->variables.collation_connection;
            const CHARSET_INFO *cs_cli= thd->variables.character_set_client;
            uint repertoire= thd->lex->text_string_is_7bit &&
                             my_charset_is_ascii_based(cs_cli) ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            if (thd->charset_is_collation_connection ||
                (repertoire == MY_REPERTOIRE_ASCII &&
                 my_charset_is_ascii_based(cs_con)))
              tmp= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&tmp, cs_con, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, cs_cli))
                MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_string(tmp.str, tmp.length, cs_con,
                                                DERIVATION_COERCIBLE,
                                                repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33629 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13546 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint repertoire= Lex->text_string_is_7bit ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            DBUG_ASSERT(my_charset_is_ascii_based(national_charset_info));
            (yyval.item)= new (YYTHD->mem_root) Item_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                  national_charset_info,
                                                  DERIVATION_COERCIBLE,
                                                  repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33645 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13558 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *str= new (YYTHD->mem_root) Item_string((yyvsp[0].lex_str).str,
                                                                (yyvsp[0].lex_str).length, (yyvsp[-1].charset));
            if (str == NULL)
              MYSQL_YYABORT;
            str->set_repertoire_from_value();
            str->set_cs_specified(TRUE);

            (yyval.item)= str;
          }
#line 33660 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13569 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string* item= (Item_string*) (yyvsp[-1].item);
            item->append((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (!(item->collation.repertoire & MY_REPERTOIRE_EXTENDED))
            {
              /*
                 If the string has been pure ASCII so far,
                 check the new part.
              */
              const CHARSET_INFO *cs= YYTHD->variables.collation_connection;
              item->collation.repertoire|= my_string_repertoire(cs,
                                                                (yyvsp[0].lex_str).str,
                                                                (yyvsp[0].lex_str).length);
            }
          }
#line 33680 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13588 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 33692 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13596 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 33708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 33724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            Item_param *item;
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
            item= new (thd->mem_root) Item_param((uint) (lip->get_tok_start() - thd->query()));
            if (!((yyval.item)= item) || lex->param_list.push_back(item))
            {
              my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 33746 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13643 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 33752 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13644 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 33758 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13646 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 33767 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13654 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 33773 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13655 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 33779 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33785 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13658 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item) = new (YYTHD->mem_root) Item_null();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 33804 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13673 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int(NAME_STRING("FALSE"), 0, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33814 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13679 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int(NAME_STRING("TRUE"), 1, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33824 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13685 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33834 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13691 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33844 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13697 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(null_name_string, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[-1].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value,
                                                    true, //send error
                                                    true))  //truncate
            {
              MYSQL_YYABORT;
            }

            item_str->set_repertoire_from_value();
            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
#line 33879 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(null_name_string, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[-1].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value,
                                                    true, //send error
                                                    true)) //truncate
            {
              MYSQL_YYABORT;
            }

            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
#line 33913 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13761 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[0].lex_str),
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 33927 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13771 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[0].lex_str),
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 33941 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13781 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 33951 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13787 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_decimal((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   YYTHD->charset());
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
#line 33964 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13796 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_float((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
#line 33976 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13808 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATE, true)))
              MYSQL_YYABORT;
          }
#line 33986 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13814 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_TIME, true)))
              MYSQL_YYABORT;
          }
#line 33996 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13820 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
          }
#line 34006 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13835 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 34012 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13836 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 34018 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13841 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (YYTHD->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[-2].lex_str).str, "*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
#line 34031 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13850 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[-4].lex_str).str;
            (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                               schema,
                                               (yyvsp[-2].lex_str).str,"*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
#line 34048 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13865 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 34054 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13870 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx = lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (pctx && (spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              Lex_input_stream *lip= &thd->m_parser_state->m_lip;
              sp_head *sp= lex->sphead;

              DBUG_ASSERT(sp);

              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              (yyval.item)=
                create_item_for_sp_var(
                  thd, (yyvsp[0].lex_str), spv,
                  sp->m_parser_data.get_current_stmt_start_ptr(),
                  lip->get_tok_start_prev(),
                  lip->get_tok_end());

              if ((yyval.item) == NULL)
                MYSQL_YYABORT;

              lex->safe_to_cache_query= false;
            }
            else
            {
              SELECT_LEX *sel=Select;
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, NullS, (yyvsp[0].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[0].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 34109 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13920 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 34115 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13925 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel=Select;
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[0].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, NullS, (yyvsp[0].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34137 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13942 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 34143 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13947 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              FIXME This will work ok in simple_ident_nospvar case because
              we can't meet simple_ident_nospvar in trigger now. But it
              should be changed in future.
            */
            if (sp && sp->m_type == SP_TYPE_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
            {
              Item_trigger_field *trg_fld;
              bool new_row= ((yyvsp[-2].lex_str).str[0]=='N' || (yyvsp[-2].lex_str).str[0]=='n');

              if (sp->m_trg_chistics.event == TRG_EVENT_INSERT &&
                  !new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
                MYSQL_YYABORT;
              }

              if (sp->m_trg_chistics.event == TRG_EVENT_DELETE &&
                  new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
                MYSQL_YYABORT;
              }

              DBUG_ASSERT(!new_row ||
                          (sp->m_trg_chistics.event == TRG_EVENT_INSERT ||
                           sp->m_trg_chistics.event == TRG_EVENT_UPDATE));
              const bool read_only=
                !(new_row && sp->m_trg_chistics.action_time == TRG_ACTION_BEFORE);
              trg_fld= new (thd->mem_root)
                         Item_trigger_field(Lex->current_context(),
                                            new_row ?
                                              Item_trigger_field::NEW_ROW:
                                              Item_trigger_field::OLD_ROW,
                                            (yyvsp[0].lex_str).str,
                                            SELECT_ACL,
                                            read_only);
              if (trg_fld == NULL)
                MYSQL_YYABORT;

              /*
                Let us add this item to list of all Item_trigger_field objects
                in trigger.
              */
              lex->sphead->m_cur_instr_trig_field_items.link_in_list(
                trg_fld, &trg_fld->next_trg_field);

              (yyval.item)= trg_fld;
            }
            else
            {
              SELECT_LEX *sel= lex->current_select;
              if (sel->no_table_names_allowed)
              {
                my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                         MYF(0), (yyvsp[-2].lex_str).str, thd->where);
              }
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 34227 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 14027 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[-2].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);

            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 14052 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            const char* schema= (thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                 NullS : (yyvsp[-4].lex_str).str);
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[-2].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 schema,
                                                 (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               schema,
                                               (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34288 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 14082 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 34294 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 14084 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-4].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
#line 34314 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 14100 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
#line 34328 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 14109 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 34334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 14114 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new Table_ident((yyvsp[0].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 14120 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[-2].lex_str),(yyvsp[0].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34354 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 14126 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new Table_ident((yyvsp[0].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 14136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new Table_ident((yyvsp[-1].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34375 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 14142 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[-3].lex_str),(yyvsp[-1].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34385 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 14151 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING db={(char*) any_db,3};
            (yyval.table)= new Table_ident(YYTHD, db,(yyvsp[0].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34396 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 14160 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 34402 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 14162 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).str+(yyvsp[0].lex_str).length,
                                                   (yyvsp[0].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lex_str).length)
              {
                ErrConvString err((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[0].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 34433 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 14192 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34447 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 14205 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 34464 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 14221 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            } 
          }
#line 34481 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 14237 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 34499 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 14253 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 34505 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 14255 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].symbol).length;
          }
#line 34517 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 14265 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 34523 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 14267 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].symbol).length;
          }
#line 34535 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 14277 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 34541 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 14278 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 34547 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 14279 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 34553 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 14284 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyval.lex_user)->user);

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
#line 34584 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 14311 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[-2].lex_str);
            (yyval.lex_user)->host= (yyvsp[0].lex_str);
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyval.lex_user)->host.str);
            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyval.lex_user)->user);
            trim_whitespace(system_charset_info, &(yyval.lex_user)->host);
          }
#line 34621 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 14344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /* 
              empty LEX_USER means current_user and 
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 34636 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 14358 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34642 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 14359 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34648 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 14360 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34654 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 14361 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34660 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 14362 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34666 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 14363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 14364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34678 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 14365 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34684 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 14366 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34690 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 14367 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34696 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 14368 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 14369 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 14370 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 14371 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 14372 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 14373 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 14374 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 14375 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34744 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 14376 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34750 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 14377 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34756 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 14378 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34762 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 14379 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34768 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 14380 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34774 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 14381 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34780 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 14382 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34786 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 14383 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34792 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 14384 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34798 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 14385 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34804 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 14386 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34810 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 14387 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34816 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 14388 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34822 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 14389 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34828 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 14390 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34834 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 14391 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34840 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 14392 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34846 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 14393 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34852 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 14394 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34858 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 14395 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34864 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 14396 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34870 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 14397 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34876 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 14398 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34882 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 14399 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34888 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 14400 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34894 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 14401 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34900 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 14402 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34906 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 14403 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34912 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 14404 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34918 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 14405 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34924 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 14406 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34930 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 14407 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34936 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 14417 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34942 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 14418 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34948 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 14419 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34954 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 14420 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34960 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 14421 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34966 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 14422 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34972 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 14423 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34978 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 14424 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34984 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 14425 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34990 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 14426 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34996 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 14427 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35002 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 14428 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35008 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 14429 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35014 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 14430 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35020 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 14431 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35026 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 14432 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35032 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 14433 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35038 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 14434 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35044 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 14435 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35050 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 14436 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35056 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 14437 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35062 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 14438 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35068 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 14439 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35074 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 14440 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35080 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 14441 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35086 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 14442 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35092 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 14443 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35098 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 14444 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35104 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 14445 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35110 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 14446 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35116 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 14447 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35122 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 14448 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35128 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 14449 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35134 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 14450 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35140 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 14451 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35146 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 14452 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35152 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 14453 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35158 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 14454 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35164 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 14455 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35170 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 14456 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35176 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 14457 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35182 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 14458 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35188 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 14459 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35194 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 14460 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35200 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 14461 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35206 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 14462 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35212 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 14463 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35218 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 14464 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35224 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 14465 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35230 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 14470 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35236 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 14471 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35242 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 14472 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35248 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 14473 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35254 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14474 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35260 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14475 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35266 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14476 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35272 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14477 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35278 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14478 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35284 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14479 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35290 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14480 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35296 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14481 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35302 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14482 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35308 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14483 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35314 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14484 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35320 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14485 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35326 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14486 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35332 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14487 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35338 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14488 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35344 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14489 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35350 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14490 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35356 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14491 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35362 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14492 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35368 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14493 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35374 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14494 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35380 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14495 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35386 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14496 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35392 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14497 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35398 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14498 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35404 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14499 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35410 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14500 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35416 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14501 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35422 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14502 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35428 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14503 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35434 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14504 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35440 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14505 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35446 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14506 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35452 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14507 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35458 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14508 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35464 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14509 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35470 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14510 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35476 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14511 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35482 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14512 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35488 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14513 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35494 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14514 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35500 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14515 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35506 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14516 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35512 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14517 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35518 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14518 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35524 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14519 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35530 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14520 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35536 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 14521 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35542 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14522 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35548 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14523 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35554 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14524 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35560 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14525 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35566 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35572 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14527 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35578 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14528 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35584 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14529 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35590 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14530 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35596 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14531 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35602 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14532 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14533 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35614 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14534 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35620 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14535 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35626 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14536 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35632 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14537 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35638 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14538 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35644 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14539 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35650 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14540 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14541 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14542 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14543 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35674 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14544 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35680 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14545 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35686 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14546 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35692 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14547 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35698 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14548 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35704 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14549 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14550 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35716 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14551 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35722 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14552 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14553 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35734 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14554 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35740 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14555 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35746 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14556 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35752 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14557 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35758 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14558 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35764 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 14559 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35770 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14560 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35776 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14561 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35782 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35788 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14563 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35794 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14564 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35800 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 14565 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35806 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14566 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35812 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 14567 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35818 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14568 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35824 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14569 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35830 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14570 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35836 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14571 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35842 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14572 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35848 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14573 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35854 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14574 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35860 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 14575 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35866 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14576 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35872 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14577 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35878 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14578 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35884 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14579 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35890 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14580 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35896 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 14581 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35902 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14582 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35908 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14583 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35914 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14584 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35920 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14585 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35926 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35932 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14587 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35938 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14588 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35944 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14589 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35950 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14590 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35956 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14591 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35962 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14592 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35968 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14593 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35974 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 14594 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35980 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14595 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35986 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 14596 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35992 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 14597 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35998 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14598 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36004 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14599 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36010 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 14600 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36016 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14601 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36022 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 14602 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36028 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 14603 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36034 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 14604 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36040 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 14605 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36046 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14606 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36052 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14607 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36058 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36064 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14609 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36070 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14610 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36076 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14611 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36082 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14612 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36088 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14613 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36094 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14614 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36100 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14615 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36106 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14616 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36112 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14617 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36118 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14618 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36124 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14619 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36130 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14620 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14621 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36142 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14622 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36148 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14623 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36154 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14624 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36160 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14625 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36166 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14626 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36172 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14627 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36178 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14628 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36184 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14629 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36190 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14630 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36196 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14631 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36202 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14632 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36208 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14633 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36214 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14634 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36220 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14635 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36226 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14636 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36232 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14637 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36238 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14638 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36244 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14639 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36250 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14640 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36256 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14641 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36262 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14642 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36268 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14643 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36274 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14644 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36280 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14645 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36286 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14646 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36292 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14647 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36298 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14648 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36304 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14649 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36310 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14650 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36316 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14651 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36322 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36328 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14653 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36334 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14654 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36340 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14655 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36346 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14656 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36352 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14657 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36358 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14658 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14659 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36370 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14660 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36376 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14661 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36382 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36388 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14663 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36394 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14664 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36400 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14665 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36406 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14666 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36412 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14667 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36418 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 14668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36424 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 14669 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36430 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 14670 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36436 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 14671 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36442 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36448 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14673 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36454 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14674 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36460 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14675 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36466 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14676 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36472 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14677 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36478 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14678 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36484 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14679 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36490 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14680 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36496 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14681 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36502 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36508 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 14683 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36514 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 14684 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36520 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2343:
#line 14685 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2344:
#line 14686 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36532 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 14687 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36538 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 14688 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36544 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 14689 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36550 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 14690 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36556 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2349:
#line 14691 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2350:
#line 14692 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36568 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 14693 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36574 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14694 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36580 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14695 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14696 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36592 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 14697 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36598 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 14698 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36604 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 14699 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36610 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14700 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36616 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14701 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36622 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36628 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14703 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36634 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 14704 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36640 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2363:
#line 14705 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36646 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 14706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 14707 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36658 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 14708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36664 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 14709 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36670 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 14710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36676 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 14711 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14712 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36688 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14713 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36694 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36700 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14715 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14716 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36712 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14717 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36718 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14718 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14719 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36730 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 14720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 14721 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36742 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 14722 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36748 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 14723 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36754 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36760 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14725 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36766 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36772 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14727 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36778 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36784 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14729 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36790 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2388:
#line 14730 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36796 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2389:
#line 14731 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36802 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36808 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2391:
#line 14733 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36814 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14734 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36820 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14735 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36826 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36832 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14737 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36838 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14738 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36844 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14750 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_SET_OPTION;
            lex->option_type= OPT_SESSION;
            lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;

            sp_create_assignment_lex(YYTHD, YY_TOKEN_END);
          }
#line 36860 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14762 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36866 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14764 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_SET_OPTION;
	    /* Don't clear var_list in the case of recursive statement */
	    if (!lex->set_statement)
              lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;
            lex->set_statement= true;
            lex->option_type= OPT_SESSION;
            sp_head *sp= lex->sphead;
            if (sp && !sp->is_invoked())
            {
              sp->m_parser_data.set_current_stmt_start_ptr(YY_TOKEN_START);
              sp->m_parser_data.set_option_start_ptr(YY_TOKEN_END);
            }
          }
#line 36889 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14783 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36895 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14798 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT;
          }
#line 36904 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14804 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 36912 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14808 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT;
          }
#line 36921 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14813 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 36929 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14823 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
#line 36938 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2411:
#line 14829 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
#line 36947 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14843 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(YYTHD, YY_TOKEN_START);
          }
#line 36955 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14847 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
#line 36964 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14852 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(YYTHD, YY_TOKEN_START);
          }
#line 36972 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14856 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
#line 36981 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 14865 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 36989 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14873 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 36995 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14874 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 37001 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14875 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 37007 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14879 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 37013 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14880 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 37019 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14881 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 37025 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14882 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 37031 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 14886 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 37037 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 14887 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 37043 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 14888 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 37049 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2431:
#line 14889 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 37055 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2432:
#line 14895 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            /*
              Ignore SET STATEMENT variables list on slaves because system
              variables are not replicated except certain variables set the
              values of whose are written to binlog event header and nothing
              additional is required to set them.
	    */
            if (!thd->slave_thread || !lex->set_statement)
	    {
              if ((yyvsp[-2].variable).var && (yyvsp[-2].variable).var != trg_new_row_fake_var)
              {
                /* It is a system variable. */
                if (set_system_variable(thd, &(yyvsp[-2].variable), lex->option_type, (yyvsp[0].item)))
                  MYSQL_YYABORT;
              }
              else
              {
                /*
                  Not in trigger assigning value to new row,
                  and option_type preceeding local variable is illegal.
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
	  }
#line 37088 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14928 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            if (sp)
              sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_START);
          }
#line 37099 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            const char *expr_start_ptr= NULL;

            if (sp)
              expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if ((yyvsp[-3].variable).var == trg_new_row_fake_var)
            {
              DBUG_ASSERT(sp);
              DBUG_ASSERT(expr_start_ptr);

              /* We are parsing trigger and this is a trigger NEW-field. */

              LEX_STRING expr_query= EMPTY_STR;

              if (!(yyvsp[0].item))
              {
                // This is: SET NEW.x = DEFAULT
                // DEFAULT clause is not supported in triggers.

                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              else if (lex->is_metadata_used())
              {
                expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);

                if (!expr_query.str)
                  MYSQL_YYABORT;
              }

              if (set_trigger_new_row(thd, (yyvsp[-3].variable).base_name, (yyvsp[0].item), expr_query))
                MYSQL_YYABORT;
            }
            else if ((yyvsp[-3].variable).var)
            {
              /* We're not parsing SP and this is a system variable. */

              if (set_system_variable(thd, &(yyvsp[-3].variable), lex->option_type, (yyvsp[0].item)))
                MYSQL_YYABORT;
            }
            else
            {
              DBUG_ASSERT(sp);
              DBUG_ASSERT(expr_start_ptr);

              /* We're parsing SP and this is an SP-variable. */

              sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
              sp_variable *spv= pctx->find_variable((yyvsp[-3].variable).base_name, false);

              LEX_STRING expr_query= EMPTY_STR;

              if (!(yyvsp[0].item))
              {
                // This is: SET x = DEFAULT, where x is a SP-variable.
                // This is not supported.

                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              else if (lex->is_metadata_used())
              {
                expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);

                if (!expr_query.str)
                  MYSQL_YYABORT;
              }

              /*
                NOTE: every SET-expression has its own LEX-object, even if it is
                a multiple SET-statement, like:

                  SET spv1 = expr1, spv2 = expr2, ...

                Every SET-expression has its own sp_instr_set. Thus, the
                instruction owns the LEX-object, i.e. the instruction is
                responsible for destruction of the LEX-object.
              */

              sp_instr_set *i=
                new sp_instr_set(sp->instructions(), lex,
                                 spv->offset, (yyvsp[0].item), expr_query,
                                 true); // The instruction owns its lex.

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
          }
#line 37196 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 15028 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[-2].lex_str), (yyvsp[0].item), false);
            if (item == NULL)
              MYSQL_YYABORT;
            set_var_user *var= new set_var_user(item);
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
          }
#line 37211 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 15039 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].variable).var == trg_new_row_fake_var)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 37223 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 15047 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            struct sys_var_with_base tmp= (yyvsp[-3].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (set_system_variable(thd, &tmp, (yyvsp[-4].var_type), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 15060 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            int flags= (yyvsp[0].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT;
            const CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= new set_var_collation_client(flags,
                                              cs2,
                                              thd->variables.collation_database,
                                              cs2);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
#line 37260 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 15076 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING names= { C_STRING_WITH_LEN("names") };

            if (pctx && pctx->find_variable(names, false))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              my_parse_error(ER(ER_SYNTAX_ERROR));

            MYSQL_YYABORT;
          }
#line 37277 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2440:
#line 15089 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            const CHARSET_INFO *cs2;
            const CHARSET_INFO *cs3;
            int flags= set_var_collation_client::SET_CS_NAMES
                       | ((yyvsp[-1].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT)
                       | ((yyvsp[0].charset) ? set_var_collation_client::SET_CS_COLLATE : 0);
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new set_var_collation_client(flags, cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
#line 37303 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2441:
#line 15111 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING pw= { C_STRING_WITH_LEN("password") };

            if (pctx && pctx->find_variable(pw, false))
            {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
              MYSQL_YYABORT;
            }

            LEX_USER *user= (LEX_USER*) thd->alloc(sizeof(LEX_USER));

            if (!user)
              MYSQL_YYABORT;

            user->host=null_lex_str;
            user->user.str=thd->security_ctx->user;
            user->user.length= strlen(thd->security_ctx->user);

            set_var_password *var= new set_var_password(user, (yyvsp[0].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;

            lex->var_list.push_back(var);
            lex->autocommit= TRUE;
            lex->is_set_password_sql= true;
            lex->is_change_password= TRUE;

            if (sp)
              sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 37342 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 15146 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_USER *user= (yyvsp[-2].lex_user);
            LEX *lex= Lex;
            set_var_password *var;

            var= new set_var_password(user,(yyvsp[0].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
            lex->autocommit= TRUE;
            lex->is_set_password_sql= true;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            /*
              'is_change_password' should be set if the user is setting his
              own password. This is later used to determine if the password
              expiration flag should be reset.
              Either the user exactly matches the currently authroized user or
              the CURRENT_USER keyword was used.

              If CURRENT_USER was used for the <user> rule then
              user->user.str=0. See rule below:
              
              user:
                 [..]
              | CURRENT_USER optional_braces
                {
                 [..]
                  memset($$, 0, sizeof(LEX_USER));
                }
            */
            if (user->user.str ||
                match_authorized_user(&current_thd->main_security_ctx,
                                      user))
              lex->is_change_password= TRUE;
            else
              lex->is_change_password= FALSE;
          }
#line 37385 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 15188 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            /* Best effort lookup for system variable. */
            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              struct sys_var_with_base tmp= {NULL, (yyvsp[0].lex_str)};

              /* Not an SP local variable */
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;

              (yyval.variable)= tmp;
            }
            else
            {
              /*
                Possibly an SP local variable (or a shadowed sysvar).
                Will depend on the context of the SET statement.
              */
              (yyval.variable).var= NULL;
              (yyval.variable).base_name= (yyvsp[0].lex_str);
            }
          }
#line 37417 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 15216 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (check_reserved_words(&(yyvsp[-2].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }

            if (sp && sp->m_type == SP_TYPE_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
            {
              if ((yyvsp[-2].lex_str).str[0]=='O' || (yyvsp[-2].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                MYSQL_YYABORT;
              }
              if (sp->m_trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                MYSQL_YYABORT;
              }
              if (sp->m_trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                MYSQL_YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[0].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
              if (!tmp)
                MYSQL_YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[-2].lex_str);
            }
          }
#line 37467 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 15262 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sys_var *tmp=find_sys_var(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (!tmp)
              MYSQL_YYABORT;
            if (!tmp->is_struct())
              my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
            (yyval.variable).var= tmp;
            (yyval.variable).base_name.str=    (char*) "default";
            (yyval.variable).base_name.length= 7;
          }
#line 37482 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 15283 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[0].num));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_read_only"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
#line 37501 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2451:
#line 15301 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[0].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_isolation"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
#line 37520 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2452:
#line 15318 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 37526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 15319 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 37532 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 15323 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 37538 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 15324 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 37544 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 15325 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 37550 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 15326 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 37556 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 15330 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)=(yyvsp[0].lex_str).str;}
#line 37562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 15332 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_str).length == 0)
             (yyval.simple_string)= (yyvsp[-1].lex_str).str;
            else
            switch (YYTHD->variables.old_passwords) {
              case 1: (yyval.simple_string)= Item_func_old_password::
                alloc(YYTHD, (yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length);
                break;
              case 0:
              case 2: (yyval.simple_string)= Item_func_password::
                create_password_hash_buffer(YYTHD, (yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length);
                break;
            }
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
            Lex->contains_plaintext_password= true;
          }
#line 37584 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 15350 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
		    WARN_DEPRECATED(YYTHD, "OLD_PASSWORD", "PASSWORD");
            (yyval.simple_string)= (yyvsp[-1].lex_str).length ? Item_func_old_password::
              alloc(YYTHD, (yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length) :
              (yyvsp[-1].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
            Lex->contains_plaintext_password= true;
          }
#line 37598 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 15363 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 37604 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 15364 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 37610 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 15366 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ON",  2, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37620 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2464:
#line 15372 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ALL", 3, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37630 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2465:
#line 15378 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("binary", 6, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37640 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2466:
#line 15389 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 37652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2467:
#line 15400 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_BINLOG_FOR_BACKUP;
          }
#line 37660 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 15404 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 37668 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 15408 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 37676 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 15412 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 15427 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
#line 37696 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 15439 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 37702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 15440 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 37708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 15442 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.num)= TL_WRITE_LOW_PRIORITY; 
            WARN_DEPRECATED(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 37717 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 15446 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 37723 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 15451 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 37735 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 15462 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_BINLOG;
          }
#line 37743 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 15466 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 37751 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 15477 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 37771 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 15493 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 37791 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 15509 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 37813 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 15527 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[-2].ha_read_mode),
                                  lex->ident.str, lex->insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 37835 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 15547 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[0].ha_read_mode); }
#line 37841 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 15548 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].lex_str); (yyval.ha_read_mode)=(yyvsp[0].ha_read_mode); }
#line 37847 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 15552 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RFIRST; }
#line 37853 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 15553 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RNEXT;  }
#line 37859 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 15557 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RFIRST; }
#line 37865 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 15558 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RNEXT;  }
#line 37871 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 15559 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RPREV;  }
#line 37877 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 15560 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RLAST;  }
#line 37883 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 15562 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[0].ha_rkey_mode);
            Lex->insert_list= new List_item;
            if (! Lex->insert_list)
              MYSQL_YYABORT;
          }
#line 37894 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 15569 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ha_read_mode)= RKEY;
          }
#line 37902 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 15575 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 37908 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 15576 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 37914 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 15577 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 37920 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 15578 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 37926 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 15579 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 37932 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 15585 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_REVOKE; }
#line 37938 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 15586 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37944 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 15591 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
#line 37953 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2505:
#line 15596 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
#line 37967 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2506:
#line 15606 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
#line 37981 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2507:
#line 15616 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 37989 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 15620 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 37999 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 15628 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_GRANT; }
#line 38005 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 15629 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38011 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 15635 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
#line 38020 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 15641 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
#line 38034 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2513:
#line 15652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
#line 38048 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 15662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 38058 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2517:
#line 15676 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          }
#line 38069 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2518:
#line 15683 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 38078 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15701 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 38084 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15702 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38090 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15704 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 38096 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 15705 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38102 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15707 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 38108 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15708 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38114 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15710 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 38120 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 15711 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38126 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15712 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 38132 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15713 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38138 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 15714 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 38144 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 15715 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 38150 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 15716 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 38156 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 15717 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 38162 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 15718 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 38168 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 15719 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 38174 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 38180 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15721 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 38186 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15722 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 38192 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15723 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 38198 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 15724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 38204 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 15725 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 38210 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 15726 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 38216 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 15727 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 38222 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 15728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 38228 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 15729 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 38234 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 15730 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 38240 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 15731 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 38246 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 15732 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 38252 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 15733 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 38258 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 15734 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 38264 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 15735 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 38270 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 15736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 38276 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 15737 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 38282 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 15741 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38288 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 15742 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38294 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2561:
#line 15752 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lex_str).str;
          }
#line 38308 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 15762 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lex_str).str;
          }
#line 38322 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 15772 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lex_str).str;
          }
#line 38336 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2564:
#line 15785 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 38355 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2565:
#line 15800 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db = (yyvsp[-2].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 38372 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2566:
#line 15813 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 38389 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2567:
#line 15826 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 38402 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2568:
#line 15838 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 38411 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2569:
#line 15843 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 38420 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2570:
#line 15851 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 38429 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2571:
#line 15856 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 38438 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2572:
#line 15864 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user); (yyvsp[-3].lex_user)->password=(yyvsp[0].lex_str);
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            String *password = new (YYTHD->mem_root) String((const char*)(yyvsp[0].lex_str).str,
                                    YYTHD->variables.character_set_client);
            check_password_policy(password);
            /*
              1. Plugin must be resolved
              2. Password must be digested
            */
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
#line 38460 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2573:
#line 15882 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->password= (yyvsp[0].lex_str); 
            if (!strcmp((yyvsp[0].lex_str).str, ""))
            {
              String *password= new (YYTHD->mem_root) String ((const char *)"",
                                     YYTHD->variables.character_set_client);
              check_password_policy(password);
            }
            /*
              1. Plugin must be resolved
            */
            (yyvsp[-4].lex_user)->uses_identified_by_password_clause= true;
          }
#line 38484 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2574:
#line 15902 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_lex_str;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
          }
#line 38500 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 15914 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
          }
#line 38517 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 15927 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->password= null_lex_str;
          }
#line 38526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 15935 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 38535 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 15949 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
#line 38564 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 15978 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 38572 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 15982 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 38580 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 15986 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 38588 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2586:
#line 15990 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 38596 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2587:
#line 15996 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38602 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 16001 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38608 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 16002 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 38614 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 16006 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38620 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 16007 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38626 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 16011 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 38632 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 16013 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 38642 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 16019 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 38652 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2596:
#line 16025 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 38662 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 16031 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 38672 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 16040 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 38682 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 16045 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38688 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 16049 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38694 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 16050 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38700 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2602:
#line 16055 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 38706 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2603:
#line 16056 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 38712 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 16057 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 38718 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 16062 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 38724 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 16063 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 38730 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 16064 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 38736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 16068 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38742 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 16069 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38748 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 16074 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 38761 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 16086 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 38774 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 16096 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 38784 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 16105 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 38794 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 16114 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 38804 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 16127 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38810 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 16133 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[0].num), TRUE))
              MYSQL_YYABORT;
          }
#line 38819 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 16138 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 38831 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 16148 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38837 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 16149 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 38843 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 16150 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 38849 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 16154 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 38855 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 16155 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 38861 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 16159 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              unit->global_parameters= fake;
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 38881 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2625:
#line 16175 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 38891 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 16188 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 38897 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 16189 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 38903 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 16190 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 38909 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 16195 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 38917 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 16199 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 38925 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 16208 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[0].num), FALSE))
              MYSQL_YYABORT;
          }
#line 38934 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 16214 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_context();
            (yyval.select_lex)= (yyvsp[-5].select_lex);
          }
#line 38943 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 16223 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 38951 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 16229 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (mysql_new_select(Lex, 1))
              MYSQL_YYABORT;
          }
#line 38974 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 16250 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->outer_select();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;

            /*
              A subquery (and all the subsequent query blocks in a UNION) can
              add columns to an outer query block. Reserve space for them.
              Aggregate functions in having clause can also add fields to an
              outer select.
            */
            for (SELECT_LEX *temp= child->master_unit()->first_select();
                 temp != NULL; temp= temp->next_select())
            {
              lex->current_select->select_n_where_fields+=
                temp->select_n_where_fields;
              lex->current_select->select_n_having_items+=
                temp->select_n_having_items;
            }
          }
#line 39003 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 16287 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 39009 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 16289 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 39021 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 16296 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 39027 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 16297 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 39033 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 16298 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 39039 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 16300 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 39049 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 16306 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 39059 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 16311 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 39065 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 16322 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39071 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 16324 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39077 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 16326 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39083 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 16359 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 39098 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 16373 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 39106 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 16386 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39112 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 16388 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39118 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 16390 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39124 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 16395 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
#line 39130 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 16400 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 39136 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 16402 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 39142 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 16404 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
#line 39148 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 16409 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 39154 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 16411 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 39160 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 16413 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 39166 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 16418 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_IGNORE,
                                                   MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
#line 39183 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 16435 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39189 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 16441 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
            }
#line 39198 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 16446 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
            }
#line 39207 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 16453 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
            lex->parsing_options.allows_derived= FALSE;
            lex->create_view_select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 39220 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 16462 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            uint len= YYLIP->get_cpp_ptr() - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
            lex->parsing_options.allows_derived= TRUE;
          }
#line 39238 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 16479 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select->master_unit()->first_select()->braces
              (as its done in "select_init2" for "select_part2" rule) is not
              done here.
            */
          }
#line 39258 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 16500 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
#line 39267 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 16509 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->table_list.save_and_clear(&Lex->save_list);
          }
#line 39275 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 16513 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 39283 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 16520 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_check= VIEW_CHECK_NONE; }
#line 39289 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 16522 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
#line 39295 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 16524 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
#line 39301 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 16526 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
#line 39307 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 16543 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $8 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 39315 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 16549 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $12 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 39323 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 16554 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $15 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, (yyvsp[-11].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum trg_action_time_type) (yyvsp[-10].num);
            sp->m_trg_chistics.event= (enum trg_event_type) (yyvsp[-9].num);
            lex->stmt_definition_begin= (yyvsp[-12].simple_string);
            lex->ident.str= (yyvsp[-7].simple_string);
            lex->ident.length= (yyvsp[-3].simple_string) - (yyvsp[-7].simple_string);

            lex->sphead= sp;
            lex->spname= (yyvsp[-11].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 39357 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 16584 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $17 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[-7].table),
                                                   (LEX_STRING*) 0,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 39386 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 16619 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[-4].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yyvsp[-6].simple_string);
            lex->udf.name = (yyvsp[-4].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lex_str).str;
          }
#line 39407 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 16637 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[-4].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yyvsp[-6].simple_string);
            lex->udf.name = (yyvsp[-4].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lex_str).str;
          }
#line 39428 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 16660 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yyvsp[-3].simple_string);
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            /*
              NOTE: the start of the parameters in the query string is
              YYLIP->get_cpp_tok_start() + 1. 1 is the length of '(', which the
              tokenizer has just passed (just YYLIP->get_cpp_tok_start() points
              to the '(').
            */

            sp->m_parser_data.set_parameter_start_ptr(
              YYLIP->get_cpp_tok_start() + 1);
          }
#line 39463 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 16692 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr(
              YYLIP->get_cpp_tok_start());
          }
#line 39472 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 16697 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $10 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
          }
#line 39484 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 16705 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[0].num) == MYSQL_TYPE_STRING || (yyvsp[0].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) (yyvsp[0].num),
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 39511 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 16728 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 39523 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 16736 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::WARN_LEVEL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 39582 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 16794 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yyvsp[-1].simple_string);

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 39606 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 16814 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              NOTE: the start of the parameters in the query string is
              YYLIP->get_cpp_tok_start() + 1. 1 is the length of '(', which the
              tokenizer has just passed (just YYLIP->get_cpp_tok_start() points
              to the '(').
            */

            Lex->sphead->m_parser_data.set_parameter_start_ptr(
              YYLIP->get_cpp_tok_start() + 1);
          }
#line 39622 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 16827 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            Lex->sphead->m_parser_data.set_parameter_end_ptr(
              YYLIP->get_cpp_tok_start());

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 39636 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 16837 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 39648 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 16845 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 39661 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 16859 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 39669 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 16863 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 39677 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 16867 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 39685 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 16871 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 39693 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 16875 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 39701 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 16879 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
          }
#line 39709 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 16886 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 39720 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 16893 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 39731 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 16900 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 39742 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 16909 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39748 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 16910 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39754 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 16914 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 39760 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 16915 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 39766 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 16916 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 39772 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 16920 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 39778 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 16921 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 39784 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 16926 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 39790 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 16928 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 39796 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 16933 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39802 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 16934 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 39808 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 16939 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].lex_str);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 39819 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 16949 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].lex_str);
          }
#line 39829 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 39833 "/mnt/workspace/percona-server-5.6-source-tarballs-new/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (YYTHD, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (YYTHD, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, YYTHD);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, YYTHD);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YYTHD, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, YYTHD);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, YYTHD);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
